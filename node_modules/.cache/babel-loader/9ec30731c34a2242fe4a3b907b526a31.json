{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\localtalk.mobi(react+node)\\\\pro\\\\toptalk-adminpanel\\\\src\\\\layouts\\\\dashboard\\\\LanguagePopover.js\";\nimport { useRef, useState } from 'react'; // material\n\nimport { alpha } from '@material-ui/core/styles';\nimport { Box, MenuItem, ListItemIcon, ListItemText } from '@material-ui/core'; // hooks\n\nimport useLocales from '../../hooks/useLocales'; // components\n\nimport MenuPopover from '../../components/MenuPopover';\nimport { MIconButton } from '../../components/@material-extend'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LanguagePopover() {\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n  const {\n    allLang,\n    currentLang,\n    onChangeLang\n  } = useLocales();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChangeLang = value => {\n    onChangeLang(value);\n    handleClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MIconButton, {\n      ref: anchorRef,\n      onClick: handleOpen,\n      sx: {\n        padding: 0,\n        width: 44,\n        height: 44,\n        ...(open && {\n          bgcolor: theme => alpha(theme.palette.primary.main, theme.palette.action.focusOpacity)\n        })\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentLang.icon,\n        alt: currentLang.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuPopover, {\n      open: open,\n      onClose: handleClose,\n      anchorEl: anchorRef.current,\n      sx: {\n        py: 1\n      },\n      children: allLang.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n        selected: option.value === currentLang.value,\n        onClick: () => handleChangeLang(option.value),\n        sx: {\n          py: 1,\n          px: 2.5\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            component: \"img\",\n            alt: option.label,\n            src: option.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primaryTypographyProps: {\n            variant: 'body2'\n          },\n          children: option.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, option.value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["E:/projects/localtalk.mobi(react+node)/pro/toptalk-adminpanel/src/layouts/dashboard/LanguagePopover.js"],"names":["useRef","useState","alpha","Box","MenuItem","ListItemIcon","ListItemText","useLocales","MenuPopover","MIconButton","LanguagePopover","anchorRef","open","setOpen","allLang","currentLang","onChangeLang","handleOpen","handleClose","handleChangeLang","value","padding","width","height","bgcolor","theme","palette","primary","main","action","focusOpacity","icon","label","current","py","map","option","px","variant"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react';\r\n// material\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport { Box, MenuItem, ListItemIcon, ListItemText } from '@material-ui/core';\r\n// hooks\r\nimport useLocales from '../../hooks/useLocales';\r\n// components\r\nimport MenuPopover from '../../components/MenuPopover';\r\nimport { MIconButton } from '../../components/@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function LanguagePopover() {\r\n  const anchorRef = useRef(null);\r\n  const [open, setOpen] = useState(false);\r\n  const { allLang, currentLang, onChangeLang } = useLocales();\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChangeLang = (value) => {\r\n    onChangeLang(value);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MIconButton\r\n        ref={anchorRef}\r\n        onClick={handleOpen}\r\n        sx={{\r\n          padding: 0,\r\n          width: 44,\r\n          height: 44,\r\n          ...(open && {\r\n            bgcolor: (theme) => alpha(theme.palette.primary.main, theme.palette.action.focusOpacity)\r\n          })\r\n        }}\r\n      >\r\n        <img src={currentLang.icon} alt={currentLang.label} />\r\n      </MIconButton>\r\n\r\n      <MenuPopover open={open} onClose={handleClose} anchorEl={anchorRef.current} sx={{ py: 1 }}>\r\n        {allLang.map((option) => (\r\n          <MenuItem\r\n            key={option.value}\r\n            selected={option.value === currentLang.value}\r\n            onClick={() => handleChangeLang(option.value)}\r\n            sx={{ py: 1, px: 2.5 }}\r\n          >\r\n            <ListItemIcon>\r\n              <Box component=\"img\" alt={option.label} src={option.icon} />\r\n            </ListItemIcon>\r\n            <ListItemText primaryTypographyProps={{ variant: 'body2' }}>{option.label}</ListItemText>\r\n          </MenuItem>\r\n        ))}\r\n      </MenuPopover>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}