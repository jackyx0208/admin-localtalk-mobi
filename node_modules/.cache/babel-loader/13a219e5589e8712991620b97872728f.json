{"ast":null,"code":"import _objectSpread from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"contacts\",\"recipients\",\"onAddRecipient\"];import{Icon}from'@iconify/react';import{useState}from'react';import parse from'autosuggest-highlight/parse';import match from'autosuggest-highlight/match';import checkmarkFill from'@iconify/icons-eva/checkmark-fill';// material\nimport{alpha,styled}from'@material-ui/core/styles';import{Box,Avatar,TextField,Typography,Autocomplete,Chip}from'@material-ui/core';//\nimport SearchNotFound from'../../SearchNotFound';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RootStyle=styled('div')(function(_ref){var theme=_ref.theme;return{display:'flex',alignItems:'center',padding:theme.spacing(2,3)};});var AutocompleteStyle=styled('div')(function(_ref2){var theme=_ref2.theme;return{'& .MuiAutocomplete-root':{minWidth:280,marginLeft:theme.spacing(2),'&.Mui-focused .MuiAutocomplete-inputRoot':{boxShadow:theme.customShadows.z8}},'& .MuiAutocomplete-inputRoot':{transition:theme.transitions.create('box-shadow',{easing:theme.transitions.easing.easeInOut,duration:theme.transitions.duration.shorter}),'& fieldset':{borderWidth:\"1px !important\",borderColor:\"\".concat(theme.palette.grey[50032],\" !important\")}}};});// ----------------------------------------------------------------------\nexport default function ChatHeaderCompose(_ref3){var contacts=_ref3.contacts,recipients=_ref3.recipients,onAddRecipient=_ref3.onAddRecipient,other=_objectWithoutProperties(_ref3,_excluded);var _useState=useState(''),_useState2=_slicedToArray(_useState,2),query=_useState2[0],setQuery=_useState2[1];var handleChangeQuery=function handleChangeQuery(event){setQuery(event.target.value);};var handleAddRecipient=function handleAddRecipient(e,recipient){setQuery('');if(onAddRecipient){onAddRecipient(recipient);}};return/*#__PURE__*/_jsxs(RootStyle,_objectSpread(_objectSpread({},other),{},{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",sx:{color:'text.secondary'},children:\"To:\"}),/*#__PURE__*/_jsx(AutocompleteStyle,{children:/*#__PURE__*/_jsx(Autocomplete,{multiple:true,size:\"small\",disablePortal:true,popupIcon:null,clearText:null,noOptionsText:/*#__PURE__*/_jsx(SearchNotFound,{searchQuery:query}),onChange:handleAddRecipient,onInputChange:handleChangeQuery,options:contacts,getOptionLabel:function getOptionLabel(recipient){return recipient.name;},renderOption:function renderOption(props,recipient,_ref4){var inputValue=_ref4.inputValue,selected=_ref4.selected;var name=recipient.name,avatar=recipient.avatar;var matches=match(name,inputValue);var parts=parse(name,matches);return/*#__PURE__*/_jsxs(\"li\",_objectSpread(_objectSpread({},props),{},{children:[/*#__PURE__*/_jsxs(Box,{sx:{width:32,height:32,overflow:'hidden',borderRadius:'50%',position:'relative'},children:[/*#__PURE__*/_jsx(Avatar,{alt:name,src:avatar}),/*#__PURE__*/_jsx(Box,{sx:_objectSpread({top:0,opacity:0,width:'100%',height:'100%',display:'flex',position:'absolute',alignItems:'center',justifyContent:'center',bgcolor:function bgcolor(theme){return alpha(theme.palette.grey[900],0.8);},transition:function transition(theme){return theme.transitions.create('opacity',{easing:theme.transitions.easing.easeInOut,duration:theme.transitions.duration.shorter});}},selected&&{opacity:1,color:'primary.main'}),children:/*#__PURE__*/_jsx(Icon,{icon:checkmarkFill,width:20,height:20})})]}),/*#__PURE__*/_jsx(Box,{sx:{ml:2}}),parts.map(function(part,index){return/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:part.highlight?'primary':'textPrimary',children:part.text},index);})]}));},renderTags:function renderTags(recipients,getTagProps){return recipients.map(function(recipient,index){var id=recipient.id,name=recipient.name,avatar=recipient.avatar;return/*#__PURE__*/_jsx(Chip,_objectSpread({size:\"small\",label:name,color:\"info\",avatar:/*#__PURE__*/_jsx(Avatar,{alt:name,src:avatar})},getTagProps({index:index})),id);});},renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{placeholder:recipients.length===0?'Recipients':''}));}})})]}));}","map":{"version":3,"sources":["E:/projects/localtalk.mobi/mobilechat-adminpanel/src/components/_dashboard/chat/ChatHeaderCompose.js"],"names":["Icon","useState","parse","match","checkmarkFill","alpha","styled","Box","Avatar","TextField","Typography","Autocomplete","Chip","SearchNotFound","RootStyle","theme","display","alignItems","padding","spacing","AutocompleteStyle","minWidth","marginLeft","boxShadow","customShadows","z8","transition","transitions","create","easing","easeInOut","duration","shorter","borderWidth","borderColor","palette","grey","ChatHeaderCompose","contacts","recipients","onAddRecipient","other","query","setQuery","handleChangeQuery","event","target","value","handleAddRecipient","e","recipient","color","name","props","inputValue","selected","avatar","matches","parts","width","height","overflow","borderRadius","position","top","opacity","justifyContent","bgcolor","ml","map","part","index","highlight","text","getTagProps","id","params","length"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport { useState } from 'react';\r\nimport parse from 'autosuggest-highlight/parse';\r\nimport match from 'autosuggest-highlight/match';\r\nimport checkmarkFill from '@iconify/icons-eva/checkmark-fill';\r\n// material\r\nimport { alpha, styled } from '@material-ui/core/styles';\r\nimport { Box, Avatar, TextField, Typography, Autocomplete, Chip } from '@material-ui/core';\r\n//\r\nimport SearchNotFound from '../../SearchNotFound';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(2, 3)\r\n}));\r\n\r\nconst AutocompleteStyle = styled('div')(({ theme }) => ({\r\n  '& .MuiAutocomplete-root': {\r\n    minWidth: 280,\r\n    marginLeft: theme.spacing(2),\r\n    '&.Mui-focused .MuiAutocomplete-inputRoot': {\r\n      boxShadow: theme.customShadows.z8\r\n    }\r\n  },\r\n  '& .MuiAutocomplete-inputRoot': {\r\n    transition: theme.transitions.create('box-shadow', {\r\n      easing: theme.transitions.easing.easeInOut,\r\n      duration: theme.transitions.duration.shorter\r\n    }),\r\n    '& fieldset': {\r\n      borderWidth: `1px !important`,\r\n      borderColor: `${theme.palette.grey[500_32]} !important`\r\n    }\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatHeaderCompose.propTypes = {\r\n  contacts: PropTypes.array,\r\n  recipients: PropTypes.array,\r\n  onAddRecipient: PropTypes.func\r\n};\r\n\r\nexport default function ChatHeaderCompose({ contacts, recipients, onAddRecipient, ...other }) {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleChangeQuery = (event) => {\r\n    setQuery(event.target.value);\r\n  };\r\n\r\n  const handleAddRecipient = (e, recipient) => {\r\n    setQuery('');\r\n    if (onAddRecipient) {\r\n      onAddRecipient(recipient);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <RootStyle {...other}>\r\n      <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\r\n        To:\r\n      </Typography>\r\n\r\n      <AutocompleteStyle>\r\n        <Autocomplete\r\n          multiple\r\n          size=\"small\"\r\n          disablePortal\r\n          popupIcon={null}\r\n          clearText={null}\r\n          noOptionsText={<SearchNotFound searchQuery={query} />}\r\n          onChange={handleAddRecipient}\r\n          onInputChange={handleChangeQuery}\r\n          options={contacts}\r\n          getOptionLabel={(recipient) => recipient.name}\r\n          renderOption={(props, recipient, { inputValue, selected }) => {\r\n            const { name, avatar } = recipient;\r\n            const matches = match(name, inputValue);\r\n            const parts = parse(name, matches);\r\n            return (\r\n              <li {...props}>\r\n                <Box\r\n                  sx={{\r\n                    width: 32,\r\n                    height: 32,\r\n                    overflow: 'hidden',\r\n                    borderRadius: '50%',\r\n                    position: 'relative'\r\n                  }}\r\n                >\r\n                  <Avatar alt={name} src={avatar} />\r\n                  <Box\r\n                    sx={{\r\n                      top: 0,\r\n                      opacity: 0,\r\n                      width: '100%',\r\n                      height: '100%',\r\n                      display: 'flex',\r\n                      position: 'absolute',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                      bgcolor: (theme) => alpha(theme.palette.grey[900], 0.8),\r\n                      transition: (theme) =>\r\n                        theme.transitions.create('opacity', {\r\n                          easing: theme.transitions.easing.easeInOut,\r\n                          duration: theme.transitions.duration.shorter\r\n                        }),\r\n                      ...(selected && {\r\n                        opacity: 1,\r\n                        color: 'primary.main'\r\n                      })\r\n                    }}\r\n                  >\r\n                    <Icon icon={checkmarkFill} width={20} height={20} />\r\n                  </Box>\r\n                </Box>\r\n                <Box sx={{ ml: 2 }} />\r\n                {parts.map((part, index) => (\r\n                  <Typography key={index} variant=\"subtitle2\" color={part.highlight ? 'primary' : 'textPrimary'}>\r\n                    {part.text}\r\n                  </Typography>\r\n                ))}\r\n              </li>\r\n            );\r\n          }}\r\n          renderTags={(recipients, getTagProps) =>\r\n            recipients.map((recipient, index) => {\r\n              const { id, name, avatar } = recipient;\r\n              return (\r\n                <Chip\r\n                  key={id}\r\n                  size=\"small\"\r\n                  label={name}\r\n                  color=\"info\"\r\n                  avatar={<Avatar alt={name} src={avatar} />}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              );\r\n            })\r\n          }\r\n          renderInput={(params) => <TextField {...params} placeholder={recipients.length === 0 ? 'Recipients' : ''} />}\r\n        />\r\n      </AutocompleteStyle>\r\n    </RootStyle>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}