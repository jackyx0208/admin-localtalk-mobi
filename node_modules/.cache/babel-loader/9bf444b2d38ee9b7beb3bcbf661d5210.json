{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\localtalk.mobi(back)\\\\pro\\\\toptalk-adminpanel\\\\src\\\\components\\\\_dashboard\\\\general-analytics\\\\AnalyticsTrafficBySite.js\";\nimport PropTypes from 'prop-types';\nimport { random } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport googleFill from '@iconify/icons-eva/google-fill';\nimport twitterFill from '@iconify/icons-eva/twitter-fill';\nimport facebookFill from '@iconify/icons-eva/facebook-fill';\nimport linkedinFill from '@iconify/icons-eva/linkedin-fill'; // material\n\nimport { Box, Grid, Card, Paper, Typography, CardHeader, CardContent } from '@material-ui/core'; // utils\n\nimport { fShortenNumber } from '../../../utils/formatNumber'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ICON_SIZE = {\n  width: 32,\n  height: 32\n};\nconst MOCK_SOCIALS = [{\n  name: 'FaceBook',\n  value: random(9999, 99999),\n  icon: /*#__PURE__*/_jsxDEV(Icon, {\n    icon: facebookFill,\n    color: \"#1877F2\",\n    ...ICON_SIZE\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 11\n  }, this)\n}, {\n  name: 'Google',\n  value: random(9999, 99999),\n  icon: /*#__PURE__*/_jsxDEV(Icon, {\n    icon: googleFill,\n    color: \"#DF3E30\",\n    ...ICON_SIZE\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 11\n  }, this)\n}, {\n  name: 'Linkedin',\n  value: random(9999, 99999),\n  icon: /*#__PURE__*/_jsxDEV(Icon, {\n    icon: linkedinFill,\n    color: \"#006097\",\n    ...ICON_SIZE\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 11\n  }, this)\n}, {\n  name: 'Twitter',\n  value: random(9999, 99999),\n  icon: /*#__PURE__*/_jsxDEV(Icon, {\n    icon: twitterFill,\n    color: \"#1C9CEA\",\n    ...ICON_SIZE\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 11\n  }, this)\n}]; // ----------------------------------------------------------------------\n\nSiteItem.propTypes = {\n  site: PropTypes.shape({\n    icon: PropTypes.object,\n    name: PropTypes.string,\n    value: PropTypes.number\n  })\n};\n\nfunction SiteItem({\n  site\n}) {\n  const {\n    icon,\n    value,\n    name\n  } = site;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 6,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      variant: \"outlined\",\n      sx: {\n        py: 2.5,\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 0.5\n        },\n        children: icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: fShortenNumber(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          color: 'text.secondary'\n        },\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_c = SiteItem;\nexport default function AnalyticsTrafficBySite() {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: \"Traffic by Site\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: MOCK_SOCIALS.map(site => /*#__PURE__*/_jsxDEV(SiteItem, {\n          site: site\n        }, site.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_c2 = AnalyticsTrafficBySite;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SiteItem\");\n$RefreshReg$(_c2, \"AnalyticsTrafficBySite\");","map":{"version":3,"sources":["E:/projects/localtalk.mobi(back)/pro/toptalk-adminpanel/src/components/_dashboard/general-analytics/AnalyticsTrafficBySite.js"],"names":["PropTypes","random","Icon","googleFill","twitterFill","facebookFill","linkedinFill","Box","Grid","Card","Paper","Typography","CardHeader","CardContent","fShortenNumber","ICON_SIZE","width","height","MOCK_SOCIALS","name","value","icon","SiteItem","propTypes","site","shape","object","string","number","py","textAlign","mb","color","AnalyticsTrafficBySite","map"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,YAAP,MAAyB,kCAAzB,C,CACA;;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,UAAjC,EAA6CC,UAA7C,EAAyDC,WAAzD,QAA4E,mBAA5E,C,CACA;;AACA,SAASC,cAAT,QAA+B,6BAA/B,C,CAEA;;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,EADS;AAEhBC,EAAAA,MAAM,EAAE;AAFQ,CAAlB;AAKA,MAAMC,YAAY,GAAG,CACnB;AACEC,EAAAA,IAAI,EAAE,UADR;AAEEC,EAAAA,KAAK,EAAEnB,MAAM,CAAC,IAAD,EAAO,KAAP,CAFf;AAGEoB,EAAAA,IAAI,eAAE,QAAC,IAAD;AAAM,IAAA,IAAI,EAAEhB,YAAZ;AAA0B,IAAA,KAAK,EAAC,SAAhC;AAAA,OAA8CU;AAA9C;AAAA;AAAA;AAAA;AAAA;AAHR,CADmB,EAMnB;AACEI,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,KAAK,EAAEnB,MAAM,CAAC,IAAD,EAAO,KAAP,CAFf;AAGEoB,EAAAA,IAAI,eAAE,QAAC,IAAD;AAAM,IAAA,IAAI,EAAElB,UAAZ;AAAwB,IAAA,KAAK,EAAC,SAA9B;AAAA,OAA4CY;AAA5C;AAAA;AAAA;AAAA;AAAA;AAHR,CANmB,EAWnB;AACEI,EAAAA,IAAI,EAAE,UADR;AAEEC,EAAAA,KAAK,EAAEnB,MAAM,CAAC,IAAD,EAAO,KAAP,CAFf;AAGEoB,EAAAA,IAAI,eAAE,QAAC,IAAD;AAAM,IAAA,IAAI,EAAEf,YAAZ;AAA0B,IAAA,KAAK,EAAC,SAAhC;AAAA,OAA8CS;AAA9C;AAAA;AAAA;AAAA;AAAA;AAHR,CAXmB,EAgBnB;AACEI,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,KAAK,EAAEnB,MAAM,CAAC,IAAD,EAAO,KAAP,CAFf;AAGEoB,EAAAA,IAAI,eAAE,QAAC,IAAD;AAAM,IAAA,IAAI,EAAEjB,WAAZ;AAAyB,IAAA,KAAK,EAAC,SAA/B;AAAA,OAA6CW;AAA7C;AAAA;AAAA;AAAA;AAAA;AAHR,CAhBmB,CAArB,C,CAuBA;;AAEAO,QAAQ,CAACC,SAAT,GAAqB;AACnBC,EAAAA,IAAI,EAAExB,SAAS,CAACyB,KAAV,CAAgB;AACpBJ,IAAAA,IAAI,EAAErB,SAAS,CAAC0B,MADI;AAEpBP,IAAAA,IAAI,EAAEnB,SAAS,CAAC2B,MAFI;AAGpBP,IAAAA,KAAK,EAAEpB,SAAS,CAAC4B;AAHG,GAAhB;AADa,CAArB;;AAQA,SAASN,QAAT,CAAkB;AAAEE,EAAAA;AAAF,CAAlB,EAA4B;AAC1B,QAAM;AAAEH,IAAAA,IAAF;AAAQD,IAAAA,KAAR;AAAeD,IAAAA;AAAf,MAAwBK,IAA9B;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC,UAAf;AAA0B,MAAA,EAAE,EAAE;AAAEK,QAAAA,EAAE,EAAE,GAAN;AAAWC,QAAAA,SAAS,EAAE;AAAtB,OAA9B;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAAT;AAAA,kBAAuBV;AAAvB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA,kBAA0BP,cAAc,CAACM,KAAD;AAAxC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAA4B,QAAA,EAAE,EAAE;AAAEY,UAAAA,KAAK,EAAE;AAAT,SAAhC;AAAA,kBACGb;AADH;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;KAdQG,Q;AAgBT,eAAe,SAASW,sBAAT,GAAkC;AAC/C,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,kBACGf,YAAY,CAACgB,GAAb,CAAkBV,IAAD,iBAChB,QAAC,QAAD;AAA0B,UAAA,IAAI,EAAEA;AAAhC,WAAeA,IAAI,CAACL,IAApB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;MAbuBc,sB","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { random } from 'lodash';\r\nimport { Icon } from '@iconify/react';\r\nimport googleFill from '@iconify/icons-eva/google-fill';\r\nimport twitterFill from '@iconify/icons-eva/twitter-fill';\r\nimport facebookFill from '@iconify/icons-eva/facebook-fill';\r\nimport linkedinFill from '@iconify/icons-eva/linkedin-fill';\r\n// material\r\nimport { Box, Grid, Card, Paper, Typography, CardHeader, CardContent } from '@material-ui/core';\r\n// utils\r\nimport { fShortenNumber } from '../../../utils/formatNumber';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst ICON_SIZE = {\r\n  width: 32,\r\n  height: 32\r\n};\r\n\r\nconst MOCK_SOCIALS = [\r\n  {\r\n    name: 'FaceBook',\r\n    value: random(9999, 99999),\r\n    icon: <Icon icon={facebookFill} color=\"#1877F2\" {...ICON_SIZE} />\r\n  },\r\n  {\r\n    name: 'Google',\r\n    value: random(9999, 99999),\r\n    icon: <Icon icon={googleFill} color=\"#DF3E30\" {...ICON_SIZE} />\r\n  },\r\n  {\r\n    name: 'Linkedin',\r\n    value: random(9999, 99999),\r\n    icon: <Icon icon={linkedinFill} color=\"#006097\" {...ICON_SIZE} />\r\n  },\r\n  {\r\n    name: 'Twitter',\r\n    value: random(9999, 99999),\r\n    icon: <Icon icon={twitterFill} color=\"#1C9CEA\" {...ICON_SIZE} />\r\n  }\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nSiteItem.propTypes = {\r\n  site: PropTypes.shape({\r\n    icon: PropTypes.object,\r\n    name: PropTypes.string,\r\n    value: PropTypes.number\r\n  })\r\n};\r\n\r\nfunction SiteItem({ site }) {\r\n  const { icon, value, name } = site;\r\n\r\n  return (\r\n    <Grid item xs={6}>\r\n      <Paper variant=\"outlined\" sx={{ py: 2.5, textAlign: 'center' }}>\r\n        <Box sx={{ mb: 0.5 }}>{icon}</Box>\r\n        <Typography variant=\"h6\">{fShortenNumber(value)}</Typography>\r\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n          {name}\r\n        </Typography>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default function AnalyticsTrafficBySite() {\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Traffic by Site\" />\r\n      <CardContent>\r\n        <Grid container spacing={2}>\r\n          {MOCK_SOCIALS.map((site) => (\r\n            <SiteItem key={site.name} site={site} />\r\n          ))}\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}