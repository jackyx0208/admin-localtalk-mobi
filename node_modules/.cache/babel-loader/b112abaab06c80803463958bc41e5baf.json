{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit'; // utils\n\nimport axios from '../../utils/axios'; // ----------------------------------------------------------------------\n\nfunction objFromArray(array, key = 'id') {\n  return array.reduce((accumulator, current) => {\n    accumulator[current[key]] = current;\n    return accumulator;\n  }, {});\n}\n\nconst initialState = {\n  isLoading: false,\n  error: false,\n  mails: {\n    byId: {},\n    allIds: []\n  },\n  labels: []\n};\nconst slice = createSlice({\n  name: 'mail',\n  initialState,\n  reducers: {\n    // START LOADING\n    startLoading(state) {\n      state.isLoading = true;\n    },\n\n    // HAS ERROR\n    hasError(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n\n    // GET LABELS\n    getLabelsSuccess(state, action) {\n      state.isLoading = false;\n      state.labels = action.payload;\n    },\n\n    // GET MAILS\n    getMailsSuccess(state, action) {\n      const mails = action.payload;\n      state.isLoading = false;\n      state.mails.byId = objFromArray(mails);\n      state.mails.allIds = Object.keys(state.mails.byId);\n    },\n\n    // GET MAIL\n    getMailSuccess(state, action) {\n      const mail = action.payload;\n      state.mails.byId[mail.id] = mail;\n\n      if (!state.mails.allIds.includes(mail.id)) {\n        state.mails.allIds.push(mail.id);\n      }\n    }\n\n  }\n}); // Reducer\n\nexport default slice.reducer; // ----------------------------------------------------------------------\n\nexport function getLabels() {\n  return async dispatch => {\n    dispatch(slice.actions.startLoading());\n\n    try {\n      const response = await axios.get('/api/mail/labels');\n      dispatch(slice.actions.getLabelsSuccess(response.data.labels));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n} // ----------------------------------------------------------------------\n\nexport function getMails(params) {\n  return async dispatch => {\n    dispatch(slice.actions.startLoading());\n\n    try {\n      const response = await axios.get('/api/mail/mails', {\n        params\n      });\n      dispatch(slice.actions.getMailsSuccess(response.data.mails));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n} // ----------------------------------------------------------------------\n\nexport function getMail(mailId) {\n  return async dispatch => {\n    dispatch(slice.actions.startLoading());\n\n    try {\n      const response = await axios.get('/api/mail/mail', {\n        params: {\n          mailId\n        }\n      });\n      dispatch(slice.actions.getMailSuccess(response.data.mail));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}","map":{"version":3,"sources":["E:/projects/localtalk.mobi/mobilechat-adminpanel/src/redux/slices/mail.js"],"names":["createSlice","axios","objFromArray","array","key","reduce","accumulator","current","initialState","isLoading","error","mails","byId","allIds","labels","slice","name","reducers","startLoading","state","hasError","action","payload","getLabelsSuccess","getMailsSuccess","Object","keys","getMailSuccess","mail","id","includes","push","reducer","getLabels","dispatch","actions","response","get","data","getMails","params","getMail","mailId"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n// utils\r\nimport axios from '../../utils/axios';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction objFromArray(array, key = 'id') {\r\n  return array.reduce((accumulator, current) => {\r\n    accumulator[current[key]] = current;\r\n    return accumulator;\r\n  }, {});\r\n}\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  error: false,\r\n  mails: { byId: {}, allIds: [] },\r\n  labels: []\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: 'mail',\r\n  initialState,\r\n  reducers: {\r\n    // START LOADING\r\n    startLoading(state) {\r\n      state.isLoading = true;\r\n    },\r\n\r\n    // HAS ERROR\r\n    hasError(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    // GET LABELS\r\n    getLabelsSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.labels = action.payload;\r\n    },\r\n\r\n    // GET MAILS\r\n    getMailsSuccess(state, action) {\r\n      const mails = action.payload;\r\n\r\n      state.isLoading = false;\r\n      state.mails.byId = objFromArray(mails);\r\n      state.mails.allIds = Object.keys(state.mails.byId);\r\n    },\r\n\r\n    // GET MAIL\r\n    getMailSuccess(state, action) {\r\n      const mail = action.payload;\r\n\r\n      state.mails.byId[mail.id] = mail;\r\n      if (!state.mails.allIds.includes(mail.id)) {\r\n        state.mails.allIds.push(mail.id);\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\n// Reducer\r\nexport default slice.reducer;\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function getLabels() {\r\n  return async (dispatch) => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await axios.get('/api/mail/labels');\r\n      dispatch(slice.actions.getLabelsSuccess(response.data.labels));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function getMails(params) {\r\n  return async (dispatch) => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await axios.get('/api/mail/mails', { params });\r\n      dispatch(slice.actions.getMailsSuccess(response.data.mails));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function getMail(mailId) {\r\n  return async (dispatch) => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await axios.get('/api/mail/mail', {\r\n        params: { mailId }\r\n      });\r\n      dispatch(slice.actions.getMailSuccess(response.data.mail));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}