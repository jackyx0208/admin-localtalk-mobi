{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\localtalk.mobi\\\\mobilechat-adminpanel\\\\src\\\\components\\\\_dashboard\\\\general-analytics\\\\AnalyticsTasks.js\";\nimport { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, FormikProvider, useFormik } from 'formik';\nimport { Icon } from '@iconify/react';\nimport editFill from '@iconify/icons-eva/edit-fill';\nimport shareFill from '@iconify/icons-eva/share-fill';\nimport trash2Outline from '@iconify/icons-eva/trash-2-outline';\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\nimport checkmarkCircle2Fill from '@iconify/icons-eva/checkmark-circle-2-fill'; // material\n\nimport { Box, Card, Menu, Stack, Divider, Checkbox, MenuItem, CardHeader, Typography, FormControlLabel } from '@material-ui/core'; //\n\nimport { MIconButton } from '../../@material-extend'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TASKS = ['Create FireStone Logo', 'Add SCSS and JS files if required', 'Stakeholder Meeting', 'Scoping & Estimations', 'Sprint Showcase']; // ----------------------------------------------------------------------\n\nfunction MoreMenuButton() {\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MIconButton, {\n      ref: anchorRef,\n      size: \"large\",\n      onClick: handleOpen,\n      children: /*#__PURE__*/_jsxDEV(Icon, {\n        icon: moreVerticalFill,\n        width: 20,\n        height: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      open: open,\n      anchorEl: anchorRef.current,\n      onClose: handleClose,\n      PaperProps: {\n        sx: {\n          width: 200,\n          maxWidth: '100%'\n        }\n      },\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          icon: checkmarkCircle2Fill,\n          width: 20,\n          height: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            ml: 2\n          },\n          children: \"Mark Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          icon: editFill,\n          width: 20,\n          height: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            ml: 2\n          },\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          icon: shareFill,\n          width: 20,\n          height: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            ml: 2\n          },\n          children: \"Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        sx: {\n          color: 'error.main'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          icon: trash2Outline,\n          width: 20,\n          height: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            ml: 2\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nTaskItem.propTypes = {\n  task: PropTypes.string,\n  checked: PropTypes.bool,\n  formik: PropTypes.object\n};\n\nfunction TaskItem({\n  task,\n  checked,\n  formik,\n  ...other\n}) {\n  const {\n    getFieldProps\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: \"row\",\n    justifyContent: \"space-between\",\n    sx: {\n      py: 0.75\n    },\n    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, { ...getFieldProps('checked'),\n        value: task,\n        checked: checked,\n        ...other\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 18\n      }, this),\n      label: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: { ...(checked && {\n            color: 'text.disabled',\n            textDecoration: 'line-through'\n          })\n        },\n        children: task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MoreMenuButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n\nexport default function AnalyticsTasks() {\n  const formik = useFormik({\n    initialValues: {\n      checked: [TASKS[2]]\n    },\n    onSubmit: values => {\n      console.log(values);\n    }\n  });\n  const {\n    values,\n    handleSubmit\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        px: 3,\n        py: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(FormikProvider, {\n        value: formik,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          autoComplete: \"off\",\n          noValidate: true,\n          onSubmit: handleSubmit,\n          children: TASKS.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n            task: task,\n            formik: formik,\n            checked: values.checked.includes(task)\n          }, task, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["E:/projects/localtalk.mobi/mobilechat-adminpanel/src/components/_dashboard/general-analytics/AnalyticsTasks.js"],"names":["useRef","useState","PropTypes","Form","FormikProvider","useFormik","Icon","editFill","shareFill","trash2Outline","moreVerticalFill","checkmarkCircle2Fill","Box","Card","Menu","Stack","Divider","Checkbox","MenuItem","CardHeader","Typography","FormControlLabel","MIconButton","TASKS","MoreMenuButton","anchorRef","open","setOpen","handleOpen","handleClose","current","sx","width","maxWidth","vertical","horizontal","ml","color","TaskItem","propTypes","task","string","checked","bool","formik","object","other","getFieldProps","py","textDecoration","AnalyticsTasks","initialValues","onSubmit","values","console","log","handleSubmit","px","map","includes"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, FormikProvider, useFormik } from 'formik';\r\nimport { Icon } from '@iconify/react';\r\nimport editFill from '@iconify/icons-eva/edit-fill';\r\nimport shareFill from '@iconify/icons-eva/share-fill';\r\nimport trash2Outline from '@iconify/icons-eva/trash-2-outline';\r\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\r\nimport checkmarkCircle2Fill from '@iconify/icons-eva/checkmark-circle-2-fill';\r\n// material\r\nimport {\r\n  Box,\r\n  Card,\r\n  Menu,\r\n  Stack,\r\n  Divider,\r\n  Checkbox,\r\n  MenuItem,\r\n  CardHeader,\r\n  Typography,\r\n  FormControlLabel\r\n} from '@material-ui/core';\r\n//\r\nimport { MIconButton } from '../../@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TASKS = [\r\n  'Create FireStone Logo',\r\n  'Add SCSS and JS files if required',\r\n  'Stakeholder Meeting',\r\n  'Scoping & Estimations',\r\n  'Sprint Showcase'\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction MoreMenuButton() {\r\n  const anchorRef = useRef(null);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MIconButton ref={anchorRef} size=\"large\" onClick={handleOpen}>\r\n        <Icon icon={moreVerticalFill} width={20} height={20} />\r\n      </MIconButton>\r\n\r\n      <Menu\r\n        open={open}\r\n        anchorEl={anchorRef.current}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          sx: { width: 200, maxWidth: '100%' }\r\n        }}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      >\r\n        <MenuItem>\r\n          <Icon icon={checkmarkCircle2Fill} width={20} height={20} />\r\n          <Typography variant=\"body2\" sx={{ ml: 2 }}>\r\n            Mark Complete\r\n          </Typography>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <Icon icon={editFill} width={20} height={20} />\r\n          <Typography variant=\"body2\" sx={{ ml: 2 }}>\r\n            Edit\r\n          </Typography>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <Icon icon={shareFill} width={20} height={20} />\r\n          <Typography variant=\"body2\" sx={{ ml: 2 }}>\r\n            Share\r\n          </Typography>\r\n        </MenuItem>\r\n        <Divider />\r\n        <MenuItem sx={{ color: 'error.main' }}>\r\n          <Icon icon={trash2Outline} width={20} height={20} />\r\n          <Typography variant=\"body2\" sx={{ ml: 2 }}>\r\n            Delete\r\n          </Typography>\r\n        </MenuItem>\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n\r\nTaskItem.propTypes = {\r\n  task: PropTypes.string,\r\n  checked: PropTypes.bool,\r\n  formik: PropTypes.object\r\n};\r\n\r\nfunction TaskItem({ task, checked, formik, ...other }) {\r\n  const { getFieldProps } = formik;\r\n\r\n  return (\r\n    <Stack direction=\"row\" justifyContent=\"space-between\" sx={{ py: 0.75 }}>\r\n      <FormControlLabel\r\n        control={<Checkbox {...getFieldProps('checked')} value={task} checked={checked} {...other} />}\r\n        label={\r\n          <Typography\r\n            variant=\"body2\"\r\n            sx={{\r\n              ...(checked && {\r\n                color: 'text.disabled',\r\n                textDecoration: 'line-through'\r\n              })\r\n            }}\r\n          >\r\n            {task}\r\n          </Typography>\r\n        }\r\n      />\r\n      <MoreMenuButton />\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default function AnalyticsTasks() {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      checked: [TASKS[2]]\r\n    },\r\n    onSubmit: (values) => {\r\n      console.log(values);\r\n    }\r\n  });\r\n\r\n  const { values, handleSubmit } = formik;\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Tasks\" />\r\n      <Box sx={{ px: 3, py: 1 }}>\r\n        <FormikProvider value={formik}>\r\n          <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n            {TASKS.map((task) => (\r\n              <TaskItem key={task} task={task} formik={formik} checked={values.checked.includes(task)} />\r\n            ))}\r\n          </Form>\r\n        </FormikProvider>\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}