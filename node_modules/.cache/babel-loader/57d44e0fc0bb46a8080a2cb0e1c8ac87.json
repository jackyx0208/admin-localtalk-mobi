{"ast":null,"code":"import{useEffect}from'react';import{paramCase}from'change-case';import{useParams,useLocation}from'react-router-dom';// material\nimport{Container}from'@material-ui/core';// redux\nimport{useDispatch,useSelector}from'../../redux/store';import{getUserList,getSpecialPermssionList}from'../../redux/slices/user';// routes\nimport{PATH_DASHBOARD}from'../../routes/paths';// hooks\nimport useSettings from'../../hooks/useSettings';// components\nimport Page from'../../components/Page';import HeaderBreadcrumbs from'../../components/HeaderBreadcrumbs';import UserNewForm from'../../components/_dashboard/user/UserNewForm';import UserSpecialPermissionsForm from'../../components/_dashboard/user/UserSpecialPermissionsForm';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function UserCreate(){var _useSettings=useSettings(),themeStretch=_useSettings.themeStretch;var dispatch=useDispatch();var _useLocation=useLocation(),pathname=_useLocation.pathname;var _useParams=useParams(),userId=_useParams.userId;var _useSelector=useSelector(function(state){return state.user;}),userList=_useSelector.userList,specialPermissionList=_useSelector.specialPermissionList;var isEdit=pathname.includes('edit');var currentUser=userList.find(function(user){return paramCase(user._id)===userId;});// console.log(specialPermissionList);\nvar userSpecialPermissions=specialPermissionList.find(function(specialPermssion){return paramCase(specialPermssion.userId)===userId;});useEffect(function(){dispatch(getUserList());dispatch(getSpecialPermssionList());},[dispatch]);return/*#__PURE__*/_jsx(Page,{title:\"User: Create a new user | Locals\",children:/*#__PURE__*/_jsxs(Container,{maxWidth:themeStretch?false:'lg',children:[/*#__PURE__*/_jsx(HeaderBreadcrumbs,{heading:!isEdit?'Create a new user':'Edit user',links:[{name:'Dashboard',href:PATH_DASHBOARD.root},{name:'User',href:PATH_DASHBOARD.user.list},{name:!isEdit?'New user':currentUser&&currentUser.name||''}]}),/*#__PURE__*/_jsx(UserNewForm,{isEdit:isEdit,currentUser:currentUser}),isEdit&&/*#__PURE__*/_jsx(UserSpecialPermissionsForm,{currentUser:currentUser,userSpecialPermissions:userSpecialPermissions})]})});}","map":{"version":3,"sources":["E:/projects/localtalk.mobi/mobilechat-adminpanel/src/pages/dashboard/UserCreate.js"],"names":["useEffect","paramCase","useParams","useLocation","Container","useDispatch","useSelector","getUserList","getSpecialPermssionList","PATH_DASHBOARD","useSettings","Page","HeaderBreadcrumbs","UserNewForm","UserSpecialPermissionsForm","UserCreate","themeStretch","dispatch","pathname","userId","state","user","userList","specialPermissionList","isEdit","includes","currentUser","find","_id","userSpecialPermissions","specialPermssion","name","href","root","list"],"mappings":"AAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,OAASC,SAAT,KAA0B,aAA1B,CACA,OAASC,SAAT,CAAoBC,WAApB,KAAuC,kBAAvC,CACA;AACA,OAASC,SAAT,KAA0B,mBAA1B,CACA;AACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,mBAAzC,CACA,OAASC,WAAT,CAAsBC,uBAAtB,KAAqD,yBAArD,CACA;AACA,OAASC,cAAT,KAA+B,oBAA/B,CACA;AACA,MAAOC,CAAAA,WAAP,KAAwB,yBAAxB,CACA;AACA,MAAOC,CAAAA,IAAP,KAAiB,uBAAjB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,oCAA9B,CACA,MAAOC,CAAAA,WAAP,KAAwB,8CAAxB,CACA,MAAOC,CAAAA,0BAAP,KAAuC,6DAAvC,CAEA;wFAEA,cAAe,SAASC,CAAAA,UAAT,EAAsB,CACnC,iBAAyBL,WAAW,EAApC,CAAQM,YAAR,cAAQA,YAAR,CACA,GAAMC,CAAAA,QAAQ,CAAGZ,WAAW,EAA5B,CACA,iBAAqBF,WAAW,EAAhC,CAAQe,QAAR,cAAQA,QAAR,CACA,eAAmBhB,SAAS,EAA5B,CAAQiB,MAAR,YAAQA,MAAR,CACA,iBAA4Cb,WAAW,CAAC,SAACc,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAjB,EAAD,CAAvD,CAAQC,QAAR,cAAQA,QAAR,CAAkBC,qBAAlB,cAAkBA,qBAAlB,CACA,GAAMC,CAAAA,MAAM,CAAGN,QAAQ,CAACO,QAAT,CAAkB,MAAlB,CAAf,CACA,GAAMC,CAAAA,WAAW,CAAGJ,QAAQ,CAACK,IAAT,CAAc,SAACN,IAAD,QAAUpB,CAAAA,SAAS,CAACoB,IAAI,CAACO,GAAN,CAAT,GAAwBT,MAAlC,EAAd,CAApB,CACA;AACA,GAAMU,CAAAA,sBAAsB,CAAGN,qBAAqB,CAACI,IAAtB,CAC7B,SAACG,gBAAD,QAAsB7B,CAAAA,SAAS,CAAC6B,gBAAgB,CAACX,MAAlB,CAAT,GAAuCA,MAA7D,EAD6B,CAA/B,CAIAnB,SAAS,CAAC,UAAM,CACdiB,QAAQ,CAACV,WAAW,EAAZ,CAAR,CACAU,QAAQ,CAACT,uBAAuB,EAAxB,CAAR,CACD,CAHQ,CAGN,CAACS,QAAD,CAHM,CAAT,CAKA,mBACE,KAAC,IAAD,EAAM,KAAK,CAAC,kCAAZ,uBACE,MAAC,SAAD,EAAW,QAAQ,CAAED,YAAY,CAAG,KAAH,CAAW,IAA5C,wBACE,KAAC,iBAAD,EACE,OAAO,CAAE,CAACQ,MAAD,CAAU,mBAAV,CAAgC,WAD3C,CAEE,KAAK,CAAE,CACL,CAAEO,IAAI,CAAE,WAAR,CAAqBC,IAAI,CAAEvB,cAAc,CAACwB,IAA1C,CADK,CAEL,CAAEF,IAAI,CAAE,MAAR,CAAgBC,IAAI,CAAEvB,cAAc,CAACY,IAAf,CAAoBa,IAA1C,CAFK,CAGL,CAAEH,IAAI,CAAE,CAACP,MAAD,CAAU,UAAV,CAAwBE,WAAW,EAAIA,WAAW,CAACK,IAA5B,EAAqC,EAApE,CAHK,CAFT,EADF,cAUE,KAAC,WAAD,EAAa,MAAM,CAAEP,MAArB,CAA6B,WAAW,CAAEE,WAA1C,EAVF,CAWGF,MAAM,eACL,KAAC,0BAAD,EAA4B,WAAW,CAAEE,WAAzC,CAAsD,sBAAsB,CAAEG,sBAA9E,EAZJ,GADF,EADF,CAmBD","sourcesContent":["import { useEffect } from 'react';\r\nimport { paramCase } from 'change-case';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\n// material\r\nimport { Container } from '@material-ui/core';\r\n// redux\r\nimport { useDispatch, useSelector } from '../../redux/store';\r\nimport { getUserList, getSpecialPermssionList } from '../../redux/slices/user';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// hooks\r\nimport useSettings from '../../hooks/useSettings';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\nimport UserNewForm from '../../components/_dashboard/user/UserNewForm';\r\nimport UserSpecialPermissionsForm from '../../components/_dashboard/user/UserSpecialPermissionsForm';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UserCreate() {\r\n  const { themeStretch } = useSettings();\r\n  const dispatch = useDispatch();\r\n  const { pathname } = useLocation();\r\n  const { userId } = useParams();\r\n  const { userList, specialPermissionList } = useSelector((state) => state.user);\r\n  const isEdit = pathname.includes('edit');\r\n  const currentUser = userList.find((user) => paramCase(user._id) === userId);\r\n  // console.log(specialPermissionList);\r\n  const userSpecialPermissions = specialPermissionList.find(\r\n    (specialPermssion) => paramCase(specialPermssion.userId) === userId\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserList());\r\n    dispatch(getSpecialPermssionList());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Page title=\"User: Create a new user | Locals\">\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <HeaderBreadcrumbs\r\n          heading={!isEdit ? 'Create a new user' : 'Edit user'}\r\n          links={[\r\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\r\n            { name: 'User', href: PATH_DASHBOARD.user.list },\r\n            { name: !isEdit ? 'New user' : (currentUser && currentUser.name) || '' }\r\n          ]}\r\n        />\r\n\r\n        <UserNewForm isEdit={isEdit} currentUser={currentUser} />\r\n        {isEdit && (\r\n          <UserSpecialPermissionsForm currentUser={currentUser} userSpecialPermissions={userSpecialPermissions} />\r\n        )}\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}