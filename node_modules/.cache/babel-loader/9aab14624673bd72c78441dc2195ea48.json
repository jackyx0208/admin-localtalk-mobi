{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\localtalk.mobi(back)\\\\pro\\\\toptalk-adminpanel\\\\src\\\\components\\\\_dashboard\\\\user\\\\UserSpecialPermissionsForm.js\",\n    _s = $RefreshSig$();\n\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useSnackbar } from 'notistack5';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, FormikProvider, useFormik } from 'formik'; // material\n\nimport { LoadingButton } from '@material-ui/lab';\nimport { Box, Card, Grid, Stack, Switch, TextField, Typography, FormHelperText, FormControlLabel } from '@material-ui/core'; // import AdjustSharpIcon from '@mui/icons-material/AdjustSharp';\n// import AutoAwesomeSharpIcon from '@mui/icons-material/AutoAwesomeSharp';\n// utils\n\nimport axios from '../../../utils/axios'; // import { fData } from '../../../utils/formatNumber';\n\nimport fakeRequest from '../../../utils/fakeRequest'; // routes\n\nimport { PATH_DASHBOARD } from '../../../routes/paths'; //\n// import Label from '../../Label';\n// import { UploadAvatar } from '../../upload';\n\nimport ConfirmDialog from '../../ConfirmDialog'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nUserSpecialPermissionsForm.propTypes = {\n  readOnly: PropTypes.bool,\n  currentUser: PropTypes.object,\n  userSpecialPermissions: PropTypes.object\n};\nexport default function UserSpecialPermissionsForm({\n  readOnly,\n  currentUser,\n  userSpecialPermissions\n}) {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  readOnly = readOnly || false; // console.log(readOnly);\n\n  const [clearConfirm, setClearConfirm] = useState(false);\n\n  const handleCloseClearConfirm = () => {\n    setClearConfirm(false);\n  };\n\n  const onClear = async () => {\n    setClearConfirm(true);\n  };\n\n  const handleClear = async () => {\n    await axios.post(`user/clearSpecialPermission/${currentUser._id}`);\n    navigate(PATH_DASHBOARD.user.list);\n    enqueueSnackbar('Cleared User Special Permissions Successfully', {\n      variant: 'success'\n    });\n  };\n\n  const itemValidation = Yup.object().shape({\n    // user_email: Yup.string().required('This field is required'),\n    max_coverage: Yup.string().required('This field is required'),\n    top_message_max_num: Yup.string().required('This field is required'),\n    effect_year: Yup.string().required('This field is required'),\n    effect_month: Yup.string().required('This field is required'),\n    effect_day: Yup.string().required('This field is required'),\n    valid_period: Yup.string().required('This field is required')\n  });\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      // user_email: userSpecialPermissions?.user_email || '',\n      max_coverage: (userSpecialPermissions === null || userSpecialPermissions === void 0 ? void 0 : userSpecialPermissions.max_coverage) || '',\n      top_message_max_num: (userSpecialPermissions === null || userSpecialPermissions === void 0 ? void 0 : userSpecialPermissions.top_message_max_num) || '',\n      effect_year: (userSpecialPermissions === null || userSpecialPermissions === void 0 ? void 0 : userSpecialPermissions.effect_year) || '',\n      effect_month: (userSpecialPermissions === null || userSpecialPermissions === void 0 ? void 0 : userSpecialPermissions.effect_month) || '',\n      effect_day: (userSpecialPermissions === null || userSpecialPermissions === void 0 ? void 0 : userSpecialPermissions.effect_day) || '',\n      valid_period: (userSpecialPermissions === null || userSpecialPermissions === void 0 ? void 0 : userSpecialPermissions.valid_period) || ''\n    },\n    validationSchema: !readOnly ? itemValidation : null,\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm,\n      setErrors\n    }) => {\n      try {\n        await fakeRequest(500);\n        await axios.put(`/user/permissions/${currentUser._id}`, values); // resetForm();\n\n        setSubmitting(false);\n        enqueueSnackbar('Update success', {\n          variant: 'success'\n        });\n      } catch (error) {\n        console.error(error);\n        setSubmitting(false);\n        setErrors(error);\n      }\n    }\n  });\n  const {\n    errors,\n    values,\n    touched,\n    handleSubmit,\n    isSubmitting,\n    setFieldValue,\n    getFieldProps\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(FormikProvider, {\n    value: formik,\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              p: 3,\n              mt: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              color: \"inherit\",\n              component: \"div\",\n              sx: {\n                mb: 3\n              },\n              children: \"User Special Permission\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"Max Cover people\\xA0\\xA0\\xA0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, { ...getFieldProps('max_coverage'),\n                  variant: \"standard\",\n                  inputProps: {\n                    readOnly\n                  },\n                  style: {\n                    width: 250\n                  },\n                  error: Boolean(touched.max_coverage && errors.max_coverage),\n                  helperText: touched.max_coverage && errors.max_coverage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"person (range 1 ~ 1,000,000)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"TOP messages permission\\xA0\\xA0\\xA0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, { ...getFieldProps('top_message_max_num'),\n                  variant: \"standard\",\n                  inputProps: {\n                    readOnly\n                  },\n                  style: {\n                    width: 150\n                  },\n                  error: Boolean(touched.top_message_max_num && errors.top_message_max_num),\n                  helperText: touched.top_message_max_num && errors.top_message_max_num\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"(1 ~ 10)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"Effective Time\\xA0\\xA0\\xA0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, { ...getFieldProps('effect_year'),\n                  variant: \"standard\",\n                  inputProps: {\n                    readOnly\n                  },\n                  style: {\n                    width: 80\n                  },\n                  error: Boolean(touched.effect_year && errors.effect_year),\n                  helperText: touched.effect_year && errors.effect_year\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, { ...getFieldProps('effect_month'),\n                  variant: \"standard\",\n                  inputProps: {\n                    readOnly\n                  },\n                  style: {\n                    width: 80\n                  },\n                  error: Boolean(touched.effect_month && errors.effect_month),\n                  helperText: touched.effect_month && errors.effect_month\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"month\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, { ...getFieldProps('effect_day'),\n                  variant: \"standard\",\n                  inputProps: {\n                    readOnly\n                  },\n                  style: {\n                    width: 80\n                  },\n                  error: Boolean(touched.effect_day && errors.effect_day),\n                  helperText: touched.effect_day && errors.effect_day\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"day (East America Time from 00:01 AM)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"Permissions Valid period\\xA0\\xA0\\xA0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, { ...getFieldProps('valid_period'),\n                  variant: \"standard\",\n                  inputProps: {\n                    readOnly\n                  },\n                  style: {\n                    width: 150\n                  },\n                  error: Boolean(touched.valid_period && errors.valid_period),\n                  helperText: touched.valid_period && errors.valid_period\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"day\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this), !readOnly && /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 3,\n                  display: 'flex',\n                  justifyContent: 'flex-end'\n                },\n                children: /*#__PURE__*/_jsxDEV(Stack, {\n                  direction: {\n                    xs: 'column',\n                    sm: 'row'\n                  },\n                  spacing: {\n                    xs: 3,\n                    sm: 2\n                  },\n                  children: [userSpecialPermissions && /*#__PURE__*/_jsxDEV(LoadingButton, {\n                    type: \"button\",\n                    color: \"secondary\",\n                    variant: \"contained\",\n                    onClick: onClear,\n                    children: \"Clear Special Permissions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n                    type: \"submit\",\n                    variant: \"contained\",\n                    loading: isSubmitting,\n                    children: \"Save Changes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), clearConfirm && /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      message: \"Are you sure you are going to clear this user's special permission?\",\n      onConfirm: handleClear,\n      onClose: handleCloseClearConfirm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserSpecialPermissionsForm, \"l2N3TmnOOIxD9iZG54uMmVs9akE=\", false, function () {\n  return [useNavigate, useSnackbar, useFormik];\n});\n\n_c = UserSpecialPermissionsForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSpecialPermissionsForm\");","map":{"version":3,"sources":["E:/projects/localtalk.mobi(back)/pro/toptalk-adminpanel/src/components/_dashboard/user/UserSpecialPermissionsForm.js"],"names":["Yup","PropTypes","useState","useSnackbar","useNavigate","Form","FormikProvider","useFormik","LoadingButton","Box","Card","Grid","Stack","Switch","TextField","Typography","FormHelperText","FormControlLabel","axios","fakeRequest","PATH_DASHBOARD","ConfirmDialog","UserSpecialPermissionsForm","propTypes","readOnly","bool","currentUser","object","userSpecialPermissions","navigate","enqueueSnackbar","clearConfirm","setClearConfirm","handleCloseClearConfirm","onClear","handleClear","post","_id","user","list","variant","itemValidation","shape","max_coverage","string","required","top_message_max_num","effect_year","effect_month","effect_day","valid_period","formik","enableReinitialize","initialValues","validationSchema","onSubmit","values","setSubmitting","resetForm","setErrors","put","error","console","errors","touched","handleSubmit","isSubmitting","setFieldValue","getFieldProps","p","mt","mb","xs","sm","lineHeight","width","Boolean","display","justifyContent"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\r\nimport PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { useSnackbar } from 'notistack5';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Form, FormikProvider, useFormik } from 'formik';\r\n// material\r\nimport { LoadingButton } from '@material-ui/lab';\r\nimport {\r\n  Box,\r\n  Card,\r\n  Grid,\r\n  Stack,\r\n  Switch,\r\n  TextField,\r\n  Typography,\r\n  FormHelperText,\r\n  FormControlLabel\r\n} from '@material-ui/core';\r\n// import AdjustSharpIcon from '@mui/icons-material/AdjustSharp';\r\n// import AutoAwesomeSharpIcon from '@mui/icons-material/AutoAwesomeSharp';\r\n// utils\r\nimport axios from '../../../utils/axios';\r\n// import { fData } from '../../../utils/formatNumber';\r\nimport fakeRequest from '../../../utils/fakeRequest';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n//\r\n// import Label from '../../Label';\r\n// import { UploadAvatar } from '../../upload';\r\nimport ConfirmDialog from '../../ConfirmDialog';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nUserSpecialPermissionsForm.propTypes = {\r\n  readOnly: PropTypes.bool,\r\n  currentUser: PropTypes.object,\r\n  userSpecialPermissions: PropTypes.object\r\n};\r\n\r\nexport default function UserSpecialPermissionsForm({ readOnly, currentUser, userSpecialPermissions }) {\r\n  const navigate = useNavigate();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  readOnly = readOnly || false;\r\n  // console.log(readOnly);\r\n  const [clearConfirm, setClearConfirm] = useState(false);\r\n\r\n  const handleCloseClearConfirm = () => {\r\n    setClearConfirm(false);\r\n  };\r\n\r\n  const onClear = async () => {\r\n    setClearConfirm(true);\r\n  };\r\n\r\n  const handleClear = async () => {\r\n    await axios.post(`user/clearSpecialPermission/${currentUser._id}`);\r\n    navigate(PATH_DASHBOARD.user.list);\r\n    enqueueSnackbar('Cleared User Special Permissions Successfully', { variant: 'success' });\r\n  };\r\n\r\n  const itemValidation = Yup.object().shape({\r\n    // user_email: Yup.string().required('This field is required'),\r\n    max_coverage: Yup.string().required('This field is required'),\r\n    top_message_max_num: Yup.string().required('This field is required'),\r\n    effect_year: Yup.string().required('This field is required'),\r\n    effect_month: Yup.string().required('This field is required'),\r\n    effect_day: Yup.string().required('This field is required'),\r\n    valid_period: Yup.string().required('This field is required')\r\n  });\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      // user_email: userSpecialPermissions?.user_email || '',\r\n      max_coverage: userSpecialPermissions?.max_coverage || '',\r\n      top_message_max_num: userSpecialPermissions?.top_message_max_num || '',\r\n      effect_year: userSpecialPermissions?.effect_year || '',\r\n      effect_month: userSpecialPermissions?.effect_month || '',\r\n      effect_day: userSpecialPermissions?.effect_day || '',\r\n      valid_period: userSpecialPermissions?.valid_period || ''\r\n    },\r\n    validationSchema: !readOnly ? itemValidation : null,\r\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\r\n      try {\r\n        await fakeRequest(500);\r\n\r\n        await axios.put(`/user/permissions/${currentUser._id}`, values);\r\n\r\n        // resetForm();\r\n        setSubmitting(false);\r\n        enqueueSnackbar('Update success', { variant: 'success' });\r\n      } catch (error) {\r\n        console.error(error);\r\n        setSubmitting(false);\r\n        setErrors(error);\r\n      }\r\n    }\r\n  });\r\n\r\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\r\n\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={12}>\r\n            <Card sx={{ p: 3, mt: 3 }}>\r\n              <Typography variant=\"h6\" color=\"inherit\" component=\"div\" sx={{ mb: 3 }}>\r\n                User Special Permission\r\n              </Typography>\r\n              <Stack spacing={3}>\r\n                {/* <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    User Email&nbsp;&nbsp;&nbsp;\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('user_email')}\r\n                    variant=\"standard\"\r\n                    style={{ width: 250 }}\r\n                    error={Boolean(touched.user_email && errors.user_email)}\r\n                    helperText={touched.user_email && errors.user_email}\r\n                  />\r\n                </Stack> */}\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    Max Cover people&nbsp;&nbsp;&nbsp;\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('max_coverage')}\r\n                    variant=\"standard\"\r\n                    inputProps={{ readOnly }}\r\n                    style={{ width: 250 }}\r\n                    error={Boolean(touched.max_coverage && errors.max_coverage)}\r\n                    helperText={touched.max_coverage && errors.max_coverage}\r\n                  />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    person (range 1 ~ 1,000,000)\r\n                  </Typography>\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    TOP messages permission&nbsp;&nbsp;&nbsp;\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('top_message_max_num')}\r\n                    variant=\"standard\"\r\n                    inputProps={{ readOnly }}\r\n                    style={{ width: 150 }}\r\n                    error={Boolean(touched.top_message_max_num && errors.top_message_max_num)}\r\n                    helperText={touched.top_message_max_num && errors.top_message_max_num}\r\n                  />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    (1 ~ 10)\r\n                  </Typography>\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    Effective Time&nbsp;&nbsp;&nbsp;\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('effect_year')}\r\n                    variant=\"standard\"\r\n                    inputProps={{ readOnly }}\r\n                    style={{ width: 80 }}\r\n                    error={Boolean(touched.effect_year && errors.effect_year)}\r\n                    helperText={touched.effect_year && errors.effect_year}\r\n                  />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    year\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('effect_month')}\r\n                    variant=\"standard\"\r\n                    inputProps={{ readOnly }}\r\n                    style={{ width: 80 }}\r\n                    error={Boolean(touched.effect_month && errors.effect_month)}\r\n                    helperText={touched.effect_month && errors.effect_month}\r\n                  />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    month\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('effect_day')}\r\n                    variant=\"standard\"\r\n                    inputProps={{ readOnly }}\r\n                    style={{ width: 80 }}\r\n                    error={Boolean(touched.effect_day && errors.effect_day)}\r\n                    helperText={touched.effect_day && errors.effect_day}\r\n                  />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    day (East America Time from 00:01 AM)\r\n                  </Typography>\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    Permissions Valid period&nbsp;&nbsp;&nbsp;\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('valid_period')}\r\n                    variant=\"standard\"\r\n                    inputProps={{ readOnly }}\r\n                    style={{ width: 150 }}\r\n                    error={Boolean(touched.valid_period && errors.valid_period)}\r\n                    helperText={touched.valid_period && errors.valid_period}\r\n                  />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    day\r\n                  </Typography>\r\n                </Stack>\r\n\r\n                {!readOnly && (\r\n                  <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\r\n                    <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                      {userSpecialPermissions && (\r\n                        <LoadingButton type=\"button\" color=\"secondary\" variant=\"contained\" onClick={onClear}>\r\n                          Clear Special Permissions\r\n                        </LoadingButton>\r\n                      )}\r\n                      <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n                        Save Changes\r\n                      </LoadingButton>\r\n                    </Stack>\r\n                  </Box>\r\n                )}\r\n              </Stack>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Form>\r\n      {clearConfirm && (\r\n        <ConfirmDialog\r\n          message=\"Are you sure you are going to clear this user's special permission?\"\r\n          onConfirm={handleClear}\r\n          onClose={handleCloseClearConfirm}\r\n        />\r\n      )}\r\n    </FormikProvider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}