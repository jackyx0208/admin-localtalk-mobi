{"ast":null,"code":"import _objectSpread from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Icon}from'@iconify/react';import{useRef,useState,useCallback,useEffect}from'react';import peopleFill from'@iconify/icons-eva/people-fill';// material\nimport{alpha}from'@material-ui/core/styles';import{ListItemAvatar,Typography,ListItemText,Avatar,ListItemButton}from'@material-ui/core';// hooks\nimport useIsMountedRef from'../../hooks/useIsMountedRef';// utils\nimport axios from'../../utils/axios';import{fToNow}from'../../utils/formatTime';// components\nimport Scrollbar from'../../components/Scrollbar';import MenuPopover from'../../components/MenuPopover';import BadgeStatus from'../../components/BadgeStatus';import{MIconButton}from'../../components/@material-extend';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ITEM_HEIGHT=64;var PADDING_ITEM=2.5;export default function ContactsPopover(){var anchorRef=useRef(null);var isMountedRef=useIsMountedRef();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),contacts=_useState4[0],setContacts=_useState4[1];var getContacts=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get('/api/chat/contacts');case 3:response=_context.sent;if(isMountedRef.current){setContacts(response.data.contacts);}_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);})),[isMountedRef]);useEffect(function(){getContacts();},[getContacts]);var handleOpen=function handleOpen(){setOpen(true);};var handleClose=function handleClose(){setOpen(false);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(MIconButton,{ref:anchorRef,size:\"large\",color:open?'primary':'default',onClick:handleOpen,sx:_objectSpread({},open&&{bgcolor:function bgcolor(theme){return alpha(theme.palette.primary.main,theme.palette.action.focusOpacity);}}),children:/*#__PURE__*/_jsx(Icon,{icon:peopleFill,width:20,height:20})}),/*#__PURE__*/_jsxs(MenuPopover,{open:open,onClose:handleClose,anchorEl:anchorRef.current,sx:{width:360},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",sx:{p:PADDING_ITEM},children:[\"Contacts \",/*#__PURE__*/_jsxs(Typography,{component:\"span\",children:[\"(\",contacts.length,\")\"]})]}),/*#__PURE__*/_jsx(Scrollbar,{sx:{height:ITEM_HEIGHT*8},children:contacts.map(function(contact){var id=contact.id,name=contact.name,avatar=contact.avatar,status=contact.status,lastActivity=contact.lastActivity;return/*#__PURE__*/_jsxs(ListItemButton,{disableGutters:true,sx:{px:PADDING_ITEM,height:ITEM_HEIGHT},children:[/*#__PURE__*/_jsxs(ListItemAvatar,{sx:{position:'relative'},children:[/*#__PURE__*/_jsx(Avatar,{src:avatar}),/*#__PURE__*/_jsx(BadgeStatus,{status:status,sx:{position:'absolute',right:1,bottom:1}})]}),/*#__PURE__*/_jsx(ListItemText,{primaryTypographyProps:{typography:'subtitle2',mb:0.25},secondaryTypographyProps:{typography:'caption'},primary:name,secondary:status==='offline'&&fToNow(lastActivity)})]},id);})})]})]});}","map":{"version":3,"sources":["E:/projects/localtalk.mobi/mobilechat-adminpanel/src/layouts/dashboard/ContactsPopover.js"],"names":["Icon","useRef","useState","useCallback","useEffect","peopleFill","alpha","ListItemAvatar","Typography","ListItemText","Avatar","ListItemButton","useIsMountedRef","axios","fToNow","Scrollbar","MenuPopover","BadgeStatus","MIconButton","ITEM_HEIGHT","PADDING_ITEM","ContactsPopover","anchorRef","isMountedRef","open","setOpen","contacts","setContacts","getContacts","get","response","current","data","console","error","handleOpen","handleClose","bgcolor","theme","palette","primary","main","action","focusOpacity","width","p","length","height","map","contact","id","name","avatar","status","lastActivity","px","position","right","bottom","typography","mb"],"mappings":"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","sourcesContent":["import { Icon } from '@iconify/react';\r\nimport { useRef, useState, useCallback, useEffect } from 'react';\r\nimport peopleFill from '@iconify/icons-eva/people-fill';\r\n// material\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport { ListItemAvatar, Typography, ListItemText, Avatar, ListItemButton } from '@material-ui/core';\r\n// hooks\r\nimport useIsMountedRef from '../../hooks/useIsMountedRef';\r\n// utils\r\nimport axios from '../../utils/axios';\r\nimport { fToNow } from '../../utils/formatTime';\r\n// components\r\nimport Scrollbar from '../../components/Scrollbar';\r\nimport MenuPopover from '../../components/MenuPopover';\r\nimport BadgeStatus from '../../components/BadgeStatus';\r\nimport { MIconButton } from '../../components/@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst ITEM_HEIGHT = 64;\r\nconst PADDING_ITEM = 2.5;\r\n\r\nexport default function ContactsPopover() {\r\n  const anchorRef = useRef(null);\r\n  const isMountedRef = useIsMountedRef();\r\n  const [open, setOpen] = useState(false);\r\n  const [contacts, setContacts] = useState([]);\r\n\r\n  const getContacts = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get('/api/chat/contacts');\r\n      if (isMountedRef.current) {\r\n        setContacts(response.data.contacts);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, [isMountedRef]);\r\n\r\n  useEffect(() => {\r\n    getContacts();\r\n  }, [getContacts]);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MIconButton\r\n        ref={anchorRef}\r\n        size=\"large\"\r\n        color={open ? 'primary' : 'default'}\r\n        onClick={handleOpen}\r\n        sx={{\r\n          ...(open && {\r\n            bgcolor: (theme) => alpha(theme.palette.primary.main, theme.palette.action.focusOpacity)\r\n          })\r\n        }}\r\n      >\r\n        <Icon icon={peopleFill} width={20} height={20} />\r\n      </MIconButton>\r\n\r\n      <MenuPopover open={open} onClose={handleClose} anchorEl={anchorRef.current} sx={{ width: 360 }}>\r\n        <Typography variant=\"h6\" sx={{ p: PADDING_ITEM }}>\r\n          Contacts <Typography component=\"span\">({contacts.length})</Typography>\r\n        </Typography>\r\n\r\n        <Scrollbar sx={{ height: ITEM_HEIGHT * 8 }}>\r\n          {contacts.map((contact) => {\r\n            const { id, name, avatar, status, lastActivity } = contact;\r\n\r\n            return (\r\n              <ListItemButton disableGutters key={id} sx={{ px: PADDING_ITEM, height: ITEM_HEIGHT }}>\r\n                <ListItemAvatar sx={{ position: 'relative' }}>\r\n                  <Avatar src={avatar} />\r\n                  <BadgeStatus status={status} sx={{ position: 'absolute', right: 1, bottom: 1 }} />\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primaryTypographyProps={{ typography: 'subtitle2', mb: 0.25 }}\r\n                  secondaryTypographyProps={{ typography: 'caption' }}\r\n                  primary={name}\r\n                  secondary={status === 'offline' && fToNow(lastActivity)}\r\n                />\r\n              </ListItemButton>\r\n            );\r\n          })}\r\n        </Scrollbar>\r\n      </MenuPopover>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}