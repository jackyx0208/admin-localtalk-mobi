{"ast":null,"code":"import _slicedToArray from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Icon}from'@iconify/react';import{capitalCase}from'change-case';import{useState,useEffect}from'react';import bellFill from'@iconify/icons-eva/bell-fill';import shareFill from'@iconify/icons-eva/share-fill';import roundVpnKey from'@iconify/icons-ic/round-vpn-key';import roundReceipt from'@iconify/icons-ic/round-receipt';import roundAccountBox from'@iconify/icons-ic/round-account-box';// material\nimport{Container,Tab,Box,Tabs,Stack}from'@material-ui/core';// redux\nimport{useDispatch}from'../../redux/store';import{getCards,getProfile,getInvoices,getAddressBook,getNotifications}from'../../redux/slices/user';// routes\nimport{PATH_DASHBOARD}from'../../routes/paths';// hooks\nimport useSettings from'../../hooks/useSettings';// components\nimport Page from'../../components/Page';import HeaderBreadcrumbs from'../../components/HeaderBreadcrumbs';import{AccountGeneral,AccountBilling,AccountSocialLinks,AccountNotifications,AccountChangePassword}from'../../components/_dashboard/user/account';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function UserAccount(){var _useSettings=useSettings(),themeStretch=_useSettings.themeStretch;var _useState=useState('change_password'),_useState2=_slicedToArray(_useState,2),currentTab=_useState2[0],setCurrentTab=_useState2[1];var dispatch=useDispatch();useEffect(function(){dispatch(getCards());dispatch(getAddressBook());dispatch(getInvoices());dispatch(getNotifications());dispatch(getProfile());},[dispatch]);var ACCOUNT_TABS=[// {\n//   value: 'general',\n//   icon: <Icon icon={roundAccountBox} width={20} height={20} />,\n//   component: <AccountGeneral />\n// },\n{value:'change_password',icon:/*#__PURE__*/_jsx(Icon,{icon:roundVpnKey,width:20,height:20}),component:/*#__PURE__*/_jsx(AccountChangePassword,{})}];var handleChangeTab=function handleChangeTab(event,newValue){setCurrentTab(newValue);};return/*#__PURE__*/_jsx(Page,{title:\"User: Account Settings | Locals\",children:/*#__PURE__*/_jsxs(Container,{maxWidth:themeStretch?false:'lg',children:[/*#__PURE__*/_jsx(HeaderBreadcrumbs,{heading:\"Account\",links:[{name:'Dashboard',href:PATH_DASHBOARD.root},{name:'Account Settings'}]}),/*#__PURE__*/_jsxs(Stack,{spacing:5,children:[/*#__PURE__*/_jsx(Tabs,{value:currentTab,scrollButtons:\"auto\",variant:\"scrollable\",allowScrollButtonsMobile:true,onChange:handleChangeTab,children:ACCOUNT_TABS.map(function(tab){return/*#__PURE__*/_jsx(Tab,{disableRipple:true,label:capitalCase(tab.value),icon:tab.icon,value:tab.value},tab.value);})}),ACCOUNT_TABS.map(function(tab){var isMatched=tab.value===currentTab;return isMatched&&/*#__PURE__*/_jsx(Box,{children:tab.component},tab.value);})]})]})});}","map":{"version":3,"sources":["E:/projects/localtalk.mobi/mobilechat-adminpanel/src/pages/dashboard/UserAccount.js"],"names":["Icon","capitalCase","useState","useEffect","bellFill","shareFill","roundVpnKey","roundReceipt","roundAccountBox","Container","Tab","Box","Tabs","Stack","useDispatch","getCards","getProfile","getInvoices","getAddressBook","getNotifications","PATH_DASHBOARD","useSettings","Page","HeaderBreadcrumbs","AccountGeneral","AccountBilling","AccountSocialLinks","AccountNotifications","AccountChangePassword","UserAccount","themeStretch","currentTab","setCurrentTab","dispatch","ACCOUNT_TABS","value","icon","component","handleChangeTab","event","newValue","name","href","root","map","tab","isMatched"],"mappings":"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","sourcesContent":["import { Icon } from '@iconify/react';\r\nimport { capitalCase } from 'change-case';\r\nimport { useState, useEffect } from 'react';\r\nimport bellFill from '@iconify/icons-eva/bell-fill';\r\nimport shareFill from '@iconify/icons-eva/share-fill';\r\nimport roundVpnKey from '@iconify/icons-ic/round-vpn-key';\r\nimport roundReceipt from '@iconify/icons-ic/round-receipt';\r\nimport roundAccountBox from '@iconify/icons-ic/round-account-box';\r\n// material\r\nimport { Container, Tab, Box, Tabs, Stack } from '@material-ui/core';\r\n// redux\r\nimport { useDispatch } from '../../redux/store';\r\nimport { getCards, getProfile, getInvoices, getAddressBook, getNotifications } from '../../redux/slices/user';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// hooks\r\nimport useSettings from '../../hooks/useSettings';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\nimport {\r\n  AccountGeneral,\r\n  AccountBilling,\r\n  AccountSocialLinks,\r\n  AccountNotifications,\r\n  AccountChangePassword\r\n} from '../../components/_dashboard/user/account';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UserAccount() {\r\n  const { themeStretch } = useSettings();\r\n  const [currentTab, setCurrentTab] = useState('change_password');\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCards());\r\n    dispatch(getAddressBook());\r\n    dispatch(getInvoices());\r\n    dispatch(getNotifications());\r\n    dispatch(getProfile());\r\n  }, [dispatch]);\r\n\r\n  const ACCOUNT_TABS = [\r\n    // {\r\n    //   value: 'general',\r\n    //   icon: <Icon icon={roundAccountBox} width={20} height={20} />,\r\n    //   component: <AccountGeneral />\r\n    // },\r\n    {\r\n      value: 'change_password',\r\n      icon: <Icon icon={roundVpnKey} width={20} height={20} />,\r\n      component: <AccountChangePassword />\r\n    }\r\n  ];\r\n\r\n  const handleChangeTab = (event, newValue) => {\r\n    setCurrentTab(newValue);\r\n  };\r\n\r\n  return (\r\n    <Page title=\"User: Account Settings | Locals\">\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <HeaderBreadcrumbs\r\n          heading=\"Account\"\r\n          links={[{ name: 'Dashboard', href: PATH_DASHBOARD.root }, { name: 'Account Settings' }]}\r\n        />\r\n\r\n        <Stack spacing={5}>\r\n          <Tabs\r\n            value={currentTab}\r\n            scrollButtons=\"auto\"\r\n            variant=\"scrollable\"\r\n            allowScrollButtonsMobile\r\n            onChange={handleChangeTab}\r\n          >\r\n            {ACCOUNT_TABS.map((tab) => (\r\n              <Tab disableRipple key={tab.value} label={capitalCase(tab.value)} icon={tab.icon} value={tab.value} />\r\n            ))}\r\n          </Tabs>\r\n\r\n          {ACCOUNT_TABS.map((tab) => {\r\n            const isMatched = tab.value === currentTab;\r\n            return isMatched && <Box key={tab.value}>{tab.component}</Box>;\r\n          })}\r\n        </Stack>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}