{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\localtalk.mobi\\\\mobilechat-adminpanel\\\\src\\\\layouts\\\\dashboard\\\\NotificationsPopover.js\";\nimport PropTypes from 'prop-types';\nimport { noCase } from 'change-case';\nimport { useRef, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Icon } from '@iconify/react';\nimport bellFill from '@iconify/icons-eva/bell-fill';\nimport clockFill from '@iconify/icons-eva/clock-fill';\nimport doneAllFill from '@iconify/icons-eva/done-all-fill'; // material\n\nimport { alpha } from '@material-ui/core/styles';\nimport { Box, List, Badge, Button, Avatar, Tooltip, Divider, Typography, ListItemText, ListSubheader, ListItemAvatar, ListItemButton } from '@material-ui/core'; // utils\n\nimport mockData from '../../utils/mock-data';\nimport { fToNow } from '../../utils/formatTime'; // components\n\nimport Scrollbar from '../../components/Scrollbar';\nimport MenuPopover from '../../components/MenuPopover';\nimport { MIconButton } from '../../components/@material-extend'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TITLES = ['Your order is placed', 'Sylvan King', 'You have new message', 'You have new mail', 'Delivery processing'];\nconst DESCRIPTIONS = ['waiting for shipping', 'answered to your comment on the Minimal', '5 unread messages', 'sent from Guido Padberg', 'Your order is being shipped'];\nconst TYPES = ['order_placed', 'friend_interactive', 'chat_message', 'mail', 'order_shipped'];\nconst AVATARS = [null, mockData.image.avatar(2), null, null, null];\nconst UNREADS = [true, true, false, false, false];\nconst MOCK_NOTIFICATIONS = [...Array(5)].map((_, index) => ({\n  id: mockData.id(index),\n  title: TITLES[index],\n  description: DESCRIPTIONS[index],\n  avatar: AVATARS[index],\n  type: TYPES[index],\n  createdAt: mockData.time(index),\n  isUnRead: UNREADS[index]\n})); // ----------------------------------------------------------------------\n\nfunction renderContent(notification) {\n  const title = /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"subtitle2\",\n    children: [notification.title, /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"span\",\n      variant: \"body2\",\n      sx: {\n        color: 'text.secondary'\n      },\n      children: [\"\\xA0 \", noCase(notification.description)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n\n  if (notification.type === 'order_placed') {\n    return {\n      avatar: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: notification.title,\n        src: \"/static/icons/ic_notification_package.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }, this),\n      title\n    };\n  }\n\n  if (notification.type === 'order_shipped') {\n    return {\n      avatar: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: notification.title,\n        src: \"/static/icons/ic_notification_shipping.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }, this),\n      title\n    };\n  }\n\n  if (notification.type === 'mail') {\n    return {\n      avatar: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: notification.title,\n        src: \"/static/icons/ic_notification_mail.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }, this),\n      title\n    };\n  }\n\n  if (notification.type === 'chat_message') {\n    return {\n      avatar: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: notification.title,\n        src: \"/static/icons/ic_notification_chat.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }, this),\n      title\n    };\n  }\n\n  return {\n    avatar: /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: notification.title,\n      src: notification.avatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this),\n    title\n  };\n}\n\nNotificationItem.propTypes = {\n  notification: PropTypes.object.isRequired\n};\n\nfunction NotificationItem({\n  notification\n}) {\n  const {\n    avatar,\n    title\n  } = renderContent(notification);\n  return /*#__PURE__*/_jsxDEV(ListItemButton, {\n    to: \"#\",\n    disableGutters: true,\n    component: RouterLink,\n    sx: {\n      py: 1.5,\n      px: 2.5,\n      mt: '1px',\n      ...(notification.isUnRead && {\n        bgcolor: 'action.selected'\n      })\n    },\n    children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n      children: /*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          bgcolor: 'background.neutral'\n        },\n        children: avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n      primary: title,\n      secondary: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        sx: {\n          mt: 0.5,\n          display: 'flex',\n          alignItems: 'center',\n          color: 'text.disabled'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          component: Icon,\n          icon: clockFill,\n          sx: {\n            mr: 0.5,\n            width: 16,\n            height: 16\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), fToNow(notification.createdAt)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n\nexport default function NotificationsPopover() {\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n  const [notifications, setNotifications] = useState(MOCK_NOTIFICATIONS);\n  const totalUnRead = notifications.filter(item => item.isUnRead === true).length;\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleMarkAllAsRead = () => {\n    setNotifications(notifications.map(notification => ({ ...notification,\n      isUnRead: false\n    })));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MIconButton, {\n      ref: anchorRef,\n      size: \"large\",\n      color: open ? 'primary' : 'default',\n      onClick: handleOpen,\n      sx: { ...(open && {\n          bgcolor: theme => alpha(theme.palette.primary.main, theme.palette.action.focusOpacity)\n        })\n      },\n      children: /*#__PURE__*/_jsxDEV(Badge, {\n        badgeContent: totalUnRead,\n        color: \"error\",\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          icon: bellFill,\n          width: 20,\n          height: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuPopover, {\n      open: open,\n      onClose: handleClose,\n      anchorEl: anchorRef.current,\n      sx: {\n        width: 360\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          py: 2,\n          px: 2.5\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: \"Notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              color: 'text.secondary'\n            },\n            children: [\"You have \", totalUnRead, \" unread messages\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), totalUnRead > 0 && /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \" Mark all as read\",\n          children: /*#__PURE__*/_jsxDEV(MIconButton, {\n            color: \"primary\",\n            onClick: handleMarkAllAsRead,\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              icon: doneAllFill,\n              width: 20,\n              height: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Scrollbar, {\n        sx: {\n          height: {\n            xs: 340,\n            sm: 'auto'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          disablePadding: true,\n          subheader: /*#__PURE__*/_jsxDEV(ListSubheader, {\n            disableSticky: true,\n            sx: {\n              py: 1,\n              px: 2.5,\n              typography: 'overline'\n            },\n            children: \"New\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this),\n          children: notifications.slice(0, 2).map(notification => /*#__PURE__*/_jsxDEV(NotificationItem, {\n            notification: notification\n          }, notification.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          disablePadding: true,\n          subheader: /*#__PURE__*/_jsxDEV(ListSubheader, {\n            disableSticky: true,\n            sx: {\n              py: 1,\n              px: 2.5,\n              typography: 'overline'\n            },\n            children: \"Before that\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this),\n          children: notifications.slice(2, 5).map(notification => /*#__PURE__*/_jsxDEV(NotificationItem, {\n            notification: notification\n          }, notification.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          disableRipple: true,\n          component: RouterLink,\n          to: \"#\",\n          children: \"View All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["E:/projects/localtalk.mobi/mobilechat-adminpanel/src/layouts/dashboard/NotificationsPopover.js"],"names":["PropTypes","noCase","useRef","useState","Link","RouterLink","Icon","bellFill","clockFill","doneAllFill","alpha","Box","List","Badge","Button","Avatar","Tooltip","Divider","Typography","ListItemText","ListSubheader","ListItemAvatar","ListItemButton","mockData","fToNow","Scrollbar","MenuPopover","MIconButton","TITLES","DESCRIPTIONS","TYPES","AVATARS","image","avatar","UNREADS","MOCK_NOTIFICATIONS","Array","map","_","index","id","title","description","type","createdAt","time","isUnRead","renderContent","notification","color","NotificationItem","propTypes","object","isRequired","py","px","mt","bgcolor","display","alignItems","mr","width","height","NotificationsPopover","anchorRef","open","setOpen","notifications","setNotifications","totalUnRead","filter","item","length","handleOpen","handleClose","handleMarkAllAsRead","theme","palette","primary","main","action","focusOpacity","current","flexGrow","xs","sm","typography","slice","p"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { noCase } from 'change-case';\r\nimport { useRef, useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { Icon } from '@iconify/react';\r\nimport bellFill from '@iconify/icons-eva/bell-fill';\r\nimport clockFill from '@iconify/icons-eva/clock-fill';\r\nimport doneAllFill from '@iconify/icons-eva/done-all-fill';\r\n// material\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport {\r\n  Box,\r\n  List,\r\n  Badge,\r\n  Button,\r\n  Avatar,\r\n  Tooltip,\r\n  Divider,\r\n  Typography,\r\n  ListItemText,\r\n  ListSubheader,\r\n  ListItemAvatar,\r\n  ListItemButton\r\n} from '@material-ui/core';\r\n// utils\r\nimport mockData from '../../utils/mock-data';\r\nimport { fToNow } from '../../utils/formatTime';\r\n// components\r\nimport Scrollbar from '../../components/Scrollbar';\r\nimport MenuPopover from '../../components/MenuPopover';\r\nimport { MIconButton } from '../../components/@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TITLES = [\r\n  'Your order is placed',\r\n  'Sylvan King',\r\n  'You have new message',\r\n  'You have new mail',\r\n  'Delivery processing'\r\n];\r\n\r\nconst DESCRIPTIONS = [\r\n  'waiting for shipping',\r\n  'answered to your comment on the Minimal',\r\n  '5 unread messages',\r\n  'sent from Guido Padberg',\r\n  'Your order is being shipped'\r\n];\r\n\r\nconst TYPES = ['order_placed', 'friend_interactive', 'chat_message', 'mail', 'order_shipped'];\r\n\r\nconst AVATARS = [null, mockData.image.avatar(2), null, null, null];\r\n\r\nconst UNREADS = [true, true, false, false, false];\r\n\r\nconst MOCK_NOTIFICATIONS = [...Array(5)].map((_, index) => ({\r\n  id: mockData.id(index),\r\n  title: TITLES[index],\r\n  description: DESCRIPTIONS[index],\r\n  avatar: AVATARS[index],\r\n  type: TYPES[index],\r\n  createdAt: mockData.time(index),\r\n  isUnRead: UNREADS[index]\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction renderContent(notification) {\r\n  const title = (\r\n    <Typography variant=\"subtitle2\">\r\n      {notification.title}\r\n      <Typography component=\"span\" variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n        &nbsp; {noCase(notification.description)}\r\n      </Typography>\r\n    </Typography>\r\n  );\r\n\r\n  if (notification.type === 'order_placed') {\r\n    return {\r\n      avatar: <img alt={notification.title} src=\"/static/icons/ic_notification_package.svg\" />,\r\n      title\r\n    };\r\n  }\r\n  if (notification.type === 'order_shipped') {\r\n    return {\r\n      avatar: <img alt={notification.title} src=\"/static/icons/ic_notification_shipping.svg\" />,\r\n      title\r\n    };\r\n  }\r\n  if (notification.type === 'mail') {\r\n    return {\r\n      avatar: <img alt={notification.title} src=\"/static/icons/ic_notification_mail.svg\" />,\r\n      title\r\n    };\r\n  }\r\n  if (notification.type === 'chat_message') {\r\n    return {\r\n      avatar: <img alt={notification.title} src=\"/static/icons/ic_notification_chat.svg\" />,\r\n      title\r\n    };\r\n  }\r\n  return {\r\n    avatar: <img alt={notification.title} src={notification.avatar} />,\r\n    title\r\n  };\r\n}\r\n\r\nNotificationItem.propTypes = {\r\n  notification: PropTypes.object.isRequired\r\n};\r\n\r\nfunction NotificationItem({ notification }) {\r\n  const { avatar, title } = renderContent(notification);\r\n\r\n  return (\r\n    <ListItemButton\r\n      to=\"#\"\r\n      disableGutters\r\n      component={RouterLink}\r\n      sx={{\r\n        py: 1.5,\r\n        px: 2.5,\r\n        mt: '1px',\r\n        ...(notification.isUnRead && {\r\n          bgcolor: 'action.selected'\r\n        })\r\n      }}\r\n    >\r\n      <ListItemAvatar>\r\n        <Avatar sx={{ bgcolor: 'background.neutral' }}>{avatar}</Avatar>\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={title}\r\n        secondary={\r\n          <Typography\r\n            variant=\"caption\"\r\n            sx={{\r\n              mt: 0.5,\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              color: 'text.disabled'\r\n            }}\r\n          >\r\n            <Box component={Icon} icon={clockFill} sx={{ mr: 0.5, width: 16, height: 16 }} />\r\n            {fToNow(notification.createdAt)}\r\n          </Typography>\r\n        }\r\n      />\r\n    </ListItemButton>\r\n  );\r\n}\r\n\r\nexport default function NotificationsPopover() {\r\n  const anchorRef = useRef(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [notifications, setNotifications] = useState(MOCK_NOTIFICATIONS);\r\n  const totalUnRead = notifications.filter((item) => item.isUnRead === true).length;\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleMarkAllAsRead = () => {\r\n    setNotifications(\r\n      notifications.map((notification) => ({\r\n        ...notification,\r\n        isUnRead: false\r\n      }))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MIconButton\r\n        ref={anchorRef}\r\n        size=\"large\"\r\n        color={open ? 'primary' : 'default'}\r\n        onClick={handleOpen}\r\n        sx={{\r\n          ...(open && {\r\n            bgcolor: (theme) => alpha(theme.palette.primary.main, theme.palette.action.focusOpacity)\r\n          })\r\n        }}\r\n      >\r\n        <Badge badgeContent={totalUnRead} color=\"error\">\r\n          <Icon icon={bellFill} width={20} height={20} />\r\n        </Badge>\r\n      </MIconButton>\r\n\r\n      <MenuPopover open={open} onClose={handleClose} anchorEl={anchorRef.current} sx={{ width: 360 }}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', py: 2, px: 2.5 }}>\r\n          <Box sx={{ flexGrow: 1 }}>\r\n            <Typography variant=\"subtitle1\">Notifications</Typography>\r\n            <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n              You have {totalUnRead} unread messages\r\n            </Typography>\r\n          </Box>\r\n\r\n          {totalUnRead > 0 && (\r\n            <Tooltip title=\" Mark all as read\">\r\n              <MIconButton color=\"primary\" onClick={handleMarkAllAsRead}>\r\n                <Icon icon={doneAllFill} width={20} height={20} />\r\n              </MIconButton>\r\n            </Tooltip>\r\n          )}\r\n        </Box>\r\n\r\n        <Divider />\r\n\r\n        <Scrollbar sx={{ height: { xs: 340, sm: 'auto' } }}>\r\n          <List\r\n            disablePadding\r\n            subheader={\r\n              <ListSubheader disableSticky sx={{ py: 1, px: 2.5, typography: 'overline' }}>\r\n                New\r\n              </ListSubheader>\r\n            }\r\n          >\r\n            {notifications.slice(0, 2).map((notification) => (\r\n              <NotificationItem key={notification.id} notification={notification} />\r\n            ))}\r\n          </List>\r\n\r\n          <List\r\n            disablePadding\r\n            subheader={\r\n              <ListSubheader disableSticky sx={{ py: 1, px: 2.5, typography: 'overline' }}>\r\n                Before that\r\n              </ListSubheader>\r\n            }\r\n          >\r\n            {notifications.slice(2, 5).map((notification) => (\r\n              <NotificationItem key={notification.id} notification={notification} />\r\n            ))}\r\n          </List>\r\n        </Scrollbar>\r\n\r\n        <Divider />\r\n\r\n        <Box sx={{ p: 1 }}>\r\n          <Button fullWidth disableRipple component={RouterLink} to=\"#\">\r\n            View All\r\n          </Button>\r\n        </Box>\r\n      </MenuPopover>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}