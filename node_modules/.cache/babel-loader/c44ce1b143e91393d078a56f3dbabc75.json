{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\localtalk.mobi\\\\mobilechat-adminpanel\\\\src\\\\components\\\\_dashboard\\\\settings\\\\ParameterSettingsForm.js\";\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { useCallback } from 'react';\nimport { useSnackbar } from 'notistack5';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, FormikProvider, useFormik } from 'formik'; // material\n\nimport { LoadingButton } from '@material-ui/lab';\nimport { Box, Card, Grid, Stack, Switch, TextField, Typography, FormHelperText, FormControlLabel } from '@material-ui/core';\nimport AdjustSharpIcon from '@mui/icons-material/AdjustSharp';\nimport AutoAwesomeSharpIcon from '@mui/icons-material/AutoAwesomeSharp'; // utils\n\nimport axios from '../../../utils/axios';\nimport { fData } from '../../../utils/formatNumber';\nimport fakeRequest from '../../../utils/fakeRequest'; // routes\n\nimport { PATH_DASHBOARD } from '../../../routes/paths'; //\n\nimport Label from '../../Label';\nimport { UploadAvatar } from '../../upload'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nParameterSettingsForm.propTypes = {\n  settingsData: PropTypes.object\n};\nexport default function ParameterSettingsForm({\n  settingsData\n}) {\n  const navigate = useNavigate();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const itemValidation = Yup.object().shape({\n    refresh_location_time_interval: Yup.string().required('This field is required'),\n    top_information_online_hour: Yup.string().required('This field is required'),\n    downloads_message_num: Yup.string().required('This field is required'),\n    message_limit_character_num: Yup.string().required('This field is required'),\n    domain_name: Yup.string().required('This field is required'),\n    app_use_hour: Yup.string().required('This field is required'),\n    top_message_num: Yup.string().required('This field is required'),\n    top_message_save_hour: Yup.string().required('This field is required'),\n    default_coverage: Yup.string().required('This field is required'),\n    banned_hour: Yup.string().required('This field is required')\n  });\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      refresh_location_time_interval: (settingsData === null || settingsData === void 0 ? void 0 : settingsData.settings.refresh_location_time_interval) || 5,\n      top_information_online_hour: (settingsData === null || settingsData === void 0 ? void 0 : settingsData.settings.top_information_online_hour) || 24,\n      downloads_message_num: (settingsData === null || settingsData === void 0 ? void 0 : settingsData.settings.downloads_message_num) || 100,\n      message_limit_character_num: (settingsData === null || settingsData === void 0 ? void 0 : settingsData.settings.message_limit_character_num) || 1000,\n      domain_name: (settingsData === null || settingsData === void 0 ? void 0 : settingsData.settings.domain_name) || 'toptalk.app',\n      admin_mail_address: (settingsData === null || settingsData === void 0 ? void 0 : settingsData.settings.admin_mail_address) || '',\n      online_chat_admin_email: (settingsData === null || settingsData === void 0 ? void 0 : settingsData.settings.online_chat_admin_email) || '',\n      app_use_hour: (settingsData === null || settingsData === void 0 ? void 0 : settingsData.settings.app_use_hour) || 1,\n      top_message_num: (settingsData === null || settingsData === void 0 ? void 0 : settingsData.settings.top_message_num) || 1,\n      top_message_save_hour: (settingsData === null || settingsData === void 0 ? void 0 : settingsData.settings.top_message_save_hour) || 24,\n      message_save_hour: (settingsData === null || settingsData === void 0 ? void 0 : settingsData.settings.message_save_hour) || 1,\n      default_coverage: (settingsData === null || settingsData === void 0 ? void 0 : settingsData.settings.default_coverage) || 150,\n      banned_hour: (settingsData === null || settingsData === void 0 ? void 0 : settingsData.settings.banned_hour) || 72\n    },\n    validationSchema: itemValidation,\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm,\n      setErrors\n    }) => {\n      try {\n        await fakeRequest(500);\n        await axios.put('/settings/parameter/', values); // resetForm();\n\n        setSubmitting(false);\n        enqueueSnackbar('Update success', {\n          variant: 'success'\n        });\n      } catch (error) {\n        console.error(error);\n        setSubmitting(false);\n        setErrors(error);\n      }\n    }\n  });\n  const {\n    errors,\n    values,\n    touched,\n    handleSubmit,\n    isSubmitting,\n    setFieldValue,\n    getFieldProps\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(FormikProvider, {\n    value: formik,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              p: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(AutoAwesomeSharpIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"How often to refresh the user's location: every\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, { ...getFieldProps('refresh_location_time_interval'),\n                  variant: \"standard\",\n                  style: {\n                    width: 80\n                  },\n                  error: Boolean(touched.refresh_location_time_interval && errors.refresh_location_time_interval),\n                  helperText: touched.refresh_location_time_interval && errors.refresh_location_time_interval\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"minutes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(AutoAwesomeSharpIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"TOP information is online for\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, { ...getFieldProps('top_information_online_hour'),\n                  variant: \"standard\",\n                  style: {\n                    width: 80\n                  },\n                  error: Boolean(touched.top_information_online_hour && errors.top_information_online_hour),\n                  helperText: touched.top_information_online_hour && errors.top_information_online_hour\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"hours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(AutoAwesomeSharpIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"After the user logs into the APP, system downloads last\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, { ...getFieldProps('downloads_message_num'),\n                  variant: \"standard\",\n                  style: {\n                    width: 80\n                  },\n                  error: Boolean(touched.downloads_message_num && errors.downloads_message_num),\n                  helperText: touched.downloads_message_num && errors.downloads_message_num\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"messages of the public chat room\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(AutoAwesomeSharpIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"Each message text is limited to\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, { ...getFieldProps('message_limit_character_num'),\n                  variant: \"standard\",\n                  style: {\n                    width: 80\n                  },\n                  error: Boolean(touched.message_limit_character_num && errors.message_limit_character_num),\n                  helperText: touched.message_limit_character_num && errors.message_limit_character_num\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"characters\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(AutoAwesomeSharpIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"Domain name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, { ...getFieldProps('domain_name'),\n                  variant: \"standard\",\n                  style: {\n                    width: 120\n                  },\n                  error: Boolean(touched.domain_name && errors.domain_name),\n                  helperText: touched.domain_name && errors.domain_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"Admin mail address:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, { ...getFieldProps('admin_mail_address'),\n                  variant: \"standard\",\n                  style: {\n                    width: 150\n                  },\n                  error: Boolean(touched.admin_mail_address && errors.admin_mail_address),\n                  helperText: touched.admin_mail_address && errors.admin_mail_address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"Online chat admin email:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, { ...getFieldProps('online_chat_admin_email'),\n                  variant: \"standard\",\n                  style: {\n                    width: 150\n                  },\n                  error: Boolean(touched.online_chat_admin_email && errors.online_chat_admin_email),\n                  helperText: touched.online_chat_admin_email && errors.online_chat_admin_email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(AutoAwesomeSharpIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"Visitors are allowed to use APP for\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, { ...getFieldProps('app_use_hour'),\n                  variant: \"standard\",\n                  style: {\n                    width: 60\n                  },\n                  error: Boolean(touched.app_use_hour && errors.app_use_hour),\n                  helperText: touched.app_use_hour && errors.app_use_hour\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"hours each time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(AutoAwesomeSharpIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"Each user can only TOP\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, { ...getFieldProps('top_message_num'),\n                  variant: \"standard\",\n                  style: {\n                    width: 60\n                  },\n                  error: Boolean(touched.top_message_num && errors.top_message_num),\n                  helperText: touched.top_message_num && errors.top_message_num\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"messages\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(AutoAwesomeSharpIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"The server saves TOP messages in the past\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, { ...getFieldProps('top_message_save_hour'),\n                  variant: \"standard\",\n                  style: {\n                    width: 60\n                  },\n                  error: Boolean(touched.top_message_save_hour && errors.top_message_save_hour),\n                  helperText: touched.top_message_save_hour && errors.top_message_save_hour\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"hours, and the messages within\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, { ...getFieldProps('message_save_hour'),\n                  variant: \"standard\",\n                  style: {\n                    width: 60\n                  },\n                  error: Boolean(touched.message_save_hour && errors.message_save_hour),\n                  helperText: touched.message_save_hour && errors.message_save_hour\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"hours of public chat\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(AutoAwesomeSharpIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"The default max. coverage set is\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, { ...getFieldProps('default_coverage'),\n                  variant: \"standard\",\n                  style: {\n                    width: 60\n                  },\n                  error: Boolean(touched.default_coverage && errors.default_coverage),\n                  helperText: touched.default_coverage && errors.default_coverage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"people nearby\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(AutoAwesomeSharpIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"If a user is blocked by 3 users within 24 hours, he will be banned speaking for\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, { ...getFieldProps('banned_hour'),\n                  variant: \"standard\",\n                  style: {\n                    width: 60\n                  },\n                  error: Boolean(touched.banned_hour && errors.banned_hour),\n                  helperText: touched.banned_hour && errors.banned_hour\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"hours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 3,\n                  display: 'flex',\n                  justifyContent: 'flex-end'\n                },\n                children: /*#__PURE__*/_jsxDEV(LoadingButton, {\n                  type: \"submit\",\n                  variant: \"contained\",\n                  loading: isSubmitting,\n                  children: \"Save Changes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["E:/projects/localtalk.mobi/mobilechat-adminpanel/src/components/_dashboard/settings/ParameterSettingsForm.js"],"names":["Yup","PropTypes","useCallback","useSnackbar","useNavigate","Form","FormikProvider","useFormik","LoadingButton","Box","Card","Grid","Stack","Switch","TextField","Typography","FormHelperText","FormControlLabel","AdjustSharpIcon","AutoAwesomeSharpIcon","axios","fData","fakeRequest","PATH_DASHBOARD","Label","UploadAvatar","ParameterSettingsForm","propTypes","settingsData","object","navigate","enqueueSnackbar","itemValidation","shape","refresh_location_time_interval","string","required","top_information_online_hour","downloads_message_num","message_limit_character_num","domain_name","app_use_hour","top_message_num","top_message_save_hour","default_coverage","banned_hour","formik","enableReinitialize","initialValues","settings","admin_mail_address","online_chat_admin_email","message_save_hour","validationSchema","onSubmit","values","setSubmitting","resetForm","setErrors","put","variant","error","console","errors","touched","handleSubmit","isSubmitting","setFieldValue","getFieldProps","p","xs","sm","lineHeight","width","Boolean","mt","display","justifyContent"],"mappings":";AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,SAA/B,QAAgD,QAAhD,C,CACA;;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SACEC,GADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,KAJF,EAKEC,MALF,EAMEC,SANF,EAOEC,UAPF,EAQEC,cARF,EASEC,gBATF,QAUO,mBAVP;AAWA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAOC,oBAAP,MAAiC,sCAAjC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,SAASC,KAAT,QAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,4BAAxB,C,CACA;;AACA,SAASC,cAAT,QAA+B,uBAA/B,C,CACA;;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,QAA6B,cAA7B,C,CAEA;;;AAEAC,qBAAqB,CAACC,SAAtB,GAAkC;AAChCC,EAAAA,YAAY,EAAE3B,SAAS,CAAC4B;AADQ,CAAlC;AAIA,eAAe,SAASH,qBAAT,CAA+B;AAAEE,EAAAA;AAAF,CAA/B,EAAiD;AAC9D,QAAME,QAAQ,GAAG1B,WAAW,EAA5B;AACA,QAAM;AAAE2B,IAAAA;AAAF,MAAsB5B,WAAW,EAAvC;AAEA,QAAM6B,cAAc,GAAGhC,GAAG,CAAC6B,MAAJ,GAAaI,KAAb,CAAmB;AACxCC,IAAAA,8BAA8B,EAAElC,GAAG,CAACmC,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CADQ;AAExCC,IAAAA,2BAA2B,EAAErC,GAAG,CAACmC,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CAFW;AAGxCE,IAAAA,qBAAqB,EAAEtC,GAAG,CAACmC,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CAHiB;AAIxCG,IAAAA,2BAA2B,EAAEvC,GAAG,CAACmC,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CAJW;AAKxCI,IAAAA,WAAW,EAAExC,GAAG,CAACmC,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CAL2B;AAMxCK,IAAAA,YAAY,EAAEzC,GAAG,CAACmC,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CAN0B;AAOxCM,IAAAA,eAAe,EAAE1C,GAAG,CAACmC,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CAPuB;AAQxCO,IAAAA,qBAAqB,EAAE3C,GAAG,CAACmC,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CARiB;AASxCQ,IAAAA,gBAAgB,EAAE5C,GAAG,CAACmC,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CATsB;AAUxCS,IAAAA,WAAW,EAAE7C,GAAG,CAACmC,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB;AAV2B,GAAnB,CAAvB;AAaA,QAAMU,MAAM,GAAGvC,SAAS,CAAC;AACvBwC,IAAAA,kBAAkB,EAAE,IADG;AAEvBC,IAAAA,aAAa,EAAE;AACbd,MAAAA,8BAA8B,EAAE,CAAAN,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEqB,QAAd,CAAuBf,8BAAvB,KAAyD,CAD5E;AAEbG,MAAAA,2BAA2B,EAAE,CAAAT,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEqB,QAAd,CAAuBZ,2BAAvB,KAAsD,EAFtE;AAGbC,MAAAA,qBAAqB,EAAE,CAAAV,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEqB,QAAd,CAAuBX,qBAAvB,KAAgD,GAH1D;AAIbC,MAAAA,2BAA2B,EAAE,CAAAX,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEqB,QAAd,CAAuBV,2BAAvB,KAAsD,IAJtE;AAKbC,MAAAA,WAAW,EAAE,CAAAZ,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEqB,QAAd,CAAuBT,WAAvB,KAAsC,aALtC;AAMbU,MAAAA,kBAAkB,EAAE,CAAAtB,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEqB,QAAd,CAAuBC,kBAAvB,KAA6C,EANpD;AAObC,MAAAA,uBAAuB,EAAE,CAAAvB,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEqB,QAAd,CAAuBE,uBAAvB,KAAkD,EAP9D;AAQbV,MAAAA,YAAY,EAAE,CAAAb,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEqB,QAAd,CAAuBR,YAAvB,KAAuC,CARxC;AASbC,MAAAA,eAAe,EAAE,CAAAd,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEqB,QAAd,CAAuBP,eAAvB,KAA0C,CAT9C;AAUbC,MAAAA,qBAAqB,EAAE,CAAAf,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEqB,QAAd,CAAuBN,qBAAvB,KAAgD,EAV1D;AAWbS,MAAAA,iBAAiB,EAAE,CAAAxB,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEqB,QAAd,CAAuBG,iBAAvB,KAA4C,CAXlD;AAYbR,MAAAA,gBAAgB,EAAE,CAAAhB,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEqB,QAAd,CAAuBL,gBAAvB,KAA2C,GAZhD;AAabC,MAAAA,WAAW,EAAE,CAAAjB,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEqB,QAAd,CAAuBJ,WAAvB,KAAsC;AAbtC,KAFQ;AAiBvBQ,IAAAA,gBAAgB,EAAErB,cAjBK;AAkBvBsB,IAAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA,SAAjB;AAA4BC,MAAAA;AAA5B,KAAf,KAA2D;AACnE,UAAI;AACF,cAAMpC,WAAW,CAAC,GAAD,CAAjB;AAEA,cAAMF,KAAK,CAACuC,GAAN,CAAU,sBAAV,EAAkCJ,MAAlC,CAAN,CAHE,CAKF;;AACAC,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAzB,QAAAA,eAAe,CAAC,gBAAD,EAAmB;AAAE6B,UAAAA,OAAO,EAAE;AAAX,SAAnB,CAAf;AACD,OARD,CAQE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACAL,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,QAAAA,SAAS,CAACG,KAAD,CAAT;AACD;AACF;AAhCsB,GAAD,CAAxB;AAmCA,QAAM;AAAEE,IAAAA,MAAF;AAAUR,IAAAA,MAAV;AAAkBS,IAAAA,OAAlB;AAA2BC,IAAAA,YAA3B;AAAyCC,IAAAA,YAAzC;AAAuDC,IAAAA,aAAvD;AAAsEC,IAAAA;AAAtE,MAAwFtB,MAA9F;AAEA,sBACE,QAAC,cAAD;AAAgB,IAAA,KAAK,EAAEA,MAAvB;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,UAAU,MAAhB;AAAiB,MAAA,YAAY,EAAC,KAA9B;AAAoC,MAAA,QAAQ,EAAEmB,YAA9C;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,EAAvB;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAE;AAAEI,cAAAA,CAAC,EAAE;AAAL,aAAV;AAAA,mCACE,QAAC,KAAD;AAAO,cAAA,OAAO,EAAE,CAAhB;AAAA,sCACE,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAE;AAAEC,kBAAAA,EAAE,EAAE,QAAN;AAAgBC,kBAAAA,EAAE,EAAE;AAApB,iBAAlB;AAA+C,gBAAA,OAAO,EAAE;AAAED,kBAAAA,EAAE,EAAE,CAAN;AAASC,kBAAAA,EAAE,EAAE;AAAb,iBAAxD;AAAA,wCACE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,OAApB;AAA4B,kBAAA,SAAS,EAAC,KAAtC;AAA4C,kBAAA,KAAK,EAAE;AAAEC,oBAAAA,UAAU,EAAE;AAAd,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAKE,QAAC,SAAD,OACMJ,aAAa,CAAC,gCAAD,CADnB;AAEE,kBAAA,OAAO,EAAC,UAFV;AAGE,kBAAA,KAAK,EAAE;AAAEK,oBAAAA,KAAK,EAAE;AAAT,mBAHT;AAIE,kBAAA,KAAK,EAAEC,OAAO,CAACV,OAAO,CAAC9B,8BAAR,IAA0C6B,MAAM,CAAC7B,8BAAlD,CAJhB;AAKE,kBAAA,UAAU,EAAE8B,OAAO,CAAC9B,8BAAR,IAA0C6B,MAAM,CAAC7B;AAL/D;AAAA;AAAA;AAAA;AAAA,wBALF,eAYE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,OAApB;AAA4B,kBAAA,SAAS,EAAC,KAAtC;AAA4C,kBAAA,KAAK,EAAE;AAAEsC,oBAAAA,UAAU,EAAE;AAAd,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAkBE,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAE;AAAEF,kBAAAA,EAAE,EAAE,QAAN;AAAgBC,kBAAAA,EAAE,EAAE;AAApB,iBAAlB;AAA+C,gBAAA,OAAO,EAAE;AAAED,kBAAAA,EAAE,EAAE,CAAN;AAASC,kBAAAA,EAAE,EAAE;AAAb,iBAAxD;AAAA,wCACE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,OAApB;AAA4B,kBAAA,SAAS,EAAC,KAAtC;AAA4C,kBAAA,KAAK,EAAE;AAAEC,oBAAAA,UAAU,EAAE;AAAd,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAKE,QAAC,SAAD,OACMJ,aAAa,CAAC,6BAAD,CADnB;AAEE,kBAAA,OAAO,EAAC,UAFV;AAGE,kBAAA,KAAK,EAAE;AAAEK,oBAAAA,KAAK,EAAE;AAAT,mBAHT;AAIE,kBAAA,KAAK,EAAEC,OAAO,CAACV,OAAO,CAAC3B,2BAAR,IAAuC0B,MAAM,CAAC1B,2BAA/C,CAJhB;AAKE,kBAAA,UAAU,EAAE2B,OAAO,CAAC3B,2BAAR,IAAuC0B,MAAM,CAAC1B;AAL5D;AAAA;AAAA;AAAA;AAAA,wBALF,eAYE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,OAApB;AAA4B,kBAAA,SAAS,EAAC,KAAtC;AAA4C,kBAAA,KAAK,EAAE;AAAEmC,oBAAAA,UAAU,EAAE;AAAd,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAlBF,eAmCE,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAE;AAAEF,kBAAAA,EAAE,EAAE,QAAN;AAAgBC,kBAAAA,EAAE,EAAE;AAApB,iBAAlB;AAA+C,gBAAA,OAAO,EAAE;AAAED,kBAAAA,EAAE,EAAE,CAAN;AAASC,kBAAAA,EAAE,EAAE;AAAb,iBAAxD;AAAA,wCACE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,OAApB;AAA4B,kBAAA,SAAS,EAAC,KAAtC;AAA4C,kBAAA,KAAK,EAAE;AAAEC,oBAAAA,UAAU,EAAE;AAAd,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAKE,QAAC,SAAD,OACMJ,aAAa,CAAC,uBAAD,CADnB;AAEE,kBAAA,OAAO,EAAC,UAFV;AAGE,kBAAA,KAAK,EAAE;AAAEK,oBAAAA,KAAK,EAAE;AAAT,mBAHT;AAIE,kBAAA,KAAK,EAAEC,OAAO,CAACV,OAAO,CAAC1B,qBAAR,IAAiCyB,MAAM,CAACzB,qBAAzC,CAJhB;AAKE,kBAAA,UAAU,EAAE0B,OAAO,CAAC1B,qBAAR,IAAiCyB,MAAM,CAACzB;AALtD;AAAA;AAAA;AAAA;AAAA,wBALF,eAYE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,OAApB;AAA4B,kBAAA,SAAS,EAAC,KAAtC;AAA4C,kBAAA,KAAK,EAAE;AAAEkC,oBAAAA,UAAU,EAAE;AAAd,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAnCF,eAoDE,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAE;AAAEF,kBAAAA,EAAE,EAAE,QAAN;AAAgBC,kBAAAA,EAAE,EAAE;AAApB,iBAAlB;AAA+C,gBAAA,OAAO,EAAE;AAAED,kBAAAA,EAAE,EAAE,CAAN;AAASC,kBAAAA,EAAE,EAAE;AAAb,iBAAxD;AAAA,wCACE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,OAApB;AAA4B,kBAAA,SAAS,EAAC,KAAtC;AAA4C,kBAAA,KAAK,EAAE;AAAEC,oBAAAA,UAAU,EAAE;AAAd,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAKE,QAAC,SAAD,OACMJ,aAAa,CAAC,6BAAD,CADnB;AAEE,kBAAA,OAAO,EAAC,UAFV;AAGE,kBAAA,KAAK,EAAE;AAAEK,oBAAAA,KAAK,EAAE;AAAT,mBAHT;AAIE,kBAAA,KAAK,EAAEC,OAAO,CAACV,OAAO,CAACzB,2BAAR,IAAuCwB,MAAM,CAACxB,2BAA/C,CAJhB;AAKE,kBAAA,UAAU,EAAEyB,OAAO,CAACzB,2BAAR,IAAuCwB,MAAM,CAACxB;AAL5D;AAAA;AAAA;AAAA;AAAA,wBALF,eAYE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,OAApB;AAA4B,kBAAA,SAAS,EAAC,KAAtC;AAA4C,kBAAA,KAAK,EAAE;AAAEiC,oBAAAA,UAAU,EAAE;AAAd,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,sBApDF,eAqEE,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAE;AAAEF,kBAAAA,EAAE,EAAE,QAAN;AAAgBC,kBAAAA,EAAE,EAAE;AAApB,iBAAlB;AAA+C,gBAAA,OAAO,EAAE;AAAED,kBAAAA,EAAE,EAAE,CAAN;AAASC,kBAAAA,EAAE,EAAE;AAAb,iBAAxD;AAAA,wCACE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,OAApB;AAA4B,kBAAA,SAAS,EAAC,KAAtC;AAA4C,kBAAA,KAAK,EAAE;AAAEC,oBAAAA,UAAU,EAAE;AAAd,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAKE,QAAC,SAAD,OACMJ,aAAa,CAAC,aAAD,CADnB;AAEE,kBAAA,OAAO,EAAC,UAFV;AAGE,kBAAA,KAAK,EAAE;AAAEK,oBAAAA,KAAK,EAAE;AAAT,mBAHT;AAIE,kBAAA,KAAK,EAAEC,OAAO,CAACV,OAAO,CAACxB,WAAR,IAAuBuB,MAAM,CAACvB,WAA/B,CAJhB;AAKE,kBAAA,UAAU,EAAEwB,OAAO,CAACxB,WAAR,IAAuBuB,MAAM,CAACvB;AAL5C;AAAA;AAAA;AAAA;AAAA,wBALF,eAYE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,OAApB;AAA4B,kBAAA,SAAS,EAAC,KAAtC;AAA4C,kBAAA,KAAK,EAAE;AAAEgC,oBAAAA,UAAU,EAAE;AAAd,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAZF,eAeE,QAAC,SAAD,OACMJ,aAAa,CAAC,oBAAD,CADnB;AAEE,kBAAA,OAAO,EAAC,UAFV;AAGE,kBAAA,KAAK,EAAE;AAAEK,oBAAAA,KAAK,EAAE;AAAT,mBAHT;AAIE,kBAAA,KAAK,EAAEC,OAAO,CAACV,OAAO,CAACd,kBAAR,IAA8Ba,MAAM,CAACb,kBAAtC,CAJhB;AAKE,kBAAA,UAAU,EAAEc,OAAO,CAACd,kBAAR,IAA8Ba,MAAM,CAACb;AALnD;AAAA;AAAA;AAAA;AAAA,wBAfF,eAsBE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,OAApB;AAA4B,kBAAA,SAAS,EAAC,KAAtC;AAA4C,kBAAA,KAAK,EAAE;AAAEsB,oBAAAA,UAAU,EAAE;AAAd,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAtBF,eAyBE,QAAC,SAAD,OACMJ,aAAa,CAAC,yBAAD,CADnB;AAEE,kBAAA,OAAO,EAAC,UAFV;AAGE,kBAAA,KAAK,EAAE;AAAEK,oBAAAA,KAAK,EAAE;AAAT,mBAHT;AAIE,kBAAA,KAAK,EAAEC,OAAO,CAACV,OAAO,CAACb,uBAAR,IAAmCY,MAAM,CAACZ,uBAA3C,CAJhB;AAKE,kBAAA,UAAU,EAAEa,OAAO,CAACb,uBAAR,IAAmCY,MAAM,CAACZ;AALxD;AAAA;AAAA;AAAA;AAAA,wBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,sBArEF,eAuGE,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAE;AAAEmB,kBAAAA,EAAE,EAAE,QAAN;AAAgBC,kBAAAA,EAAE,EAAE;AAApB,iBAAlB;AAA+C,gBAAA,OAAO,EAAE;AAAED,kBAAAA,EAAE,EAAE,CAAN;AAASC,kBAAAA,EAAE,EAAE;AAAb,iBAAxD;AAAA,wCACE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,OAApB;AAA4B,kBAAA,SAAS,EAAC,KAAtC;AAA4C,kBAAA,KAAK,EAAE;AAAEC,oBAAAA,UAAU,EAAE;AAAd,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAKE,QAAC,SAAD,OACMJ,aAAa,CAAC,cAAD,CADnB;AAEE,kBAAA,OAAO,EAAC,UAFV;AAGE,kBAAA,KAAK,EAAE;AAAEK,oBAAAA,KAAK,EAAE;AAAT,mBAHT;AAIE,kBAAA,KAAK,EAAEC,OAAO,CAACV,OAAO,CAACvB,YAAR,IAAwBsB,MAAM,CAACtB,YAAhC,CAJhB;AAKE,kBAAA,UAAU,EAAEuB,OAAO,CAACvB,YAAR,IAAwBsB,MAAM,CAACtB;AAL7C;AAAA;AAAA;AAAA;AAAA,wBALF,eAYE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,OAApB;AAA4B,kBAAA,SAAS,EAAC,KAAtC;AAA4C,kBAAA,KAAK,EAAE;AAAE+B,oBAAAA,UAAU,EAAE;AAAd,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAvGF,eAwHE,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAE;AAAEF,kBAAAA,EAAE,EAAE,QAAN;AAAgBC,kBAAAA,EAAE,EAAE;AAApB,iBAAlB;AAA+C,gBAAA,OAAO,EAAE;AAAED,kBAAAA,EAAE,EAAE,CAAN;AAASC,kBAAAA,EAAE,EAAE;AAAb,iBAAxD;AAAA,wCACE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,OAApB;AAA4B,kBAAA,SAAS,EAAC,KAAtC;AAA4C,kBAAA,KAAK,EAAE;AAAEC,oBAAAA,UAAU,EAAE;AAAd,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAKE,QAAC,SAAD,OACMJ,aAAa,CAAC,iBAAD,CADnB;AAEE,kBAAA,OAAO,EAAC,UAFV;AAGE,kBAAA,KAAK,EAAE;AAAEK,oBAAAA,KAAK,EAAE;AAAT,mBAHT;AAIE,kBAAA,KAAK,EAAEC,OAAO,CAACV,OAAO,CAACtB,eAAR,IAA2BqB,MAAM,CAACrB,eAAnC,CAJhB;AAKE,kBAAA,UAAU,EAAEsB,OAAO,CAACtB,eAAR,IAA2BqB,MAAM,CAACrB;AALhD;AAAA;AAAA;AAAA;AAAA,wBALF,eAYE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,OAApB;AAA4B,kBAAA,SAAS,EAAC,KAAtC;AAA4C,kBAAA,KAAK,EAAE;AAAE8B,oBAAAA,UAAU,EAAE;AAAd,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAxHF,eAyIE,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAE;AAAEF,kBAAAA,EAAE,EAAE,QAAN;AAAgBC,kBAAAA,EAAE,EAAE;AAApB,iBAAlB;AAA+C,gBAAA,OAAO,EAAE;AAAED,kBAAAA,EAAE,EAAE,CAAN;AAASC,kBAAAA,EAAE,EAAE;AAAb,iBAAxD;AAAA,wCACE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,OAApB;AAA4B,kBAAA,SAAS,EAAC,KAAtC;AAA4C,kBAAA,KAAK,EAAE;AAAEC,oBAAAA,UAAU,EAAE;AAAd,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAKE,QAAC,SAAD,OACMJ,aAAa,CAAC,uBAAD,CADnB;AAEE,kBAAA,OAAO,EAAC,UAFV;AAGE,kBAAA,KAAK,EAAE;AAAEK,oBAAAA,KAAK,EAAE;AAAT,mBAHT;AAIE,kBAAA,KAAK,EAAEC,OAAO,CAACV,OAAO,CAACrB,qBAAR,IAAiCoB,MAAM,CAACpB,qBAAzC,CAJhB;AAKE,kBAAA,UAAU,EAAEqB,OAAO,CAACrB,qBAAR,IAAiCoB,MAAM,CAACpB;AALtD;AAAA;AAAA;AAAA;AAAA,wBALF,eAYE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,OAApB;AAA4B,kBAAA,SAAS,EAAC,KAAtC;AAA4C,kBAAA,KAAK,EAAE;AAAE6B,oBAAAA,UAAU,EAAE;AAAd,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAZF,eAeE,QAAC,SAAD,OACMJ,aAAa,CAAC,mBAAD,CADnB;AAEE,kBAAA,OAAO,EAAC,UAFV;AAGE,kBAAA,KAAK,EAAE;AAAEK,oBAAAA,KAAK,EAAE;AAAT,mBAHT;AAIE,kBAAA,KAAK,EAAEC,OAAO,CAACV,OAAO,CAACZ,iBAAR,IAA6BW,MAAM,CAACX,iBAArC,CAJhB;AAKE,kBAAA,UAAU,EAAEY,OAAO,CAACZ,iBAAR,IAA6BW,MAAM,CAACX;AALlD;AAAA;AAAA;AAAA;AAAA,wBAfF,eAsBE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,OAApB;AAA4B,kBAAA,SAAS,EAAC,KAAtC;AAA4C,kBAAA,KAAK,EAAE;AAAEoB,oBAAAA,UAAU,EAAE;AAAd,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAzIF,eAoKE,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAE;AAAEF,kBAAAA,EAAE,EAAE,QAAN;AAAgBC,kBAAAA,EAAE,EAAE;AAApB,iBAAlB;AAA+C,gBAAA,OAAO,EAAE;AAAED,kBAAAA,EAAE,EAAE,CAAN;AAASC,kBAAAA,EAAE,EAAE;AAAb,iBAAxD;AAAA,wCACE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,OAApB;AAA4B,kBAAA,SAAS,EAAC,KAAtC;AAA4C,kBAAA,KAAK,EAAE;AAAEC,oBAAAA,UAAU,EAAE;AAAd,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAKE,QAAC,SAAD,OACMJ,aAAa,CAAC,kBAAD,CADnB;AAEE,kBAAA,OAAO,EAAC,UAFV;AAGE,kBAAA,KAAK,EAAE;AAAEK,oBAAAA,KAAK,EAAE;AAAT,mBAHT;AAIE,kBAAA,KAAK,EAAEC,OAAO,CAACV,OAAO,CAACpB,gBAAR,IAA4BmB,MAAM,CAACnB,gBAApC,CAJhB;AAKE,kBAAA,UAAU,EAAEoB,OAAO,CAACpB,gBAAR,IAA4BmB,MAAM,CAACnB;AALjD;AAAA;AAAA;AAAA;AAAA,wBALF,eAYE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,OAApB;AAA4B,kBAAA,SAAS,EAAC,KAAtC;AAA4C,kBAAA,KAAK,EAAE;AAAE4B,oBAAAA,UAAU,EAAE;AAAd,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,sBApKF,eAqLE,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAE;AAAEF,kBAAAA,EAAE,EAAE,QAAN;AAAgBC,kBAAAA,EAAE,EAAE;AAApB,iBAAlB;AAA+C,gBAAA,OAAO,EAAE;AAAED,kBAAAA,EAAE,EAAE,CAAN;AAASC,kBAAAA,EAAE,EAAE;AAAb,iBAAxD;AAAA,wCACE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,OAApB;AAA4B,kBAAA,SAAS,EAAC,KAAtC;AAA4C,kBAAA,KAAK,EAAE;AAAEC,oBAAAA,UAAU,EAAE;AAAd,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAKE,QAAC,SAAD,OACMJ,aAAa,CAAC,aAAD,CADnB;AAEE,kBAAA,OAAO,EAAC,UAFV;AAGE,kBAAA,KAAK,EAAE;AAAEK,oBAAAA,KAAK,EAAE;AAAT,mBAHT;AAIE,kBAAA,KAAK,EAAEC,OAAO,CAACV,OAAO,CAACnB,WAAR,IAAuBkB,MAAM,CAAClB,WAA/B,CAJhB;AAKE,kBAAA,UAAU,EAAEmB,OAAO,CAACnB,WAAR,IAAuBkB,MAAM,CAAClB;AAL5C;AAAA;AAAA;AAAA;AAAA,wBALF,eAYE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,OAApB;AAA4B,kBAAA,SAAS,EAAC,KAAtC;AAA4C,kBAAA,KAAK,EAAE;AAAE2B,oBAAAA,UAAU,EAAE;AAAd,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,sBArLF,eAsME,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE;AAAEG,kBAAAA,EAAE,EAAE,CAAN;AAASC,kBAAAA,OAAO,EAAE,MAAlB;AAA0BC,kBAAAA,cAAc,EAAE;AAA1C,iBAAT;AAAA,uCACE,QAAC,aAAD;AAAe,kBAAA,IAAI,EAAC,QAApB;AAA6B,kBAAA,OAAO,EAAC,WAArC;AAAiD,kBAAA,OAAO,EAAEX,YAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAtMF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwND","sourcesContent":["import * as Yup from 'yup';\r\nimport PropTypes from 'prop-types';\r\nimport { useCallback } from 'react';\r\nimport { useSnackbar } from 'notistack5';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Form, FormikProvider, useFormik } from 'formik';\r\n// material\r\nimport { LoadingButton } from '@material-ui/lab';\r\nimport {\r\n  Box,\r\n  Card,\r\n  Grid,\r\n  Stack,\r\n  Switch,\r\n  TextField,\r\n  Typography,\r\n  FormHelperText,\r\n  FormControlLabel\r\n} from '@material-ui/core';\r\nimport AdjustSharpIcon from '@mui/icons-material/AdjustSharp';\r\nimport AutoAwesomeSharpIcon from '@mui/icons-material/AutoAwesomeSharp';\r\n// utils\r\nimport axios from '../../../utils/axios';\r\nimport { fData } from '../../../utils/formatNumber';\r\nimport fakeRequest from '../../../utils/fakeRequest';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n//\r\nimport Label from '../../Label';\r\nimport { UploadAvatar } from '../../upload';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nParameterSettingsForm.propTypes = {\r\n  settingsData: PropTypes.object\r\n};\r\n\r\nexport default function ParameterSettingsForm({ settingsData }) {\r\n  const navigate = useNavigate();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const itemValidation = Yup.object().shape({\r\n    refresh_location_time_interval: Yup.string().required('This field is required'),\r\n    top_information_online_hour: Yup.string().required('This field is required'),\r\n    downloads_message_num: Yup.string().required('This field is required'),\r\n    message_limit_character_num: Yup.string().required('This field is required'),\r\n    domain_name: Yup.string().required('This field is required'),\r\n    app_use_hour: Yup.string().required('This field is required'),\r\n    top_message_num: Yup.string().required('This field is required'),\r\n    top_message_save_hour: Yup.string().required('This field is required'),\r\n    default_coverage: Yup.string().required('This field is required'),\r\n    banned_hour: Yup.string().required('This field is required')\r\n  });\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      refresh_location_time_interval: settingsData?.settings.refresh_location_time_interval || 5,\r\n      top_information_online_hour: settingsData?.settings.top_information_online_hour || 24,\r\n      downloads_message_num: settingsData?.settings.downloads_message_num || 100,\r\n      message_limit_character_num: settingsData?.settings.message_limit_character_num || 1000,\r\n      domain_name: settingsData?.settings.domain_name || 'toptalk.app',\r\n      admin_mail_address: settingsData?.settings.admin_mail_address || '',\r\n      online_chat_admin_email: settingsData?.settings.online_chat_admin_email || '',\r\n      app_use_hour: settingsData?.settings.app_use_hour || 1,\r\n      top_message_num: settingsData?.settings.top_message_num || 1,\r\n      top_message_save_hour: settingsData?.settings.top_message_save_hour || 24,\r\n      message_save_hour: settingsData?.settings.message_save_hour || 1,\r\n      default_coverage: settingsData?.settings.default_coverage || 150,\r\n      banned_hour: settingsData?.settings.banned_hour || 72\r\n    },\r\n    validationSchema: itemValidation,\r\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\r\n      try {\r\n        await fakeRequest(500);\r\n\r\n        await axios.put('/settings/parameter/', values);\r\n\r\n        // resetForm();\r\n        setSubmitting(false);\r\n        enqueueSnackbar('Update success', { variant: 'success' });\r\n      } catch (error) {\r\n        console.error(error);\r\n        setSubmitting(false);\r\n        setErrors(error);\r\n      }\r\n    }\r\n  });\r\n\r\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\r\n\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={12}>\r\n            <Card sx={{ p: 3 }}>\r\n              <Stack spacing={3}>\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <AutoAwesomeSharpIcon />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    How often to refresh the user's location: every\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('refresh_location_time_interval')}\r\n                    variant=\"standard\"\r\n                    style={{ width: 80 }}\r\n                    error={Boolean(touched.refresh_location_time_interval && errors.refresh_location_time_interval)}\r\n                    helperText={touched.refresh_location_time_interval && errors.refresh_location_time_interval}\r\n                  />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    minutes\r\n                  </Typography>\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <AutoAwesomeSharpIcon />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    TOP information is online for\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('top_information_online_hour')}\r\n                    variant=\"standard\"\r\n                    style={{ width: 80 }}\r\n                    error={Boolean(touched.top_information_online_hour && errors.top_information_online_hour)}\r\n                    helperText={touched.top_information_online_hour && errors.top_information_online_hour}\r\n                  />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    hours\r\n                  </Typography>\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <AutoAwesomeSharpIcon />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    After the user logs into the APP, system downloads last\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('downloads_message_num')}\r\n                    variant=\"standard\"\r\n                    style={{ width: 80 }}\r\n                    error={Boolean(touched.downloads_message_num && errors.downloads_message_num)}\r\n                    helperText={touched.downloads_message_num && errors.downloads_message_num}\r\n                  />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    messages of the public chat room\r\n                  </Typography>\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <AutoAwesomeSharpIcon />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    Each message text is limited to\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('message_limit_character_num')}\r\n                    variant=\"standard\"\r\n                    style={{ width: 80 }}\r\n                    error={Boolean(touched.message_limit_character_num && errors.message_limit_character_num)}\r\n                    helperText={touched.message_limit_character_num && errors.message_limit_character_num}\r\n                  />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    characters\r\n                  </Typography>\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <AutoAwesomeSharpIcon />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    Domain name:\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('domain_name')}\r\n                    variant=\"standard\"\r\n                    style={{ width: 120 }}\r\n                    error={Boolean(touched.domain_name && errors.domain_name)}\r\n                    helperText={touched.domain_name && errors.domain_name}\r\n                  />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    Admin mail address:\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('admin_mail_address')}\r\n                    variant=\"standard\"\r\n                    style={{ width: 150 }}\r\n                    error={Boolean(touched.admin_mail_address && errors.admin_mail_address)}\r\n                    helperText={touched.admin_mail_address && errors.admin_mail_address}\r\n                  />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    Online chat admin email:\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('online_chat_admin_email')}\r\n                    variant=\"standard\"\r\n                    style={{ width: 150 }}\r\n                    error={Boolean(touched.online_chat_admin_email && errors.online_chat_admin_email)}\r\n                    helperText={touched.online_chat_admin_email && errors.online_chat_admin_email}\r\n                  />\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <AutoAwesomeSharpIcon />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    Visitors are allowed to use APP for\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('app_use_hour')}\r\n                    variant=\"standard\"\r\n                    style={{ width: 60 }}\r\n                    error={Boolean(touched.app_use_hour && errors.app_use_hour)}\r\n                    helperText={touched.app_use_hour && errors.app_use_hour}\r\n                  />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    hours each time\r\n                  </Typography>\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <AutoAwesomeSharpIcon />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    Each user can only TOP\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('top_message_num')}\r\n                    variant=\"standard\"\r\n                    style={{ width: 60 }}\r\n                    error={Boolean(touched.top_message_num && errors.top_message_num)}\r\n                    helperText={touched.top_message_num && errors.top_message_num}\r\n                  />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    messages\r\n                  </Typography>\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <AutoAwesomeSharpIcon />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    The server saves TOP messages in the past\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('top_message_save_hour')}\r\n                    variant=\"standard\"\r\n                    style={{ width: 60 }}\r\n                    error={Boolean(touched.top_message_save_hour && errors.top_message_save_hour)}\r\n                    helperText={touched.top_message_save_hour && errors.top_message_save_hour}\r\n                  />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    hours, and the messages within\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('message_save_hour')}\r\n                    variant=\"standard\"\r\n                    style={{ width: 60 }}\r\n                    error={Boolean(touched.message_save_hour && errors.message_save_hour)}\r\n                    helperText={touched.message_save_hour && errors.message_save_hour}\r\n                  />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    hours of public chat\r\n                  </Typography>\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <AutoAwesomeSharpIcon />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    The default max. coverage set is\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('default_coverage')}\r\n                    variant=\"standard\"\r\n                    style={{ width: 60 }}\r\n                    error={Boolean(touched.default_coverage && errors.default_coverage)}\r\n                    helperText={touched.default_coverage && errors.default_coverage}\r\n                  />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    people nearby\r\n                  </Typography>\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <AutoAwesomeSharpIcon />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    If a user is blocked by 3 users within 24 hours, he will be banned speaking for\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('banned_hour')}\r\n                    variant=\"standard\"\r\n                    style={{ width: 60 }}\r\n                    error={Boolean(touched.banned_hour && errors.banned_hour)}\r\n                    helperText={touched.banned_hour && errors.banned_hour}\r\n                  />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    hours\r\n                  </Typography>\r\n                </Stack>\r\n\r\n                <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\r\n                  <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n                    Save Changes\r\n                  </LoadingButton>\r\n                </Box>\r\n              </Stack>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}