{"ast":null,"code":"import _regeneratorRuntime from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{merge}from'lodash';import{useEffect,useState}from'react';import ReactApexChart from'react-apexcharts';// material\nimport{Card,CardHeader,Box,TextField}from'@material-ui/core';//\nimport moment from'moment';import{BaseOptionChart}from'../../charts';import axios from'../../../utils/axios';// ----------------------------------------------------------------------\n// const CHART_DATA = [\n//   {\n//     category: 'statistics',\n//     data: [\n//       // { name: 'Active Users', data: [0, 0, 0, 0, 0, 13, 16, 17, 26, 40] },\n//       { name: 'Online Users', data: [0, 0, 0, 0, 22, 45, 42, 12, 12, 5] },\n//       { name: 'Registered Users', data: [0, 0, 0, 0, 1, 19, 20, 24, 36, 51] }\n//       // { name: 'App Installed', data: [0, 10, 21, 35, 40, 49, 62, 69, 91, 102] },\n//       // { name: 'App Download', data: [0, 12, 25, 38, 42, 58, 64, 72, 97, 120] }\n//     ]\n//   }\n// ];\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function AppTotalChart(_ref){var chartDate=_ref.chartDate;var _useState=useState('statistics'),_useState2=_slicedToArray(_useState,2),seriesData=_useState2[0],setSeriesData=_useState2[1];var _useState3=useState(10),_useState4=_slicedToArray(_useState3,2),dateCount=_useState4[0],setDateCount=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),chartData=_useState6[0],setChartData=_useState6[1];useEffect(function(){function getAnalytics(){return _getAnalytics.apply(this,arguments);}function _getAnalytics(){_getAnalytics=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var toDateObj,fromDateObj,fromDate,toDate,_yield$axios$get,data,zeroValueArr,i,CHART_DATA,logs,onlineUserArr,registerUserArr,_i,lastDateLimit,_i2,logDate,index,_CHART_DATA;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!chartDate){_context.next=10;break;}toDateObj=new Date(chartDate);fromDateObj=new Date(toDateObj.getTime()-(dateCount-1)*1000*60*60*24);fromDate=moment(fromDateObj).format('YYYY-MM-DD');toDate=chartDate;_context.next=7;return axios.get(\"/analytics/logs/\".concat(fromDate,\"/\").concat(toDate));case 7:_yield$axios$get=_context.sent;data=_yield$axios$get.data;if(data.error){zeroValueArr=[];for(i=0;i<dateCount;i+=1){zeroValueArr.push(0);}CHART_DATA=[{category:'statistics',data:[{name:'Online Users',data:zeroValueArr},{name:'Registered Users',data:zeroValueArr}]}];setChartData(CHART_DATA);}else{logs=data.logs;onlineUserArr=[];registerUserArr=[];for(_i=0;_i<dateCount;_i+=1){onlineUserArr.push(0);registerUserArr.push(0);}lastDateLimit=new Date(toDateObj.getTime()+1000*60*60*24);for(_i2=0;_i2<logs.length;_i2+=1){logDate=new Date(logs[_i2].date);console.log(logs[_i2]);if(logDate>=fromDateObj&&logDate<lastDateLimit){index=Math.floor((logDate.getTime()-fromDateObj.getTime())/(1000*60*60*24));onlineUserArr[index]=logs[_i2].online_user_num;registerUserArr[index]=logs[_i2].register_user_num;}}_CHART_DATA=[{category:'statistics',data:[{name:'Online Users',data:onlineUserArr},{name:'Registered Users',data:registerUserArr}]}];setChartData(_CHART_DATA);}case 10:case\"end\":return _context.stop();}}},_callee);}));return _getAnalytics.apply(this,arguments);}getAnalytics();},[chartDate]);var handleChangeSeriesData=function handleChangeSeriesData(event){setSeriesData(Number(event.target.value));};var daysList=function daysList(num){var date=new Date(chartDate);var datesCollection=[];for(var i=0;i<num;i+=1){var newDate=new Date(date.getTime()-i*1000*60*60*24);var dateFromatStr=moment(newDate).format('YYYY MMM DD');// datesCollection.unshift(`${newDate.getDate()}/${newDate.getMonth() + 1}/${newDate.getFullYear()}`);\ndatesCollection.unshift(dateFromatStr);}return datesCollection;};var chartOptions=merge(BaseOptionChart(),{xaxis:{categories:daysList(dateCount)}});return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{title:\"Statistics Chart\",subheader:\"Growing Fast\"// action={\n//   <TextField\n//     select\n//     fullWidth\n//     value={seriesData}\n//     SelectProps={{ native: true }}\n//     onChange={handleChangeSeriesData}\n//     sx={{\n//       '& fieldset': { border: '0 !important' },\n//       '& select': { pl: 1, py: 0.5, pr: '24px !important', typography: 'subtitle2' },\n//       '& .MuiOutlinedInput-root': { borderRadius: 0.75, bgcolor: 'background.neutral' },\n//       '& .MuiNativeSelect-icon': { top: 4, right: 0, width: 20, height: 20 }\n//     }}\n//   >\n//     {CHART_DATA.map((option) => (\n//       <option key={option.category} value={option.category}>\n//         {option.category}\n//       </option>\n//     ))}\n//   </TextField>\n// }\n}),chartData.map(function(item){return/*#__PURE__*/_jsx(Box,{sx:{mt:3,mx:3},dir:\"ltr\",children:item.category===seriesData&&/*#__PURE__*/_jsx(ReactApexChart,{type:\"line\",series:item.data,options:chartOptions,height:364})},item.category);})]});}","map":{"version":3,"sources":["E:/projects/localtalk.mobi/mobilechat-adminpanel/src/components/_dashboard/general-app/AppTotalChart.js"],"names":["merge","useEffect","useState","ReactApexChart","Card","CardHeader","Box","TextField","moment","BaseOptionChart","axios","AppTotalChart","chartDate","seriesData","setSeriesData","dateCount","setDateCount","chartData","setChartData","getAnalytics","toDateObj","Date","fromDateObj","getTime","fromDate","format","toDate","get","data","error","zeroValueArr","i","push","CHART_DATA","category","name","logs","onlineUserArr","registerUserArr","lastDateLimit","length","logDate","date","console","log","index","Math","floor","online_user_num","register_user_num","handleChangeSeriesData","event","Number","target","value","daysList","num","datesCollection","newDate","dateFromatStr","unshift","chartOptions","xaxis","categories","map","item","mt","mx"],"mappings":"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","sourcesContent":["import { merge } from 'lodash';\r\nimport { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactApexChart from 'react-apexcharts';\r\n// material\r\nimport { Card, CardHeader, Box, TextField } from '@material-ui/core';\r\n//\r\nimport moment from 'moment';\r\nimport { BaseOptionChart } from '../../charts';\r\nimport axios from '../../../utils/axios';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n// const CHART_DATA = [\r\n//   {\r\n//     category: 'statistics',\r\n//     data: [\r\n//       // { name: 'Active Users', data: [0, 0, 0, 0, 0, 13, 16, 17, 26, 40] },\r\n//       { name: 'Online Users', data: [0, 0, 0, 0, 22, 45, 42, 12, 12, 5] },\r\n//       { name: 'Registered Users', data: [0, 0, 0, 0, 1, 19, 20, 24, 36, 51] }\r\n//       // { name: 'App Installed', data: [0, 10, 21, 35, 40, 49, 62, 69, 91, 102] },\r\n//       // { name: 'App Download', data: [0, 12, 25, 38, 42, 58, 64, 72, 97, 120] }\r\n//     ]\r\n//   }\r\n// ];\r\n\r\nAppTotalChart.propTypes = {\r\n  chartDate: PropTypes.string\r\n};\r\n\r\nexport default function AppTotalChart({ chartDate }) {\r\n  const [seriesData, setSeriesData] = useState('statistics');\r\n  const [dateCount, setDateCount] = useState(10);\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getAnalytics() {\r\n      if (chartDate) {\r\n        const toDateObj = new Date(chartDate);\r\n        const fromDateObj = new Date(toDateObj.getTime() - (dateCount - 1) * 1000 * 60 * 60 * 24);\r\n        const fromDate = moment(fromDateObj).format('YYYY-MM-DD');\r\n        const toDate = chartDate;\r\n        const { data } = await axios.get(`/analytics/logs/${fromDate}/${toDate}`);\r\n        if (data.error) {\r\n          const zeroValueArr = [];\r\n          for (let i = 0; i < dateCount; i += 1) {\r\n            zeroValueArr.push(0);\r\n          }\r\n          const CHART_DATA = [\r\n            {\r\n              category: 'statistics',\r\n              data: [\r\n                { name: 'Online Users', data: zeroValueArr },\r\n                { name: 'Registered Users', data: zeroValueArr }\r\n              ]\r\n            }\r\n          ];\r\n          setChartData(CHART_DATA);\r\n        } else {\r\n          const { logs } = data;\r\n          const onlineUserArr = [];\r\n          const registerUserArr = [];\r\n          for (let i = 0; i < dateCount; i += 1) {\r\n            onlineUserArr.push(0);\r\n            registerUserArr.push(0);\r\n          }\r\n          const lastDateLimit = new Date(toDateObj.getTime() + 1000 * 60 * 60 * 24);\r\n          for (let i = 0; i < logs.length; i += 1) {\r\n            const logDate = new Date(logs[i].date);\r\n            console.log(logs[i]);\r\n            if (logDate >= fromDateObj && logDate < lastDateLimit) {\r\n              const index = Math.floor((logDate.getTime() - fromDateObj.getTime()) / (1000 * 60 * 60 * 24));\r\n              onlineUserArr[index] = logs[i].online_user_num;\r\n              registerUserArr[index] = logs[i].register_user_num;\r\n            }\r\n          }\r\n          const CHART_DATA = [\r\n            {\r\n              category: 'statistics',\r\n              data: [\r\n                { name: 'Online Users', data: onlineUserArr },\r\n                { name: 'Registered Users', data: registerUserArr }\r\n              ]\r\n            }\r\n          ];\r\n          setChartData(CHART_DATA);\r\n        }\r\n      }\r\n    }\r\n    getAnalytics();\r\n  }, [chartDate]);\r\n\r\n  const handleChangeSeriesData = (event) => {\r\n    setSeriesData(Number(event.target.value));\r\n  };\r\n\r\n  const daysList = (num) => {\r\n    const date = new Date(chartDate);\r\n    const datesCollection = [];\r\n\r\n    for (let i = 0; i < num; i += 1) {\r\n      const newDate = new Date(date.getTime() - i * 1000 * 60 * 60 * 24);\r\n      const dateFromatStr = moment(newDate).format('YYYY MMM DD');\r\n      // datesCollection.unshift(`${newDate.getDate()}/${newDate.getMonth() + 1}/${newDate.getFullYear()}`);\r\n      datesCollection.unshift(dateFromatStr);\r\n    }\r\n\r\n    return datesCollection;\r\n  };\r\n\r\n  const chartOptions = merge(BaseOptionChart(), {\r\n    xaxis: {\r\n      categories: daysList(dateCount)\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        title=\"Statistics Chart\"\r\n        subheader=\"Growing Fast\"\r\n        // action={\r\n        //   <TextField\r\n        //     select\r\n        //     fullWidth\r\n        //     value={seriesData}\r\n        //     SelectProps={{ native: true }}\r\n        //     onChange={handleChangeSeriesData}\r\n        //     sx={{\r\n        //       '& fieldset': { border: '0 !important' },\r\n        //       '& select': { pl: 1, py: 0.5, pr: '24px !important', typography: 'subtitle2' },\r\n        //       '& .MuiOutlinedInput-root': { borderRadius: 0.75, bgcolor: 'background.neutral' },\r\n        //       '& .MuiNativeSelect-icon': { top: 4, right: 0, width: 20, height: 20 }\r\n        //     }}\r\n        //   >\r\n        //     {CHART_DATA.map((option) => (\r\n        //       <option key={option.category} value={option.category}>\r\n        //         {option.category}\r\n        //       </option>\r\n        //     ))}\r\n        //   </TextField>\r\n        // }\r\n      />\r\n\r\n      {chartData.map((item) => (\r\n        <Box key={item.category} sx={{ mt: 3, mx: 3 }} dir=\"ltr\">\r\n          {item.category === seriesData && (\r\n            <ReactApexChart type=\"line\" series={item.data} options={chartOptions} height={364} />\r\n          )}\r\n        </Box>\r\n      ))}\r\n    </Card>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}