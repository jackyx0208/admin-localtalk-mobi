{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\localtalk.mobi\\\\mobilechat-adminpanel\\\\src\\\\components\\\\ConfirmDialog.js\";\nimport PropTypes from 'prop-types';\nimport { useState } from 'react'; // material ui\n\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Box, IconButton, Typography } from '@material-ui/core';\nimport { Close } from '@material-ui/icons'; // import create from 'zustand';\n// const ConfirmDialog = () => {\n//   return (\n//     <Dialog open={true} maxWidth=\"sm\" fullWidth>\n//       <DialogTitle>Confirm the action</DialogTitle>\n//       <Box position=\"absolute\" top={0} right={0}>\n//         <IconButton>\n//           <Close />\n//         </IconButton>\n//       </Box>\n//       <DialogContent>\n//         <Typography>some message here</Typography>\n//       </DialogContent>\n//       <DialogActions>\n//         <Button color=\"primary\" variant=\"contained\">\n//           Cancel\n//         </Button>\n//         <Button color=\"secondary\" variant=\"contained\">\n//           Confirm\n//         </Button>\n//       </DialogActions>\n//     </Dialog>\n//   );\n// };\n// const useConfirmDialogStore = create((set) => ({\n//   message: '',\n//   onSubmit: undefined,\n//   close: () => set({ onSubmit: undefined })\n// }));\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nConfirmDialog.propTypes = {\n  message: PropTypes.string,\n  onConfirm: PropTypes.func,\n  onClose: PropTypes.func\n};\nexport default function ConfirmDialog({\n  message,\n  onConfirm,\n  onClose\n}) {\n  const [isOpen, setIsOpen] = useState(true);\n  return (\n    /*#__PURE__*/\n    // so it will close the dialog, if we pass it to the onClose attribute.\n    _jsxDEV(Dialog, {\n      open: isOpen,\n      onClose: onClose,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Confirm the action\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: onClose,\n          children: /*#__PURE__*/_jsxDEV(Close, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          variant: \"contained\",\n          onClick: () => {\n            if (onConfirm) {\n              onConfirm();\n            }\n\n            onClose();\n          },\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)\n  );\n}","map":{"version":3,"sources":["E:/projects/localtalk.mobi/mobilechat-adminpanel/src/components/ConfirmDialog.js"],"names":["PropTypes","useState","Dialog","DialogTitle","DialogContent","DialogActions","Button","Box","IconButton","Typography","Close","ConfirmDialog","propTypes","message","string","onConfirm","func","onClose","isOpen","setIsOpen"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CACA;;AACA,SACEC,MADF,EAEEC,WAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,MALF,EAMEC,GANF,EAOEC,UAPF,EAQEC,UARF,QASO,mBATP;AAUA,SAASC,KAAT,QAAsB,oBAAtB,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEAC,aAAa,CAACC,SAAd,GAA0B;AACxBC,EAAAA,OAAO,EAAEb,SAAS,CAACc,MADK;AAExBC,EAAAA,SAAS,EAAEf,SAAS,CAACgB,IAFG;AAGxBC,EAAAA,OAAO,EAAEjB,SAAS,CAACgB;AAHK,CAA1B;AAMA,eAAe,SAASL,aAAT,CAAuB;AAAEE,EAAAA,OAAF;AAAWE,EAAAA,SAAX;AAAsBE,EAAAA;AAAtB,CAAvB,EAAwD;AACrE,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,IAAD,CAApC;AAEA;AAAA;AACE;AACA,YAAC,MAAD;AAAQ,MAAA,IAAI,EAAEiB,MAAd;AAAsB,MAAA,OAAO,EAAED,OAA/B;AAAwC,MAAA,QAAQ,EAAC,IAAjD;AAAsD,MAAA,SAAS,MAA/D;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,GAAD;AAAK,QAAA,QAAQ,EAAC,UAAd;AAAyB,QAAA,GAAG,EAAE,CAA9B;AAAiC,QAAA,KAAK,EAAE,CAAxC;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAEA,OAArB;AAAA,iCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE,QAAC,aAAD;AAAA,+BACE,QAAC,UAAD;AAAA,oBAAaJ;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE,QAAC,aAAD;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,OAAO,EAAC,WAAhC;AAA4C,UAAA,OAAO,EAAEI,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AACE,UAAA,KAAK,EAAC,WADR;AAEE,UAAA,OAAO,EAAC,WAFV;AAGE,UAAA,OAAO,EAAE,MAAM;AACb,gBAAIF,SAAJ,EAAe;AACbA,cAAAA,SAAS;AACV;;AACDE,YAAAA,OAAO;AACR,WARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AA+BD","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n// material ui\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  Box,\r\n  IconButton,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\n// import create from 'zustand';\r\n\r\n// const ConfirmDialog = () => {\r\n//   return (\r\n//     <Dialog open={true} maxWidth=\"sm\" fullWidth>\r\n//       <DialogTitle>Confirm the action</DialogTitle>\r\n//       <Box position=\"absolute\" top={0} right={0}>\r\n//         <IconButton>\r\n//           <Close />\r\n//         </IconButton>\r\n//       </Box>\r\n//       <DialogContent>\r\n//         <Typography>some message here</Typography>\r\n//       </DialogContent>\r\n//       <DialogActions>\r\n//         <Button color=\"primary\" variant=\"contained\">\r\n//           Cancel\r\n//         </Button>\r\n//         <Button color=\"secondary\" variant=\"contained\">\r\n//           Confirm\r\n//         </Button>\r\n//       </DialogActions>\r\n//     </Dialog>\r\n//   );\r\n// };\r\n\r\n// const useConfirmDialogStore = create((set) => ({\r\n//   message: '',\r\n//   onSubmit: undefined,\r\n//   close: () => set({ onSubmit: undefined })\r\n// }));\r\n\r\nConfirmDialog.propTypes = {\r\n  message: PropTypes.string,\r\n  onConfirm: PropTypes.func,\r\n  onClose: PropTypes.func\r\n};\r\n\r\nexport default function ConfirmDialog({ message, onConfirm, onClose }) {\r\n  const [isOpen, setIsOpen] = useState(true);\r\n\r\n  return (\r\n    // so it will close the dialog, if we pass it to the onClose attribute.\r\n    <Dialog open={isOpen} onClose={onClose} maxWidth=\"sm\" fullWidth>\r\n      <DialogTitle>Confirm the action</DialogTitle>\r\n      <Box position=\"absolute\" top={0} right={0}>\r\n        <IconButton onClick={onClose}>\r\n          <Close />\r\n        </IconButton>\r\n      </Box>\r\n      <DialogContent>\r\n        <Typography>{message}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button color=\"primary\" variant=\"contained\" onClick={onClose}>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          color=\"secondary\"\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            if (onConfirm) {\r\n              onConfirm();\r\n            }\r\n            onClose();\r\n          }}\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}