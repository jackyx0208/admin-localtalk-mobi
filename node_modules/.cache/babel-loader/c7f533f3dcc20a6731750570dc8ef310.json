{"ast":null,"code":"import _objectSpread from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import*as Yup from'yup';import{useState}from'react';// material ui\nimport{Dialog,DialogTitle,DialogContent,DialogActions,Button,Box,IconButton,Stack,TextField}from'@material-ui/core';import{Close}from'@material-ui/icons';import{Form,FormikProvider,useFormik}from'formik';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function MailSendMessageDialog(_ref){var mailAddress=_ref.mailAddress,message=_ref.message,onMessage=_ref.onMessage,onSend=_ref.onSend,onClose=_ref.onClose;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1];var formSchema=Yup.object().shape({message:Yup.string().required('This field is required')});var formik=useFormik({enableReinitialize:true,initialValues:{message:message||''},validationSchema:formSchema});var errors=formik.errors,values=formik.values,touched=formik.touched,handleSubmit=formik.handleSubmit,isSubmitting=formik.isSubmitting,setFieldValue=formik.setFieldValue,getFieldProps=formik.getFieldProps;return/*#__PURE__*/ (// so it will close the dialog, if we pass it to the onClose attribute.\n_jsx(Dialog,{open:isOpen,onClose:onClose,maxWidth:\"sm\",fullWidth:true,children:/*#__PURE__*/_jsx(FormikProvider,{value:formik,children:/*#__PURE__*/_jsxs(Form,{noValidate:true,autoComplete:\"off\",onSubmit:onSend,children:[/*#__PURE__*/_jsxs(DialogTitle,{children:[\"Mail Send to \",mailAddress]}),/*#__PURE__*/_jsx(Box,{position:\"absolute\",top:0,right:0,children:/*#__PURE__*/_jsx(IconButton,{onClick:onClose,children:/*#__PURE__*/_jsx(Close,{})})}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Stack,{direction:{xs:'column',sm:'row'},spacing:{xs:0,sm:0},children:[/*#__PURE__*/_jsx(TextField,{type:\"hidden\",name:\"to_email\",value:mailAddress}),/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({fullWidth:true,label:\"Message\",multiline:true,minRows:6,maxRows:6,onChange:onMessage,value:message},getFieldProps('message')),{},{error:Boolean(touched.message&&errors.message),helperText:touched.message&&errors.message}))]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{color:\"primary\",variant:\"contained\",onClick:onClose,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{color:\"secondary\",variant:\"contained\",type:\"submit\",children:\"Send\"})]})]})})}));}","map":{"version":3,"sources":["E:/projects/localtalk.mobi/mobilechat-adminpanel/src/components/_dashboard/mail/MailSendMessageDialog.js"],"names":["Yup","useState","Dialog","DialogTitle","DialogContent","DialogActions","Button","Box","IconButton","Stack","TextField","Close","Form","FormikProvider","useFormik","MailSendMessageDialog","mailAddress","message","onMessage","onSend","onClose","isOpen","setIsOpen","formSchema","object","shape","string","required","formik","enableReinitialize","initialValues","validationSchema","errors","values","touched","handleSubmit","isSubmitting","setFieldValue","getFieldProps","xs","sm","Boolean"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\r\nimport PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n// material ui\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  Box,\r\n  IconButton,\r\n  Stack,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\nimport { Form, FormikProvider, useFormik } from 'formik';\r\n\r\nMailSendMessageDialog.propTypes = {\r\n  mailAddress: PropTypes.string,\r\n  message: PropTypes.string,\r\n  onMessage: PropTypes.func,\r\n  onSend: PropTypes.func,\r\n  onClose: PropTypes.func\r\n};\r\n\r\nexport default function MailSendMessageDialog({ mailAddress, message, onMessage, onSend, onClose }) {\r\n  const [isOpen, setIsOpen] = useState(true);\r\n\r\n  const formSchema = Yup.object().shape({\r\n    message: Yup.string().required('This field is required')\r\n  });\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      message: message || ''\r\n    },\r\n    validationSchema: formSchema\r\n  });\r\n\r\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\r\n\r\n  return (\r\n    // so it will close the dialog, if we pass it to the onClose attribute.\r\n    <Dialog open={isOpen} onClose={onClose} maxWidth=\"sm\" fullWidth>\r\n      <FormikProvider value={formik}>\r\n        <Form noValidate autoComplete=\"off\" onSubmit={onSend}>\r\n          <DialogTitle>Mail Send to {mailAddress}</DialogTitle>\r\n          <Box position=\"absolute\" top={0} right={0}>\r\n            <IconButton onClick={onClose}>\r\n              <Close />\r\n            </IconButton>\r\n          </Box>\r\n          <DialogContent>\r\n            <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 0, sm: 0 }}>\r\n              <TextField type=\"hidden\" name=\"to_email\" value={mailAddress} />\r\n              <TextField\r\n                fullWidth\r\n                label=\"Message\"\r\n                multiline\r\n                minRows={6}\r\n                maxRows={6}\r\n                onChange={onMessage}\r\n                value={message}\r\n                {...getFieldProps('message')}\r\n                error={Boolean(touched.message && errors.message)}\r\n                helperText={touched.message && errors.message}\r\n              />\r\n            </Stack>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button color=\"primary\" variant=\"contained\" onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button color=\"secondary\" variant=\"contained\" type=\"submit\">\r\n              Send\r\n            </Button>\r\n          </DialogActions>\r\n        </Form>\r\n      </FormikProvider>\r\n    </Dialog>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}