{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\localtalk.mobi(back)\\\\pro\\\\toptalk-adminpanel\\\\src\\\\contexts\\\\JWTContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useReducer } from 'react';\nimport PropTypes from 'prop-types'; // utils\n\nimport axios from '../utils/axios';\nimport { isValidToken, setSession } from '../utils/jwt'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  isAuthenticated: false,\n  isInitialized: false,\n  user: null\n};\nconst handlers = {\n  INITIALIZE: (state, action) => {\n    const {\n      isAuthenticated,\n      user\n    } = action.payload;\n    return { ...state,\n      isAuthenticated,\n      isInitialized: true,\n      user\n    };\n  },\n  LOGIN: (state, action) => {\n    const {\n      user\n    } = action.payload;\n    return { ...state,\n      isAuthenticated: true,\n      user\n    };\n  },\n  LOGOUT: state => ({ ...state,\n    isAuthenticated: false,\n    user: null\n  }),\n  REGISTER: (state, action) => {\n    const {\n      user\n    } = action.payload;\n    return { ...state,\n      isAuthenticated: true,\n      user\n    };\n  }\n};\n\nconst reducer = (state, action) => handlers[action.type] ? handlers[action.type](state, action) : state;\n\nconst AuthContext = /*#__PURE__*/createContext({ ...initialState,\n  method: 'jwt',\n  login: () => Promise.resolve(),\n  logout: () => Promise.resolve(),\n  register: () => Promise.resolve()\n});\nAuthProvider.propTypes = {\n  children: PropTypes.node\n};\n\nfunction AuthProvider({\n  children\n}) {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    const initialize = async () => {\n      try {\n        const accessToken = window.localStorage.getItem('accessToken');\n\n        if (accessToken && isValidToken(accessToken)) {\n          setSession(accessToken);\n          const response = await axios.get('/auth/me', {\n            headers: {\n              Authorization: `Bearer ${accessToken}`\n            }\n          });\n          const {\n            user\n          } = response.data;\n          dispatch({\n            type: 'INITIALIZE',\n            payload: {\n              isAuthenticated: true,\n              user\n            }\n          });\n        } else {\n          dispatch({\n            type: 'INITIALIZE',\n            payload: {\n              isAuthenticated: false,\n              user: null\n            }\n          });\n        }\n      } catch (err) {\n        console.error(err);\n        dispatch({\n          type: 'INITIALIZE',\n          payload: {\n            isAuthenticated: false,\n            user: null\n          }\n        });\n      }\n    };\n\n    initialize();\n  }, []);\n\n  const login = async (email, password) => {\n    const response = await axios.post('/auth/adminlogin', {\n      email,\n      password\n    });\n\n    if (response.data.success) {\n      const {\n        accessToken,\n        user\n      } = response.data;\n      setSession(accessToken);\n      dispatch({\n        type: 'LOGIN',\n        payload: {\n          user\n        }\n      });\n    } else {\n      dispatch({\n        type: 'INITIALIZE',\n        payload: {\n          isAuthenticated: false,\n          user: null\n        }\n      });\n    }\n\n    return response;\n  };\n\n  const register = async (email, password, firstName, lastName) => {\n    const response = await axios.post('/api/account/register', {\n      email,\n      password,\n      firstName,\n      lastName\n    });\n    const {\n      accessToken,\n      user\n    } = response.data;\n    window.localStorage.setItem('accessToken', accessToken);\n    dispatch({\n      type: 'REGISTER',\n      payload: {\n        user\n      }\n    });\n  };\n\n  const logout = async () => {\n    // const accessToken = window.localStorage.getItem('accessToken');\n    // if (accessToken && isValidToken(accessToken)) {\n    //   await axios.post(`/auth/logout`, {\n    //     headers: {\n    //       Authorization: `Bearer ${accessToken}`\n    //     }\n    //   });\n    // }\n    await axios.post(`/auth/logout`);\n    setSession(null);\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n\n  const resetPassword = () => {};\n\n  const updateProfile = () => {};\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: { ...state,\n      method: 'jwt',\n      login,\n      logout,\n      register,\n      resetPassword,\n      updateProfile\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["E:/projects/localtalk.mobi(back)/pro/toptalk-adminpanel/src/contexts/JWTContext.js"],"names":["createContext","useEffect","useReducer","PropTypes","axios","isValidToken","setSession","initialState","isAuthenticated","isInitialized","user","handlers","INITIALIZE","state","action","payload","LOGIN","LOGOUT","REGISTER","reducer","type","AuthContext","method","login","Promise","resolve","logout","register","AuthProvider","propTypes","children","node","dispatch","initialize","accessToken","window","localStorage","getItem","response","get","headers","Authorization","data","err","console","error","email","password","post","success","firstName","lastName","setItem","resetPassword","updateProfile"],"mappings":"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","sourcesContent":["import { createContext, useEffect, useReducer } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// utils\r\nimport axios from '../utils/axios';\r\nimport { isValidToken, setSession } from '../utils/jwt';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  isInitialized: false,\r\n  user: null\r\n};\r\n\r\nconst handlers = {\r\n  INITIALIZE: (state, action) => {\r\n    const { isAuthenticated, user } = action.payload;\r\n    return {\r\n      ...state,\r\n      isAuthenticated,\r\n      isInitialized: true,\r\n      user\r\n    };\r\n  },\r\n  LOGIN: (state, action) => {\r\n    const { user } = action.payload;\r\n\r\n    return {\r\n      ...state,\r\n      isAuthenticated: true,\r\n      user\r\n    };\r\n  },\r\n  LOGOUT: (state) => ({\r\n    ...state,\r\n    isAuthenticated: false,\r\n    user: null\r\n  }),\r\n  REGISTER: (state, action) => {\r\n    const { user } = action.payload;\r\n\r\n    return {\r\n      ...state,\r\n      isAuthenticated: true,\r\n      user\r\n    };\r\n  }\r\n};\r\n\r\nconst reducer = (state, action) => (handlers[action.type] ? handlers[action.type](state, action) : state);\r\n\r\nconst AuthContext = createContext({\r\n  ...initialState,\r\n  method: 'jwt',\r\n  login: () => Promise.resolve(),\r\n  logout: () => Promise.resolve(),\r\n  register: () => Promise.resolve()\r\n});\r\n\r\nAuthProvider.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nfunction AuthProvider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  useEffect(() => {\r\n    const initialize = async () => {\r\n      try {\r\n        const accessToken = window.localStorage.getItem('accessToken');\r\n\r\n        if (accessToken && isValidToken(accessToken)) {\r\n          setSession(accessToken);\r\n\r\n          const response = await axios.get('/auth/me', {\r\n            headers: {\r\n              Authorization: `Bearer ${accessToken}`\r\n            }\r\n          });\r\n          const { user } = response.data;\r\n\r\n          dispatch({\r\n            type: 'INITIALIZE',\r\n            payload: {\r\n              isAuthenticated: true,\r\n              user\r\n            }\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: 'INITIALIZE',\r\n            payload: {\r\n              isAuthenticated: false,\r\n              user: null\r\n            }\r\n          });\r\n        }\r\n      } catch (err) {\r\n        console.error(err);\r\n        dispatch({\r\n          type: 'INITIALIZE',\r\n          payload: {\r\n            isAuthenticated: false,\r\n            user: null\r\n          }\r\n        });\r\n      }\r\n    };\r\n\r\n    initialize();\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    const response = await axios.post('/auth/adminlogin', {\r\n      email,\r\n      password\r\n    });\r\n\r\n    if (response.data.success) {\r\n      const { accessToken, user } = response.data;\r\n\r\n      setSession(accessToken);\r\n      dispatch({\r\n        type: 'LOGIN',\r\n        payload: {\r\n          user\r\n        }\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: 'INITIALIZE',\r\n        payload: {\r\n          isAuthenticated: false,\r\n          user: null\r\n        }\r\n      });\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  const register = async (email, password, firstName, lastName) => {\r\n    const response = await axios.post('/api/account/register', {\r\n      email,\r\n      password,\r\n      firstName,\r\n      lastName\r\n    });\r\n    const { accessToken, user } = response.data;\r\n\r\n    window.localStorage.setItem('accessToken', accessToken);\r\n    dispatch({\r\n      type: 'REGISTER',\r\n      payload: {\r\n        user\r\n      }\r\n    });\r\n  };\r\n\r\n  const logout = async () => {\r\n    // const accessToken = window.localStorage.getItem('accessToken');\r\n    // if (accessToken && isValidToken(accessToken)) {\r\n    //   await axios.post(`/auth/logout`, {\r\n    //     headers: {\r\n    //       Authorization: `Bearer ${accessToken}`\r\n    //     }\r\n    //   });\r\n    // }\r\n    await axios.post(`/auth/logout`);\r\n    setSession(null);\r\n    dispatch({ type: 'LOGOUT' });\r\n  };\r\n\r\n  const resetPassword = () => {};\r\n\r\n  const updateProfile = () => {};\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        ...state,\r\n        method: 'jwt',\r\n        login,\r\n        logout,\r\n        register,\r\n        resetPassword,\r\n        updateProfile\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport { AuthContext, AuthProvider };\r\n"]},"metadata":{},"sourceType":"module"}