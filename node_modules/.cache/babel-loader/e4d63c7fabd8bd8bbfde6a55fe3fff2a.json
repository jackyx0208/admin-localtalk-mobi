{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\localtalk.mobi(back)\\\\pro\\\\toptalk-adminpanel\\\\src\\\\utils\\\\getFileFormat.js\";\n// material\nimport { Box } from '@material-ui/core'; //\n\nimport { Icon } from '@iconify/react';\nimport fileFill from '@iconify/icons-eva/file-fill'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FORMAT_IMG = ['jpg', 'jpeg', 'gif', 'bmp', 'png'];\nconst FORMAT_VIDEO = ['m4v', 'avi', 'mpg', 'mp4', 'webm'];\nconst FORMAT_WORD = ['doc', 'docx'];\nconst FORMAT_EXCEL = ['xls', 'xlsx'];\nconst FORMAT_POWERPOINT = ['ppt', 'pptx'];\nconst FORMAT_PDF = ['pdf'];\nconst FORMAT_PHOTOSHOP = ['psd'];\nconst FORMAT_ILLUSTRATOR = ['ai', 'esp'];\nexport function getFileType(fileUrl) {\n  return fileUrl.split('.').pop();\n}\nexport function getFileName(fileUrl) {\n  return fileUrl.substring(fileUrl.lastIndexOf('/') + 1).replace(/\\.[^/.]+$/, '');\n}\nexport function getFileFullName(fileUrl) {\n  return fileUrl.split('/').pop();\n}\nexport function getFileFormat(fileUrl) {\n  let format;\n\n  switch (fileUrl.includes(getFileType(fileUrl))) {\n    case FORMAT_IMG.includes(getFileType(fileUrl)):\n      format = 'image';\n      break;\n\n    case FORMAT_VIDEO.includes(getFileType(fileUrl)):\n      format = 'video';\n      break;\n\n    case FORMAT_WORD.includes(getFileType(fileUrl)):\n      format = 'word';\n      break;\n\n    case FORMAT_EXCEL.includes(getFileType(fileUrl)):\n      format = 'excel';\n      break;\n\n    case FORMAT_POWERPOINT.includes(getFileType(fileUrl)):\n      format = 'powerpoint';\n      break;\n\n    case FORMAT_PDF.includes(getFileType(fileUrl)):\n      format = 'pdf';\n      break;\n\n    case FORMAT_PHOTOSHOP.includes(getFileType(fileUrl)):\n      format = 'photoshop';\n      break;\n\n    case FORMAT_ILLUSTRATOR.includes(getFileType(fileUrl)):\n      format = 'illustrator';\n      break;\n\n    default:\n      format = getFileType(fileUrl);\n  }\n\n  return format;\n}\n\nconst getIcon = name => /*#__PURE__*/_jsxDEV(Box, {\n  component: \"img\",\n  src: `/static/icons/file/${name}.svg`,\n  alt: name,\n  sx: {\n    width: 28,\n    height: 28\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 66,\n  columnNumber: 3\n}, this);\n\nexport function getFileThumb(fileUrl) {\n  let thumb;\n\n  switch (getFileFormat(fileUrl)) {\n    case 'image':\n      thumb = /*#__PURE__*/_jsxDEV(Box, {\n        component: \"img\",\n        src: fileUrl,\n        alt: fileUrl,\n        sx: {\n          width: 1,\n          height: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }, this);\n      break;\n\n    case 'video':\n      thumb = getIcon('file_type_video');\n      break;\n\n    case 'word':\n      thumb = getIcon('file_type_word');\n      break;\n\n    case 'excel':\n      thumb = getIcon('file_type_excel');\n      break;\n\n    case 'powerpoint':\n      thumb = getIcon('file_type_powerpoint');\n      break;\n\n    case 'pdf':\n      thumb = getIcon('file_type_pdf');\n      break;\n\n    case 'photoshop':\n      thumb = getIcon('file_type_photoshop');\n      break;\n\n    case 'illustrator':\n      thumb = getIcon('file_type_ai');\n      break;\n\n    default:\n      thumb = /*#__PURE__*/_jsxDEV(Box, {\n        component: Icon,\n        icon: fileFill,\n        sx: {\n          width: 28,\n          height: 28\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }, this);\n  }\n\n  return thumb;\n}","map":{"version":3,"sources":["E:/projects/localtalk.mobi(back)/pro/toptalk-adminpanel/src/utils/getFileFormat.js"],"names":["Box","Icon","fileFill","FORMAT_IMG","FORMAT_VIDEO","FORMAT_WORD","FORMAT_EXCEL","FORMAT_POWERPOINT","FORMAT_PDF","FORMAT_PHOTOSHOP","FORMAT_ILLUSTRATOR","getFileType","fileUrl","split","pop","getFileName","substring","lastIndexOf","replace","getFileFullName","getFileFormat","format","includes","getIcon","name","width","height","getFileThumb","thumb"],"mappings":"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","sourcesContent":["// material\r\nimport { Box } from '@material-ui/core';\r\n//\r\nimport { Icon } from '@iconify/react';\r\nimport fileFill from '@iconify/icons-eva/file-fill';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst FORMAT_IMG = ['jpg', 'jpeg', 'gif', 'bmp', 'png'];\r\nconst FORMAT_VIDEO = ['m4v', 'avi', 'mpg', 'mp4', 'webm'];\r\nconst FORMAT_WORD = ['doc', 'docx'];\r\nconst FORMAT_EXCEL = ['xls', 'xlsx'];\r\nconst FORMAT_POWERPOINT = ['ppt', 'pptx'];\r\nconst FORMAT_PDF = ['pdf'];\r\nconst FORMAT_PHOTOSHOP = ['psd'];\r\nconst FORMAT_ILLUSTRATOR = ['ai', 'esp'];\r\n\r\nexport function getFileType(fileUrl) {\r\n  return fileUrl.split('.').pop();\r\n}\r\n\r\nexport function getFileName(fileUrl) {\r\n  return fileUrl.substring(fileUrl.lastIndexOf('/') + 1).replace(/\\.[^/.]+$/, '');\r\n}\r\n\r\nexport function getFileFullName(fileUrl) {\r\n  return fileUrl.split('/').pop();\r\n}\r\n\r\nexport function getFileFormat(fileUrl) {\r\n  let format;\r\n\r\n  switch (fileUrl.includes(getFileType(fileUrl))) {\r\n    case FORMAT_IMG.includes(getFileType(fileUrl)):\r\n      format = 'image';\r\n      break;\r\n    case FORMAT_VIDEO.includes(getFileType(fileUrl)):\r\n      format = 'video';\r\n      break;\r\n    case FORMAT_WORD.includes(getFileType(fileUrl)):\r\n      format = 'word';\r\n      break;\r\n    case FORMAT_EXCEL.includes(getFileType(fileUrl)):\r\n      format = 'excel';\r\n      break;\r\n    case FORMAT_POWERPOINT.includes(getFileType(fileUrl)):\r\n      format = 'powerpoint';\r\n      break;\r\n    case FORMAT_PDF.includes(getFileType(fileUrl)):\r\n      format = 'pdf';\r\n      break;\r\n    case FORMAT_PHOTOSHOP.includes(getFileType(fileUrl)):\r\n      format = 'photoshop';\r\n      break;\r\n    case FORMAT_ILLUSTRATOR.includes(getFileType(fileUrl)):\r\n      format = 'illustrator';\r\n      break;\r\n    default:\r\n      format = getFileType(fileUrl);\r\n  }\r\n\r\n  return format;\r\n}\r\n\r\nconst getIcon = (name) => (\r\n  <Box component=\"img\" src={`/static/icons/file/${name}.svg`} alt={name} sx={{ width: 28, height: 28 }} />\r\n);\r\n\r\nexport function getFileThumb(fileUrl) {\r\n  let thumb;\r\n  switch (getFileFormat(fileUrl)) {\r\n    case 'image':\r\n      thumb = <Box component=\"img\" src={fileUrl} alt={fileUrl} sx={{ width: 1, height: 1 }} />;\r\n      break;\r\n    case 'video':\r\n      thumb = getIcon('file_type_video');\r\n      break;\r\n    case 'word':\r\n      thumb = getIcon('file_type_word');\r\n      break;\r\n    case 'excel':\r\n      thumb = getIcon('file_type_excel');\r\n      break;\r\n    case 'powerpoint':\r\n      thumb = getIcon('file_type_powerpoint');\r\n      break;\r\n    case 'pdf':\r\n      thumb = getIcon('file_type_pdf');\r\n      break;\r\n    case 'photoshop':\r\n      thumb = getIcon('file_type_photoshop');\r\n      break;\r\n    case 'illustrator':\r\n      thumb = getIcon('file_type_ai');\r\n      break;\r\n    default:\r\n      thumb = <Box component={Icon} icon={fileFill} sx={{ width: 28, height: 28 }} />;\r\n  }\r\n  return thumb;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}