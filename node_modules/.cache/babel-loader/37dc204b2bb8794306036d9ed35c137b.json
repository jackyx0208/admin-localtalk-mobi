{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\localtalk.mobi(back)\\\\pro\\\\toptalk-adminpanel\\\\src\\\\components\\\\@material-extend\\\\MBreadcrumbs.js\";\nimport { last } from 'lodash';\nimport PropTypes from 'prop-types'; // material\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Typography, Box, Link, Breadcrumbs } from '@material-ui/core'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Separator = /*#__PURE__*/_jsxDEV(Box, {\n  component: \"span\",\n  sx: {\n    width: 4,\n    height: 4,\n    borderRadius: '50%',\n    bgcolor: 'text.disabled'\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 19\n}, this);\n\nLinkItem.propTypes = {\n  link: PropTypes.object\n};\n\nfunction LinkItem({\n  link\n}) {\n  const {\n    href,\n    name,\n    icon\n  } = link;\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: href,\n    variant: \"body2\",\n    component: RouterLink,\n    sx: {\n      lineHeight: 2,\n      display: 'flex',\n      alignItems: 'center',\n      color: 'text.primary',\n      '& > div': {\n        display: 'inherit'\n      }\n    },\n    children: [icon && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mr: 1,\n        '& svg': {\n          width: 20,\n          height: 20\n        }\n      },\n      children: icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), name]\n  }, name, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_c = LinkItem;\nMBreadcrumbs.propTypes = {\n  links: PropTypes.array.isRequired,\n  activeLast: PropTypes.bool\n};\nexport default function MBreadcrumbs({\n  links,\n  activeLast = false,\n  ...other\n}) {\n  const currentLink = last(links).name;\n  const listDefault = links.map(link => /*#__PURE__*/_jsxDEV(LinkItem, {\n    link: link\n  }, link.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 43\n  }, this));\n  const listActiveLast = links.map(link => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: link.name !== currentLink ? /*#__PURE__*/_jsxDEV(LinkItem, {\n      link: link\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      sx: {\n        maxWidth: 260,\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        color: 'text.disabled',\n        textOverflow: 'ellipsis'\n      },\n      children: currentLink\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, link.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n    separator: Separator,\n    ...other,\n    children: activeLast ? listDefault : listActiveLast\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_c2 = MBreadcrumbs;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LinkItem\");\n$RefreshReg$(_c2, \"MBreadcrumbs\");","map":{"version":3,"sources":["E:/projects/localtalk.mobi(back)/pro/toptalk-adminpanel/src/components/@material-extend/MBreadcrumbs.js"],"names":["last","PropTypes","Link","RouterLink","Typography","Box","Breadcrumbs","Separator","width","height","borderRadius","bgcolor","LinkItem","propTypes","link","object","href","name","icon","lineHeight","display","alignItems","color","mr","MBreadcrumbs","links","array","isRequired","activeLast","bool","other","currentLink","listDefault","map","listActiveLast","maxWidth","overflow","whiteSpace","textOverflow"],"mappings":"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","sourcesContent":["import { last } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\n// material\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { Typography, Box, Link, Breadcrumbs } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst Separator = <Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />;\r\n\r\nLinkItem.propTypes = {\r\n  link: PropTypes.object\r\n};\r\n\r\nfunction LinkItem({ link }) {\r\n  const { href, name, icon } = link;\r\n  return (\r\n    <Link\r\n      to={href}\r\n      key={name}\r\n      variant=\"body2\"\r\n      component={RouterLink}\r\n      sx={{\r\n        lineHeight: 2,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        color: 'text.primary',\r\n        '& > div': { display: 'inherit' }\r\n      }}\r\n    >\r\n      {icon && (\r\n        <Box\r\n          sx={{\r\n            mr: 1,\r\n            '& svg': { width: 20, height: 20 }\r\n          }}\r\n        >\r\n          {icon}\r\n        </Box>\r\n      )}\r\n      {name}\r\n    </Link>\r\n  );\r\n}\r\n\r\nMBreadcrumbs.propTypes = {\r\n  links: PropTypes.array.isRequired,\r\n  activeLast: PropTypes.bool\r\n};\r\n\r\nexport default function MBreadcrumbs({ links, activeLast = false, ...other }) {\r\n  const currentLink = last(links).name;\r\n\r\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\r\n  const listActiveLast = links.map((link) => (\r\n    <div key={link.name}>\r\n      {link.name !== currentLink ? (\r\n        <LinkItem link={link} />\r\n      ) : (\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            maxWidth: 260,\r\n            overflow: 'hidden',\r\n            whiteSpace: 'nowrap',\r\n            color: 'text.disabled',\r\n            textOverflow: 'ellipsis'\r\n          }}\r\n        >\r\n          {currentLink}\r\n        </Typography>\r\n      )}\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <Breadcrumbs separator={Separator} {...other}>\r\n      {activeLast ? listDefault : listActiveLast}\r\n    </Breadcrumbs>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}