{"ast":null,"code":"import _objectSpread from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import*as Yup from'yup';import{useCallback}from'react';import{useSnackbar}from'notistack5';import{useNavigate}from'react-router-dom';import{Form,FormikProvider,useFormik}from'formik';// material\nimport{LoadingButton}from'@material-ui/lab';import{Box,Card,Grid,Stack,Switch,TextField,Typography,FormHelperText,FormControlLabel}from'@material-ui/core';// utils\nimport axios from'../../../utils/axios';import{fData}from'../../../utils/formatNumber';import fakeRequest from'../../../utils/fakeRequest';// routes\nimport{PATH_DASHBOARD}from'../../../routes/paths';//\nimport Label from'../../Label';import{UploadAvatar}from'../../upload';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function BlockLimitedWordNewForm(_ref){var isEdit=_ref.isEdit,currentWord=_ref.currentWord;var navigate=useNavigate();var _useSnackbar=useSnackbar(),enqueueSnackbar=_useSnackbar.enqueueSnackbar;var NewUserSchema=Yup.object().shape({word:Yup.string().required('Word is required')// replacewith: Yup.string().required('ReplaceWith is required')\n});var formik=useFormik({enableReinitialize:true,initialValues:{word:(currentWord===null||currentWord===void 0?void 0:currentWord.word)||'',replacewith:(currentWord===null||currentWord===void 0?void 0:currentWord.replacewith)||''},validationSchema:NewUserSchema,onSubmit:function(){var _onSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values,_ref2){var setSubmitting,resetForm,setErrors;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setSubmitting=_ref2.setSubmitting,resetForm=_ref2.resetForm,setErrors=_ref2.setErrors;_context.prev=1;_context.next=4;return fakeRequest(500);case 4:if(isEdit){_context.next=9;break;}_context.next=7;return axios.post('/block-limited-words/',values);case 7:_context.next=11;break;case 9:_context.next=11;return axios.put(\"/block-limited-words?word=\".concat(currentWord===null||currentWord===void 0?void 0:currentWord.word),values);case 11:resetForm();setSubmitting(false);enqueueSnackbar(!isEdit?'Create success':'Update success',{variant:'success'});navigate(PATH_DASHBOARD.blocklimitedwords.list);_context.next=22;break;case 17:_context.prev=17;_context.t0=_context[\"catch\"](1);console.error(_context.t0);setSubmitting(false);setErrors(_context.t0);case 22:case\"end\":return _context.stop();}}},_callee,null,[[1,17]]);}));function onSubmit(_x,_x2){return _onSubmit.apply(this,arguments);}return onSubmit;}()});var errors=formik.errors,values=formik.values,touched=formik.touched,handleSubmit=formik.handleSubmit,isSubmitting=formik.isSubmitting,setFieldValue=formik.setFieldValue,getFieldProps=formik.getFieldProps;return/*#__PURE__*/_jsx(FormikProvider,{value:formik,children:/*#__PURE__*/_jsx(Form,{noValidate:true,autoComplete:\"off\",onSubmit:handleSubmit,children:/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,children:/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:8,children:/*#__PURE__*/_jsx(Card,{sx:{p:3},children:/*#__PURE__*/_jsxs(Stack,{spacing:3,children:[/*#__PURE__*/_jsx(Stack,{direction:{xs:'column',sm:'row'},spacing:{xs:3,sm:2},children:/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({fullWidth:true,label:\"Block Limited Word\"},getFieldProps('word')),{},{error:Boolean(touched.word&&errors.word),helperText:touched.word&&errors.word}))}),/*#__PURE__*/_jsx(Box,{sx:{mt:3,display:'flex',justifyContent:'flex-end'},children:/*#__PURE__*/_jsx(LoadingButton,{type:\"submit\",variant:\"contained\",loading:isSubmitting,children:!isEdit?'Create Block Limited Word':'Save Changes'})})]})})})})})});}","map":{"version":3,"sources":["E:/projects/localtalk.mobi/mobilechat-adminpanel/src/components/_dashboard/blocklimitedwords/BlockLimitedWordNewForm.js"],"names":["Yup","useCallback","useSnackbar","useNavigate","Form","FormikProvider","useFormik","LoadingButton","Box","Card","Grid","Stack","Switch","TextField","Typography","FormHelperText","FormControlLabel","axios","fData","fakeRequest","PATH_DASHBOARD","Label","UploadAvatar","BlockLimitedWordNewForm","isEdit","currentWord","navigate","enqueueSnackbar","NewUserSchema","object","shape","word","string","required","formik","enableReinitialize","initialValues","replacewith","validationSchema","onSubmit","values","setSubmitting","resetForm","setErrors","post","put","variant","blocklimitedwords","list","console","error","errors","touched","handleSubmit","isSubmitting","setFieldValue","getFieldProps","p","xs","sm","Boolean","mt","display","justifyContent"],"mappings":"ifAAA,MAAO,GAAKA,CAAAA,GAAZ,KAAqB,KAArB,CAEA,OAASC,WAAT,KAA4B,OAA5B,CACA,OAASC,WAAT,KAA4B,YAA5B,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,OAASC,IAAT,CAAeC,cAAf,CAA+BC,SAA/B,KAAgD,QAAhD,CACA;AACA,OAASC,aAAT,KAA8B,kBAA9B,CACA,OACEC,GADF,CAEEC,IAFF,CAGEC,IAHF,CAIEC,KAJF,CAKEC,MALF,CAMEC,SANF,CAOEC,UAPF,CAQEC,cARF,CASEC,gBATF,KAUO,mBAVP,CAWA;AACA,MAAOC,CAAAA,KAAP,KAAkB,sBAAlB,CACA,OAASC,KAAT,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,WAAP,KAAwB,4BAAxB,CACA;AACA,OAASC,cAAT,KAA+B,uBAA/B,CACA;AACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,YAAT,KAA6B,cAA7B,CAEA;wFAOA,cAAe,SAASC,CAAAA,uBAAT,MAA0D,IAAvBC,CAAAA,MAAuB,MAAvBA,MAAuB,CAAfC,WAAe,MAAfA,WAAe,CACvE,GAAMC,CAAAA,QAAQ,CAAGvB,WAAW,EAA5B,CACA,iBAA4BD,WAAW,EAAvC,CAAQyB,eAAR,cAAQA,eAAR,CAEA,GAAMC,CAAAA,aAAa,CAAG5B,GAAG,CAAC6B,MAAJ,GAAaC,KAAb,CAAmB,CACvCC,IAAI,CAAE/B,GAAG,CAACgC,MAAJ,GAAaC,QAAb,CAAsB,kBAAtB,CACN;AAFuC,CAAnB,CAAtB,CAKA,GAAMC,CAAAA,MAAM,CAAG5B,SAAS,CAAC,CACvB6B,kBAAkB,CAAE,IADG,CAEvBC,aAAa,CAAE,CACbL,IAAI,CAAE,CAAAN,WAAW,OAAX,EAAAA,WAAW,SAAX,QAAAA,WAAW,CAAEM,IAAb,GAAqB,EADd,CAEbM,WAAW,CAAE,CAAAZ,WAAW,OAAX,EAAAA,WAAW,SAAX,QAAAA,WAAW,CAAEY,WAAb,GAA4B,EAF5B,CAFQ,CAMvBC,gBAAgB,CAAEV,aANK,CAOvBW,QAAQ,kFAAE,iBAAOC,MAAP,8JAAiBC,aAAjB,OAAiBA,aAAjB,CAAgCC,SAAhC,OAAgCA,SAAhC,CAA2CC,SAA3C,OAA2CA,SAA3C,uCAEAxB,CAAAA,WAAW,CAAC,GAAD,CAFX,WAIDK,MAJC,+CAKEP,CAAAA,KAAK,CAAC2B,IAAN,CAAW,uBAAX,CAAoCJ,MAApC,CALF,6DAOEvB,CAAAA,KAAK,CAAC4B,GAAN,qCAAuCpB,WAAvC,SAAuCA,WAAvC,iBAAuCA,WAAW,CAAEM,IAApD,EAA4DS,MAA5D,CAPF,SAUNE,SAAS,GACTD,aAAa,CAAC,KAAD,CAAb,CACAd,eAAe,CAAC,CAACH,MAAD,CAAU,gBAAV,CAA6B,gBAA9B,CAAgD,CAAEsB,OAAO,CAAE,SAAX,CAAhD,CAAf,CACApB,QAAQ,CAACN,cAAc,CAAC2B,iBAAf,CAAiCC,IAAlC,CAAR,CAbM,iFAeNC,OAAO,CAACC,KAAR,cACAT,aAAa,CAAC,KAAD,CAAb,CACAE,SAAS,aAAT,CAjBM,qEAAF,wFAPe,CAAD,CAAxB,CA6BA,GAAQQ,CAAAA,MAAR,CAA8FjB,MAA9F,CAAQiB,MAAR,CAAgBX,MAAhB,CAA8FN,MAA9F,CAAgBM,MAAhB,CAAwBY,OAAxB,CAA8FlB,MAA9F,CAAwBkB,OAAxB,CAAiCC,YAAjC,CAA8FnB,MAA9F,CAAiCmB,YAAjC,CAA+CC,YAA/C,CAA8FpB,MAA9F,CAA+CoB,YAA/C,CAA6DC,aAA7D,CAA8FrB,MAA9F,CAA6DqB,aAA7D,CAA4EC,aAA5E,CAA8FtB,MAA9F,CAA4EsB,aAA5E,CAEA,mBACE,KAAC,cAAD,EAAgB,KAAK,CAAEtB,MAAvB,uBACE,KAAC,IAAD,EAAM,UAAU,KAAhB,CAAiB,YAAY,CAAC,KAA9B,CAAoC,QAAQ,CAAEmB,YAA9C,uBACE,KAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,uBACE,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,EAAE,CAAE,CAAvB,uBACE,KAAC,IAAD,EAAM,EAAE,CAAE,CAAEI,CAAC,CAAE,CAAL,CAAV,uBACE,MAAC,KAAD,EAAO,OAAO,CAAE,CAAhB,wBACE,KAAC,KAAD,EAAO,SAAS,CAAE,CAAEC,EAAE,CAAE,QAAN,CAAgBC,EAAE,CAAE,KAApB,CAAlB,CAA+C,OAAO,CAAE,CAAED,EAAE,CAAE,CAAN,CAASC,EAAE,CAAE,CAAb,CAAxD,uBACE,KAAC,SAAD,8BACE,SAAS,KADX,CAEE,KAAK,CAAC,oBAFR,EAGMH,aAAa,CAAC,MAAD,CAHnB,MAIE,KAAK,CAAEI,OAAO,CAACR,OAAO,CAACrB,IAAR,EAAgBoB,MAAM,CAACpB,IAAxB,CAJhB,CAKE,UAAU,CAAEqB,OAAO,CAACrB,IAAR,EAAgBoB,MAAM,CAACpB,IALrC,GADF,EADF,cAmBE,KAAC,GAAD,EAAK,EAAE,CAAE,CAAE8B,EAAE,CAAE,CAAN,CAASC,OAAO,CAAE,MAAlB,CAA0BC,cAAc,CAAE,UAA1C,CAAT,uBACE,KAAC,aAAD,EAAe,IAAI,CAAC,QAApB,CAA6B,OAAO,CAAC,WAArC,CAAiD,OAAO,CAAET,YAA1D,UACG,CAAC9B,MAAD,CAAU,2BAAV,CAAwC,cAD3C,EADF,EAnBF,GADF,EADF,EADF,EADF,EADF,EADF,CAqCD","sourcesContent":["import * as Yup from 'yup';\r\nimport PropTypes from 'prop-types';\r\nimport { useCallback } from 'react';\r\nimport { useSnackbar } from 'notistack5';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Form, FormikProvider, useFormik } from 'formik';\r\n// material\r\nimport { LoadingButton } from '@material-ui/lab';\r\nimport {\r\n  Box,\r\n  Card,\r\n  Grid,\r\n  Stack,\r\n  Switch,\r\n  TextField,\r\n  Typography,\r\n  FormHelperText,\r\n  FormControlLabel\r\n} from '@material-ui/core';\r\n// utils\r\nimport axios from '../../../utils/axios';\r\nimport { fData } from '../../../utils/formatNumber';\r\nimport fakeRequest from '../../../utils/fakeRequest';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n//\r\nimport Label from '../../Label';\r\nimport { UploadAvatar } from '../../upload';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nBlockLimitedWordNewForm.propTypes = {\r\n  isEdit: PropTypes.bool,\r\n  currentWord: PropTypes.object\r\n};\r\n\r\nexport default function BlockLimitedWordNewForm({ isEdit, currentWord }) {\r\n  const navigate = useNavigate();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const NewUserSchema = Yup.object().shape({\r\n    word: Yup.string().required('Word is required')\r\n    // replacewith: Yup.string().required('ReplaceWith is required')\r\n  });\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      word: currentWord?.word || '',\r\n      replacewith: currentWord?.replacewith || ''\r\n    },\r\n    validationSchema: NewUserSchema,\r\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\r\n      try {\r\n        await fakeRequest(500);\r\n\r\n        if (!isEdit) {\r\n          await axios.post('/block-limited-words/', values);\r\n        } else {\r\n          await axios.put(`/block-limited-words?word=${currentWord?.word}`, values);\r\n        }\r\n\r\n        resetForm();\r\n        setSubmitting(false);\r\n        enqueueSnackbar(!isEdit ? 'Create success' : 'Update success', { variant: 'success' });\r\n        navigate(PATH_DASHBOARD.blocklimitedwords.list);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setSubmitting(false);\r\n        setErrors(error);\r\n      }\r\n    }\r\n  });\r\n\r\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\r\n\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={8}>\r\n            <Card sx={{ p: 3 }}>\r\n              <Stack spacing={3}>\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Block Limited Word\"\r\n                    {...getFieldProps('word')}\r\n                    error={Boolean(touched.word && errors.word)}\r\n                    helperText={touched.word && errors.word}\r\n                  />\r\n\r\n                  {/* <TextField\r\n                    fullWidth\r\n                    label=\"Replace With\"\r\n                    {...getFieldProps('replacewith')}\r\n                    error={Boolean(touched.replacewith && errors.replacewith)}\r\n                    helperText={touched.replacewith && errors.replacewith}\r\n                  /> */}\r\n                </Stack>\r\n\r\n                <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\r\n                  <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n                    {!isEdit ? 'Create Block Limited Word' : 'Save Changes'}\r\n                  </LoadingButton>\r\n                </Box>\r\n              </Stack>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}