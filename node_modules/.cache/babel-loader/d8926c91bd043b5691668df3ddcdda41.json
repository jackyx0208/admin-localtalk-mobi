{"ast":null,"code":"import _objectSpread from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import*as Yup from'yup';import{useSnackbar}from'notistack5';import{useNavigate}from'react-router-dom';import{Form,FormikProvider,useFormik}from'formik';// material\nimport{LoadingButton}from'@material-ui/lab';import{Box,Card,Grid,Stack,Switch,TextField,Typography,FormHelperText,FormControlLabel}from'@material-ui/core';// utils\nimport axios from'../../../utils/axios';import fakeRequest from'../../../utils/fakeRequest';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ChatAdminMessageForm(_ref){var chatSettings=_ref.chatSettings;var navigate=useNavigate();var _useSnackbar=useSnackbar(),enqueueSnackbar=_useSnackbar.enqueueSnackbar;var ChatAdminMessageSchema=Yup.object().shape({admin_message:Yup.string().required('This field is required')});var formik=useFormik({enableReinitialize:true,initialValues:{admin_message:(chatSettings===null||chatSettings===void 0?void 0:chatSettings.settings.admin_message)||'Please leave a message, I will reply to you as soon as possible. You may talk about anything: advertising, complaining, suggestions, advice, cooperation, etc.'},validationSchema:ChatAdminMessageSchema,onSubmit:function(){var _onSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values,_ref2){var setSubmitting,resetForm,setErrors;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setSubmitting=_ref2.setSubmitting,resetForm=_ref2.resetForm,setErrors=_ref2.setErrors;_context.prev=1;_context.next=4;return fakeRequest(500);case 4:_context.next=6;return axios.put(\"/settings/chat\",values);case 6:setSubmitting(false);enqueueSnackbar('Update success',{variant:'success'});_context.next=15;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](1);console.error(_context.t0);setSubmitting(false);setErrors(_context.t0);case 15:case\"end\":return _context.stop();}}},_callee,null,[[1,10]]);}));function onSubmit(_x,_x2){return _onSubmit.apply(this,arguments);}return onSubmit;}()});var errors=formik.errors,values=formik.values,touched=formik.touched,handleSubmit=formik.handleSubmit,isSubmitting=formik.isSubmitting,setFieldValue=formik.setFieldValue,getFieldProps=formik.getFieldProps;return/*#__PURE__*/_jsx(FormikProvider,{value:formik,children:/*#__PURE__*/_jsx(Form,{noValidate:true,autoComplete:\"off\",onSubmit:handleSubmit,children:/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,children:/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:12,children:/*#__PURE__*/_jsx(Card,{sx:{p:3},children:/*#__PURE__*/_jsx(Stack,{spacing:3,children:/*#__PURE__*/_jsxs(Stack,{direction:{xs:'column',sm:'row'},spacing:{xs:3,sm:2},children:[/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({fullWidth:true,label:\"Admin Message\",multiline:true,minRows:2,maxRows:4},getFieldProps('admin_message')),{},{error:Boolean(touched.message&&errors.message),helperText:touched.message&&errors.message})),/*#__PURE__*/_jsx(LoadingButton,{type:\"submit\",variant:\"contained\",loading:isSubmitting,children:\"Save\"})]})})})})})})});}","map":{"version":3,"sources":["E:/projects/localtalk.mobi/mobilechat-adminpanel/src/components/_dashboard/chat/ChatAdminMessageForm.js"],"names":["Yup","useSnackbar","useNavigate","Form","FormikProvider","useFormik","LoadingButton","Box","Card","Grid","Stack","Switch","TextField","Typography","FormHelperText","FormControlLabel","axios","fakeRequest","ChatAdminMessageForm","chatSettings","navigate","enqueueSnackbar","ChatAdminMessageSchema","object","shape","admin_message","string","required","formik","enableReinitialize","initialValues","settings","validationSchema","onSubmit","values","setSubmitting","resetForm","setErrors","put","variant","console","error","errors","touched","handleSubmit","isSubmitting","setFieldValue","getFieldProps","p","xs","sm","Boolean","message"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\r\nimport PropTypes from 'prop-types';\r\nimport { useSnackbar } from 'notistack5';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Form, FormikProvider, useFormik } from 'formik';\r\n// material\r\nimport { LoadingButton } from '@material-ui/lab';\r\nimport {\r\n  Box,\r\n  Card,\r\n  Grid,\r\n  Stack,\r\n  Switch,\r\n  TextField,\r\n  Typography,\r\n  FormHelperText,\r\n  FormControlLabel\r\n} from '@material-ui/core';\r\n// utils\r\nimport axios from '../../../utils/axios';\r\nimport fakeRequest from '../../../utils/fakeRequest';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatAdminMessageForm.propTypes = {\r\n  chatSettings: PropTypes.object\r\n};\r\n\r\nexport default function ChatAdminMessageForm({ chatSettings }) {\r\n  const navigate = useNavigate();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const ChatAdminMessageSchema = Yup.object().shape({\r\n    admin_message: Yup.string().required('This field is required')\r\n  });\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      admin_message:\r\n        chatSettings?.settings.admin_message ||\r\n        'Please leave a message, I will reply to you as soon as possible. You may talk about anything: advertising, complaining, suggestions, advice, cooperation, etc.'\r\n    },\r\n    validationSchema: ChatAdminMessageSchema,\r\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\r\n      try {\r\n        await fakeRequest(500);\r\n\r\n        await axios.put(`/settings/chat`, values);\r\n\r\n        setSubmitting(false);\r\n        enqueueSnackbar('Update success', { variant: 'success' });\r\n      } catch (error) {\r\n        console.error(error);\r\n        setSubmitting(false);\r\n        setErrors(error);\r\n      }\r\n    }\r\n  });\r\n\r\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\r\n\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={12}>\r\n            <Card sx={{ p: 3 }}>\r\n              <Stack spacing={3}>\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Admin Message\"\r\n                    multiline\r\n                    minRows={2}\r\n                    maxRows={4}\r\n                    {...getFieldProps('admin_message')}\r\n                    error={Boolean(touched.message && errors.message)}\r\n                    helperText={touched.message && errors.message}\r\n                  />\r\n                  <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n                    Save\r\n                  </LoadingButton>\r\n                </Stack>\r\n              </Stack>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}