{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\localtalk.mobi(react+node)\\\\pro\\\\toptalk-adminpanel\\\\src\\\\components\\\\ThemePrimaryColor.js\";\nimport PropTypes from 'prop-types';\nimport { useMemo } from 'react'; // material\n\nimport { alpha, ThemeProvider, createTheme, useTheme } from '@material-ui/core/styles'; // hooks\n\nimport useSettings from '../hooks/useSettings'; //\n\nimport componentsOverride from '../theme/overrides'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nThemePrimaryColor.propTypes = {\n  children: PropTypes.node\n};\nexport default function ThemePrimaryColor({\n  children\n}) {\n  const defaultTheme = useTheme();\n  const {\n    setColor\n  } = useSettings();\n  const themeOptions = useMemo(() => ({ ...defaultTheme,\n    palette: { ...defaultTheme.palette,\n      primary: setColor\n    },\n    customShadows: { ...defaultTheme.customShadows,\n      primary: `0 8px 16px 0 ${alpha(setColor.main, 0.24)}`\n    }\n  }), [setColor, defaultTheme]);\n  const theme = createTheme(themeOptions);\n  theme.components = componentsOverride(theme);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n}","map":{"version":3,"sources":["E:/projects/localtalk.mobi(react+node)/pro/toptalk-adminpanel/src/components/ThemePrimaryColor.js"],"names":["PropTypes","useMemo","alpha","ThemeProvider","createTheme","useTheme","useSettings","componentsOverride","ThemePrimaryColor","propTypes","children","node","defaultTheme","setColor","themeOptions","palette","primary","customShadows","main","theme","components"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,OAAxB,C,CACA;;AACA,SAASC,KAAT,EAAgBC,aAAhB,EAA+BC,WAA/B,EAA4CC,QAA5C,QAA4D,0BAA5D,C,CACA;;AACA,OAAOC,WAAP,MAAwB,sBAAxB,C,CACA;;AACA,OAAOC,kBAAP,MAA+B,oBAA/B,C,CAEA;;;AAEAC,iBAAiB,CAACC,SAAlB,GAA8B;AAC5BC,EAAAA,QAAQ,EAAEV,SAAS,CAACW;AADQ,CAA9B;AAIA,eAAe,SAASH,iBAAT,CAA2B;AAAEE,EAAAA;AAAF,CAA3B,EAAyC;AACtD,QAAME,YAAY,GAAGP,QAAQ,EAA7B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAeP,WAAW,EAAhC;AAEA,QAAMQ,YAAY,GAAGb,OAAO,CAC1B,OAAO,EACL,GAAGW,YADE;AAELG,IAAAA,OAAO,EAAE,EACP,GAAGH,YAAY,CAACG,OADT;AAEPC,MAAAA,OAAO,EAAEH;AAFF,KAFJ;AAMLI,IAAAA,aAAa,EAAE,EACb,GAAGL,YAAY,CAACK,aADH;AAEbD,MAAAA,OAAO,EAAG,gBAAed,KAAK,CAACW,QAAQ,CAACK,IAAV,EAAgB,IAAhB,CAAsB;AAFvC;AANV,GAAP,CAD0B,EAY1B,CAACL,QAAD,EAAWD,YAAX,CAZ0B,CAA5B;AAeA,QAAMO,KAAK,GAAGf,WAAW,CAACU,YAAD,CAAzB;AACAK,EAAAA,KAAK,CAACC,UAAN,GAAmBb,kBAAkB,CAACY,KAAD,CAArC;AAEA,sBAAO,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEA,KAAtB;AAAA,cAA8BT;AAA9B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useMemo } from 'react';\r\n// material\r\nimport { alpha, ThemeProvider, createTheme, useTheme } from '@material-ui/core/styles';\r\n// hooks\r\nimport useSettings from '../hooks/useSettings';\r\n//\r\nimport componentsOverride from '../theme/overrides';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nThemePrimaryColor.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default function ThemePrimaryColor({ children }) {\r\n  const defaultTheme = useTheme();\r\n  const { setColor } = useSettings();\r\n\r\n  const themeOptions = useMemo(\r\n    () => ({\r\n      ...defaultTheme,\r\n      palette: {\r\n        ...defaultTheme.palette,\r\n        primary: setColor\r\n      },\r\n      customShadows: {\r\n        ...defaultTheme.customShadows,\r\n        primary: `0 8px 16px 0 ${alpha(setColor.main, 0.24)}`\r\n      }\r\n    }),\r\n    [setColor, defaultTheme]\r\n  );\r\n\r\n  const theme = createTheme(themeOptions);\r\n  theme.components = componentsOverride(theme);\r\n\r\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}