{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\localtalk.mobi\\\\mobilechat-adminpanel\\\\src\\\\components\\\\_dashboard\\\\user\\\\UserNewForm.js\";\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { useCallback, useState, useEffect } from 'react';\nimport { useSnackbar } from 'notistack5';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, FormikProvider, useFormik } from 'formik'; // material\n\nimport { LoadingButton } from '@material-ui/lab';\nimport { Box, Card, Grid, Stack, Switch, TextField, Typography, FormHelperText, FormControlLabel } from '@material-ui/core'; // utils\n\nimport axios from '../../../utils/axios';\nimport { fData } from '../../../utils/formatNumber';\nimport fakeRequest from '../../../utils/fakeRequest'; // routes\n\nimport { PATH_DASHBOARD } from '../../../routes/paths'; //\n\nimport Label from '../../Label';\nimport { UploadAvatar } from '../../upload';\nimport countries from './countries';\nimport useAuth from '../../../hooks/useAuth';\nimport ConfirmDialog from '../../ConfirmDialog';\nimport { serverConfig } from '../../../config'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nUserNewForm.propTypes = {\n  isEdit: PropTypes.bool,\n  currentUser: PropTypes.object\n};\nexport default function UserNewForm({\n  isEdit,\n  currentUser\n}) {\n  const navigate = useNavigate();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    user\n  } = useAuth();\n  const [openDeleteConfirm, setOpenDeleteConfirm] = useState(false);\n  const [avatarImage, setAvatarImage] = useState(null);\n\n  const handleCloseDeleteConfirm = () => {\n    setOpenDeleteConfirm(false);\n  };\n\n  const onDeleteUser = async () => {\n    if (currentUser._id !== user._id) {\n      setOpenDeleteConfirm(true);\n    } else {\n      enqueueSnackbar(\"You can't delete this user you logged in\", {\n        variant: 'warning'\n      });\n    }\n  };\n\n  const handleDeleteUser = async () => {\n    if (currentUser._id !== user._id) {\n      await axios.delete(`user/delete/${currentUser._id}`);\n      navigate(PATH_DASHBOARD.user.list);\n    }\n  };\n\n  const currencies = [{\n    value: 'USD',\n    label: '$'\n  }, {\n    value: 'EUR',\n    label: '€'\n  }, {\n    value: 'BTC',\n    label: '฿'\n  }, {\n    value: 'JPY',\n    label: '¥'\n  }];\n  let NewUserSchema = null;\n\n  if (!isEdit) {\n    NewUserSchema = Yup.object().shape({\n      // name: Yup.string().required('Name is required'),\n      email: Yup.string().required('Email is required').email(),\n      password: Yup.string().required('Password is required'),\n      gender: Yup.string().required('Gender is required'),\n      role: Yup.string().required('Role is required') // coverage: Yup.string().required('Coverage is required'),\n      // address: Yup.string().required('Address is required'),\n      // phoneNumber: Yup.string().required('Phone number is required'),\n      // country: Yup.string().required('country is required'),\n      // state: Yup.string().required('State is required'),\n      // city: Yup.string().required('City is required')\n\n    });\n  } else {\n    NewUserSchema = Yup.object().shape({\n      // name: Yup.string().required('Name is required'),\n      email: Yup.string().required('Email is required').email(),\n      password: Yup.string().required('Password is required'),\n      gender: Yup.string().required('Gender is required') // role: Yup.string().required('Role is required'),\n      // coverage: Yup.string().required('Coverage is required'),\n      // address: Yup.string().required('Address is required'),\n      // phoneNumber: Yup.string().required('Phone number is required'),\n\n    });\n  }\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      name: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.name) || '',\n      email: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.email) || '',\n      password: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.originPassword) || '',\n      gender: currentUser && currentUser.gender > -1 ? currentUser.gender : '',\n      role: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.role) || '',\n      balance: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.balance) || 0,\n      balanceCurrency: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.balanceCurrency) || '$',\n      punishment: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.punishment) || 0,\n      fixedLocation: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.fixedLocation) || '',\n      phoneNumber: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.phoneNumber) || '',\n      address: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.address) || '',\n      country: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.country) || '',\n      state: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.state) || '',\n      city: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.city) || '',\n      zipCode: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.zipCode) || '',\n      avatarUrl: currentUser && `${serverConfig.baseUrl}/user/img-src/${currentUser.avatarUrl}` || null,\n      isVerified: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.isVerified) || true,\n      status: currentUser === null || currentUser === void 0 ? void 0 : currentUser.status,\n      username: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.username) || '',\n      note: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.note) || ''\n    },\n    validationSchema: NewUserSchema,\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm,\n      setErrors\n    }) => {\n      try {\n        await fakeRequest(500);\n\n        if (!isEdit) {\n          if (!values.isVerified) {\n            enqueueSnackbar('The system sends an email to your email address, please click the link in the email to finish verification, thank you.', {\n              variant: 'info',\n              delay: 3000\n            });\n          }\n\n          await axios.post('/user/create', values);\n        } else {\n          await axios.post(`/user/update/${currentUser._id}`, values);\n        }\n\n        if (avatarImage) {\n          await axios.post(`/user/img/${currentUser._id}`, avatarImage);\n        }\n\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar(!isEdit ? 'Create success' : 'Update success', {\n          variant: 'success'\n        });\n        navigate(PATH_DASHBOARD.user.list);\n      } catch (error) {\n        console.error(error);\n        enqueueSnackbar(error.message, {\n          variant: 'error'\n        });\n        setSubmitting(false);\n        setErrors(error);\n      }\n    }\n  });\n\n  const handleAbort = async () => {\n    navigate(PATH_DASHBOARD.user.list);\n  };\n\n  const {\n    errors,\n    values,\n    touched,\n    handleSubmit,\n    isSubmitting,\n    setFieldValue,\n    getFieldProps\n  } = formik;\n  const handleDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n\n    if (file) {\n      const formData = new FormData();\n      formData.append('img', file, file.name);\n      setAvatarImage(formData);\n      setFieldValue('avatarUrl', { ...file,\n        preview: URL.createObjectURL(file)\n      });\n    }\n  }, [setFieldValue]);\n  const handleChangeEmail = useCallback(event => {\n    const emailValue = event.target.value;\n    setFieldValue('email', emailValue);\n    const currentName = getFieldProps('name').value;\n\n    if (currentName.trim() === '') {\n      const nameInd = emailValue.indexOf('@');\n\n      if (nameInd !== -1) {\n        setFieldValue('name', emailValue.slice(0, nameInd));\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(FormikProvider, {\n    value: formik,\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              py: 10,\n              px: 3\n            },\n            children: [isEdit && /*#__PURE__*/_jsxDEV(Label, {\n              color: values.status !== 'active' ? 'error' : 'success',\n              sx: {\n                textTransform: 'uppercase',\n                position: 'absolute',\n                top: 24,\n                right: 24\n              },\n              children: values.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this), isEdit && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 5\n              },\n              children: [/*#__PURE__*/_jsxDEV(UploadAvatar, {\n                accept: \"image/*\",\n                file: values.avatarUrl,\n                maxSize: 3145728,\n                onDrop: handleDrop,\n                error: Boolean(touched.avatarUrl && errors.avatarUrl),\n                caption: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  sx: {\n                    mt: 2,\n                    mx: 'auto',\n                    display: 'block',\n                    textAlign: 'center',\n                    color: 'text.secondary'\n                  },\n                  children: [\"Allowed *.jpeg, *.jpg, *.png, *.gif\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 25\n                  }, this), \" max size of \", fData(3145728)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                error: true,\n                sx: {\n                  px: 2,\n                  textAlign: 'center'\n                },\n                children: touched.avatarUrl && errors.avatarUrl\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this), isEdit && /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              labelPlacement: \"start\",\n              control: /*#__PURE__*/_jsxDEV(Switch, {\n                onChange: event => setFieldValue('status', event.target.checked ? 'banned' : 'active'),\n                checked: values.status !== 'active'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 21\n              }, this),\n              label: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  sx: {\n                    mb: 0.5\n                  },\n                  children: \"Banned\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    color: 'text.secondary'\n                  },\n                  children: \"Apply disable account\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true),\n              sx: {\n                mx: 0,\n                mb: 3,\n                width: 1,\n                justifyContent: 'space-between'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              labelPlacement: \"start\",\n              control: /*#__PURE__*/_jsxDEV(Switch, { ...getFieldProps('isVerified'),\n                checked: values.isVerified\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 26\n              }, this),\n              label: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  sx: {\n                    mb: 0.5\n                  },\n                  children: \"Email Verified\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    color: 'text.secondary'\n                  },\n                  children: \"Disabling this will automatically send the user a verification email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true),\n              sx: {\n                mx: 0,\n                width: 1,\n                justifyContent: 'space-between'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              p: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Email Address\",\n                  ...getFieldProps('email'),\n                  error: Boolean(touched.email && errors.email),\n                  helperText: touched.email && errors.email,\n                  onChange: handleChangeEmail\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"NickName\",\n                  ...getFieldProps('name'),\n                  error: Boolean(touched.name && errors.name),\n                  helperText: touched.name && errors.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(TextField // type=\"password\"\n                , {\n                  fullWidth: true,\n                  label: \"Password\",\n                  ...getFieldProps('password'),\n                  error: Boolean(touched.password && errors.password),\n                  helperText: touched.password && errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  select: true,\n                  fullWidth: true,\n                  label: \"Gender\",\n                  ...getFieldProps('gender'),\n                  SelectProps: {\n                    native: true\n                  },\n                  error: Boolean(touched.gender && errors.gender),\n                  helperText: touched.gender && errors.gender,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"0\",\n                    children: \"Male\"\n                  }, \"male\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"1\",\n                    children: \"Female\"\n                  }, \"female\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"2\",\n                    children: \"Business\"\n                  }, \"business\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 17\n              }, this), !isEdit && /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  select: true,\n                  fullWidth: true,\n                  label: \"Role\",\n                  ...getFieldProps('role'),\n                  SelectProps: {\n                    native: true\n                  },\n                  error: Boolean(touched.role && errors.role),\n                  helperText: touched.role && errors.role,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"user\",\n                    children: \"user\"\n                  }, \"user\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"admin\",\n                    children: \"admin\"\n                  }, \"admin\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 361,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 19\n              }, this), isEdit && /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Fixed Location\",\n                  ...getFieldProps('fixedLocation'),\n                  error: Boolean(touched.fixedLocation && errors.fixedLocation),\n                  helperText: touched.fixedLocation && errors.fixedLocation\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Note\",\n                  multiline: true,\n                  minRows: 4,\n                  maxRows: 4,\n                  ...getFieldProps('note'),\n                  error: Boolean(touched.note && errors.note),\n                  helperText: touched.note && errors.note\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 17\n              }, this), isEdit && /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"Balance: \\xA0\\xA0\\xA0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField // select\n                , {\n                  variant: \"standard\",\n                  style: {\n                    width: 100\n                  },\n                  ...getFieldProps('balanceCurrency'),\n                  // SelectProps={{ native: true }}\n                  error: Boolean(touched.balanceCurrency && errors.balanceCurrency),\n                  helperText: touched.balanceCurrency && errors.balanceCurrency\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"standard\",\n                  style: {\n                    width: 100\n                  },\n                  inputProps: {\n                    inputMode: 'numeric',\n                    pattern: '[0-9]*'\n                  },\n                  ...getFieldProps('balance'),\n                  error: Boolean(touched.balance && errors.balance),\n                  helperText: touched.balance && errors.balance\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 19\n              }, this), isEdit && /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"Punishment: \\xA0\\xA0\\xA0 banned from talking,\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"standard\",\n                  style: {\n                    width: 50\n                  },\n                  inputProps: {\n                    inputMode: 'numeric',\n                    pattern: '[0-9]*'\n                  },\n                  ...getFieldProps('punishment'),\n                  error: Boolean(touched.punishment && errors.punishment),\n                  helperText: touched.punishment && errors.punishment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  component: \"div\",\n                  style: {\n                    lineHeight: 2\n                  },\n                  children: \"hours remaining\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 3,\n                  display: 'flex',\n                  justifyContent: 'flex-end'\n                },\n                children: /*#__PURE__*/_jsxDEV(Stack, {\n                  direction: {\n                    xs: 'column',\n                    sm: 'row'\n                  },\n                  spacing: {\n                    xs: 3,\n                    sm: 2\n                  },\n                  children: [isEdit && /*#__PURE__*/_jsxDEV(LoadingButton, {\n                    type: \"button\",\n                    color: \"error\",\n                    variant: \"contained\",\n                    onClick: onDeleteUser,\n                    children: \"Delete This User\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 538,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n                    type: \"submit\",\n                    variant: \"contained\",\n                    loading: isSubmitting,\n                    children: !isEdit ? 'Create User' : 'Save Changes'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 542,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n                    type: \"button\",\n                    color: \"warning\",\n                    variant: \"contained\",\n                    onClick: handleAbort,\n                    children: \"Abort\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 545,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), openDeleteConfirm && /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      message: \"Are you sure you are going to delete this user?\",\n      onConfirm: handleDeleteUser,\n      onClose: handleCloseDeleteConfirm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["E:/projects/localtalk.mobi/mobilechat-adminpanel/src/components/_dashboard/user/UserNewForm.js"],"names":["Yup","PropTypes","useCallback","useState","useEffect","useSnackbar","useNavigate","Form","FormikProvider","useFormik","LoadingButton","Box","Card","Grid","Stack","Switch","TextField","Typography","FormHelperText","FormControlLabel","axios","fData","fakeRequest","PATH_DASHBOARD","Label","UploadAvatar","countries","useAuth","ConfirmDialog","serverConfig","UserNewForm","propTypes","isEdit","bool","currentUser","object","navigate","enqueueSnackbar","user","openDeleteConfirm","setOpenDeleteConfirm","avatarImage","setAvatarImage","handleCloseDeleteConfirm","onDeleteUser","_id","variant","handleDeleteUser","delete","list","currencies","value","label","NewUserSchema","shape","email","string","required","password","gender","role","formik","enableReinitialize","initialValues","name","originPassword","balance","balanceCurrency","punishment","fixedLocation","phoneNumber","address","country","state","city","zipCode","avatarUrl","baseUrl","isVerified","status","username","note","validationSchema","onSubmit","values","setSubmitting","resetForm","setErrors","delay","post","error","console","message","handleAbort","errors","touched","handleSubmit","isSubmitting","setFieldValue","getFieldProps","handleDrop","acceptedFiles","file","formData","FormData","append","preview","URL","createObjectURL","handleChangeEmail","event","emailValue","target","currentName","trim","nameInd","indexOf","slice","py","px","textTransform","position","top","right","mb","Boolean","mt","mx","display","textAlign","color","checked","width","justifyContent","p","xs","sm","native","lineHeight","inputMode","pattern"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\r\nimport PropTypes from 'prop-types';\r\nimport { useCallback, useState, useEffect } from 'react';\r\nimport { useSnackbar } from 'notistack5';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Form, FormikProvider, useFormik } from 'formik';\r\n// material\r\nimport { LoadingButton } from '@material-ui/lab';\r\nimport {\r\n  Box,\r\n  Card,\r\n  Grid,\r\n  Stack,\r\n  Switch,\r\n  TextField,\r\n  Typography,\r\n  FormHelperText,\r\n  FormControlLabel\r\n} from '@material-ui/core';\r\n// utils\r\nimport axios from '../../../utils/axios';\r\nimport { fData } from '../../../utils/formatNumber';\r\nimport fakeRequest from '../../../utils/fakeRequest';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n//\r\nimport Label from '../../Label';\r\nimport { UploadAvatar } from '../../upload';\r\nimport countries from './countries';\r\nimport useAuth from '../../../hooks/useAuth';\r\nimport ConfirmDialog from '../../ConfirmDialog';\r\nimport { serverConfig } from '../../../config';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nUserNewForm.propTypes = {\r\n  isEdit: PropTypes.bool,\r\n  currentUser: PropTypes.object\r\n};\r\n\r\nexport default function UserNewForm({ isEdit, currentUser }) {\r\n  const navigate = useNavigate();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const { user } = useAuth();\r\n  const [openDeleteConfirm, setOpenDeleteConfirm] = useState(false);\r\n  const [avatarImage, setAvatarImage] = useState(null);\r\n\r\n  const handleCloseDeleteConfirm = () => {\r\n    setOpenDeleteConfirm(false);\r\n  };\r\n\r\n  const onDeleteUser = async () => {\r\n    if (currentUser._id !== user._id) {\r\n      setOpenDeleteConfirm(true);\r\n    } else {\r\n      enqueueSnackbar(\"You can't delete this user you logged in\", { variant: 'warning' });\r\n    }\r\n  };\r\n\r\n  const handleDeleteUser = async () => {\r\n    if (currentUser._id !== user._id) {\r\n      await axios.delete(`user/delete/${currentUser._id}`);\r\n      navigate(PATH_DASHBOARD.user.list);\r\n    }\r\n  };\r\n\r\n  const currencies = [\r\n    {\r\n      value: 'USD',\r\n      label: '$'\r\n    },\r\n    {\r\n      value: 'EUR',\r\n      label: '€'\r\n    },\r\n    {\r\n      value: 'BTC',\r\n      label: '฿'\r\n    },\r\n    {\r\n      value: 'JPY',\r\n      label: '¥'\r\n    }\r\n  ];\r\n\r\n  let NewUserSchema = null;\r\n\r\n  if (!isEdit) {\r\n    NewUserSchema = Yup.object().shape({\r\n      // name: Yup.string().required('Name is required'),\r\n      email: Yup.string().required('Email is required').email(),\r\n      password: Yup.string().required('Password is required'),\r\n      gender: Yup.string().required('Gender is required'),\r\n      role: Yup.string().required('Role is required')\r\n      // coverage: Yup.string().required('Coverage is required'),\r\n      // address: Yup.string().required('Address is required'),\r\n      // phoneNumber: Yup.string().required('Phone number is required'),\r\n      // country: Yup.string().required('country is required'),\r\n      // state: Yup.string().required('State is required'),\r\n      // city: Yup.string().required('City is required')\r\n    });\r\n  } else {\r\n    NewUserSchema = Yup.object().shape({\r\n      // name: Yup.string().required('Name is required'),\r\n      email: Yup.string().required('Email is required').email(),\r\n      password: Yup.string().required('Password is required'),\r\n      gender: Yup.string().required('Gender is required')\r\n      // role: Yup.string().required('Role is required'),\r\n      // coverage: Yup.string().required('Coverage is required'),\r\n      // address: Yup.string().required('Address is required'),\r\n      // phoneNumber: Yup.string().required('Phone number is required'),\r\n    });\r\n  }\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      name: currentUser?.name || '',\r\n      email: currentUser?.email || '',\r\n      password: currentUser?.originPassword || '',\r\n      gender: currentUser && currentUser.gender > -1 ? currentUser.gender : '',\r\n      role: currentUser?.role || '',\r\n      balance: currentUser?.balance || 0,\r\n      balanceCurrency: currentUser?.balanceCurrency || '$',\r\n      punishment: currentUser?.punishment || 0,\r\n      fixedLocation: currentUser?.fixedLocation || '',\r\n      phoneNumber: currentUser?.phoneNumber || '',\r\n      address: currentUser?.address || '',\r\n      country: currentUser?.country || '',\r\n      state: currentUser?.state || '',\r\n      city: currentUser?.city || '',\r\n      zipCode: currentUser?.zipCode || '',\r\n      avatarUrl: (currentUser && `${serverConfig.baseUrl}/user/img-src/${currentUser.avatarUrl}`) || null,\r\n      isVerified: currentUser?.isVerified || true,\r\n      status: currentUser?.status,\r\n      username: currentUser?.username || '',\r\n      note: currentUser?.note || ''\r\n    },\r\n    validationSchema: NewUserSchema,\r\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\r\n      try {\r\n        await fakeRequest(500);\r\n\r\n        if (!isEdit) {\r\n          if (!values.isVerified) {\r\n            enqueueSnackbar(\r\n              'The system sends an email to your email address, please click the link in the email to finish verification, thank you.',\r\n              { variant: 'info', delay: 3000 }\r\n            );\r\n          }\r\n          await axios.post('/user/create', values);\r\n        } else {\r\n          await axios.post(`/user/update/${currentUser._id}`, values);\r\n        }\r\n\r\n        if (avatarImage) {\r\n          await axios.post(`/user/img/${currentUser._id}`, avatarImage);\r\n        }\r\n\r\n        resetForm();\r\n        setSubmitting(false);\r\n        enqueueSnackbar(!isEdit ? 'Create success' : 'Update success', { variant: 'success' });\r\n        navigate(PATH_DASHBOARD.user.list);\r\n      } catch (error) {\r\n        console.error(error);\r\n        enqueueSnackbar(error.message, { variant: 'error' });\r\n        setSubmitting(false);\r\n        setErrors(error);\r\n      }\r\n    }\r\n  });\r\n\r\n  const handleAbort = async () => {\r\n    navigate(PATH_DASHBOARD.user.list);\r\n  };\r\n\r\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\r\n\r\n  const handleDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      const file = acceptedFiles[0];\r\n      if (file) {\r\n        const formData = new FormData();\r\n        formData.append('img', file, file.name);\r\n        setAvatarImage(formData);\r\n        setFieldValue('avatarUrl', {\r\n          ...file,\r\n          preview: URL.createObjectURL(file)\r\n        });\r\n      }\r\n    },\r\n    [setFieldValue]\r\n  );\r\n\r\n  const handleChangeEmail = useCallback((event) => {\r\n    const emailValue = event.target.value;\r\n    setFieldValue('email', emailValue);\r\n    const currentName = getFieldProps('name').value;\r\n    if (currentName.trim() === '') {\r\n      const nameInd = emailValue.indexOf('@');\r\n      if (nameInd !== -1) {\r\n        setFieldValue('name', emailValue.slice(0, nameInd));\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={4}>\r\n            <Card sx={{ py: 10, px: 3 }}>\r\n              {isEdit && (\r\n                <Label\r\n                  color={values.status !== 'active' ? 'error' : 'success'}\r\n                  sx={{ textTransform: 'uppercase', position: 'absolute', top: 24, right: 24 }}\r\n                >\r\n                  {values.status}\r\n                </Label>\r\n              )}\r\n\r\n              {isEdit && (\r\n                <Box sx={{ mb: 5 }}>\r\n                  <UploadAvatar\r\n                    accept=\"image/*\"\r\n                    file={values.avatarUrl}\r\n                    maxSize={3145728}\r\n                    onDrop={handleDrop}\r\n                    error={Boolean(touched.avatarUrl && errors.avatarUrl)}\r\n                    caption={\r\n                      <Typography\r\n                        variant=\"caption\"\r\n                        sx={{\r\n                          mt: 2,\r\n                          mx: 'auto',\r\n                          display: 'block',\r\n                          textAlign: 'center',\r\n                          color: 'text.secondary'\r\n                        }}\r\n                      >\r\n                        Allowed *.jpeg, *.jpg, *.png, *.gif\r\n                        <br /> max size of {fData(3145728)}\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                  <FormHelperText error sx={{ px: 2, textAlign: 'center' }}>\r\n                    {touched.avatarUrl && errors.avatarUrl}\r\n                  </FormHelperText>\r\n                </Box>\r\n              )}\r\n\r\n              {isEdit && (\r\n                <FormControlLabel\r\n                  labelPlacement=\"start\"\r\n                  control={\r\n                    <Switch\r\n                      onChange={(event) => setFieldValue('status', event.target.checked ? 'banned' : 'active')}\r\n                      checked={values.status !== 'active'}\r\n                    />\r\n                  }\r\n                  label={\r\n                    <>\r\n                      <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\r\n                        Banned\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                        Apply disable account\r\n                      </Typography>\r\n                    </>\r\n                  }\r\n                  sx={{ mx: 0, mb: 3, width: 1, justifyContent: 'space-between' }}\r\n                />\r\n              )}\r\n\r\n              <FormControlLabel\r\n                labelPlacement=\"start\"\r\n                control={<Switch {...getFieldProps('isVerified')} checked={values.isVerified} />}\r\n                label={\r\n                  <>\r\n                    <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\r\n                      Email Verified\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                      Disabling this will automatically send the user a verification email\r\n                    </Typography>\r\n                  </>\r\n                }\r\n                sx={{ mx: 0, width: 1, justifyContent: 'space-between' }}\r\n              />\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={8}>\r\n            <Card sx={{ p: 3 }}>\r\n              <Stack spacing={3}>\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Email Address\"\r\n                    {...getFieldProps('email')}\r\n                    error={Boolean(touched.email && errors.email)}\r\n                    helperText={touched.email && errors.email}\r\n                    onChange={handleChangeEmail}\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"NickName\"\r\n                    {...getFieldProps('name')}\r\n                    error={Boolean(touched.name && errors.name)}\r\n                    helperText={touched.name && errors.name}\r\n                  />\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <TextField\r\n                    // type=\"password\"\r\n                    fullWidth\r\n                    label=\"Password\"\r\n                    {...getFieldProps('password')}\r\n                    error={Boolean(touched.password && errors.password)}\r\n                    helperText={touched.password && errors.password}\r\n                  />\r\n                  <TextField\r\n                    select\r\n                    fullWidth\r\n                    label=\"Gender\"\r\n                    {...getFieldProps('gender')}\r\n                    SelectProps={{ native: true }}\r\n                    error={Boolean(touched.gender && errors.gender)}\r\n                    helperText={touched.gender && errors.gender}\r\n                  >\r\n                    <option value=\"\" />\r\n                    <option key=\"male\" value=\"0\">\r\n                      Male\r\n                    </option>\r\n                    <option key=\"female\" value=\"1\">\r\n                      Female\r\n                    </option>\r\n                    <option key=\"business\" value=\"2\">\r\n                      Business\r\n                    </option>\r\n                  </TextField>\r\n                </Stack>\r\n\r\n                {!isEdit && (\r\n                  <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                    <TextField\r\n                      select\r\n                      fullWidth\r\n                      label=\"Role\"\r\n                      {...getFieldProps('role')}\r\n                      SelectProps={{ native: true }}\r\n                      error={Boolean(touched.role && errors.role)}\r\n                      helperText={touched.role && errors.role}\r\n                    >\r\n                      <option value=\"\" />\r\n                      <option key=\"user\" value=\"user\">\r\n                        user\r\n                      </option>\r\n                      <option key=\"admin\" value=\"admin\">\r\n                        admin\r\n                      </option>\r\n                    </TextField>\r\n                    {/* {isEdit && (\r\n                      <TextField\r\n                        fullWidth\r\n                        inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }}\r\n                        label=\"Coverage\"\r\n                        {...getFieldProps('coverage')}\r\n                        error={Boolean(touched.coverage && errors.coverage)}\r\n                        helperText={touched.coverage && errors.coverage}\r\n                      />\r\n                    )} */}\r\n                  </Stack>\r\n                )}\r\n\r\n                {/* <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Phone Number\"\r\n                    {...getFieldProps('phoneNumber')}\r\n                    error={Boolean(touched.phoneNumber && errors.phoneNumber)}\r\n                    helperText={touched.phoneNumber && errors.phoneNumber}\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Address\"\r\n                    {...getFieldProps('address')}\r\n                    error={Boolean(touched.address && errors.address)}\r\n                    helperText={touched.address && errors.address}\r\n                  />\r\n                </Stack> */}\r\n\r\n                {/* <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Location\"\r\n                    {...getFieldProps('address')}\r\n                    error={Boolean(touched.address && errors.address)}\r\n                    helperText={touched.address && errors.address}\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Latitude and longitude\"\r\n                    {...getFieldProps('location')}\r\n                    error={Boolean(touched.location && errors.location)}\r\n                    helperText={touched.location && errors.location}\r\n                  />\r\n                </Stack> */}\r\n\r\n                {isEdit && (\r\n                  <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Fixed Location\"\r\n                      {...getFieldProps('fixedLocation')}\r\n                      error={Boolean(touched.fixedLocation && errors.fixedLocation)}\r\n                      helperText={touched.fixedLocation && errors.fixedLocation}\r\n                    />\r\n                  </Stack>\r\n                )}\r\n\r\n                {/* <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <TextField\r\n                    select\r\n                    fullWidth\r\n                    label=\"Country\"\r\n                    placeholder=\"Country\"\r\n                    {...getFieldProps('country')}\r\n                    SelectProps={{ native: true }}\r\n                    error={Boolean(touched.country && errors.country)}\r\n                    helperText={touched.country && errors.country}\r\n                  >\r\n                    <option value=\"\" />\r\n                    {countries.map((option) => (\r\n                      <option key={option.code} value={option.label}>\r\n                        {option.label}\r\n                      </option>\r\n                    ))}\r\n                  </TextField>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"State/Region\"\r\n                    {...getFieldProps('state')}\r\n                    error={Boolean(touched.state && errors.state)}\r\n                    helperText={touched.state && errors.state}\r\n                  />\r\n                </Stack> */}\r\n\r\n                {/* <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"City\"\r\n                    {...getFieldProps('city')}\r\n                    error={Boolean(touched.city && errors.city)}\r\n                    helperText={touched.city && errors.city}\r\n                  />\r\n                  <TextField fullWidth label=\"Zip/Code\" {...getFieldProps('zipCode')} />\r\n                </Stack> */}\r\n\r\n                {/* <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Username\"\r\n                    {...getFieldProps('username')}\r\n                    error={Boolean(touched.username && errors.username)}\r\n                    helperText={touched.username && errors.username}\r\n                  />\r\n                </Stack> */}\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Note\"\r\n                    multiline\r\n                    minRows={4}\r\n                    maxRows={4}\r\n                    {...getFieldProps('note')}\r\n                    error={Boolean(touched.note && errors.note)}\r\n                    helperText={touched.note && errors.note}\r\n                  />\r\n                </Stack>\r\n\r\n                {isEdit && (\r\n                  <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                    <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                      Balance: &nbsp;&nbsp;&nbsp;\r\n                    </Typography>\r\n                    <TextField\r\n                      // select\r\n                      variant=\"standard\"\r\n                      style={{ width: 100 }}\r\n                      {...getFieldProps('balanceCurrency')}\r\n                      // SelectProps={{ native: true }}\r\n                      error={Boolean(touched.balanceCurrency && errors.balanceCurrency)}\r\n                      helperText={touched.balanceCurrency && errors.balanceCurrency}\r\n                    >\r\n                      {/* {currencies.map((option) => (\r\n                        <option key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </option>\r\n                      ))} */}\r\n                    </TextField>\r\n                    <TextField\r\n                      variant=\"standard\"\r\n                      style={{ width: 100 }}\r\n                      inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }}\r\n                      {...getFieldProps('balance')}\r\n                      error={Boolean(touched.balance && errors.balance)}\r\n                      helperText={touched.balance && errors.balance}\r\n                    />\r\n                  </Stack>\r\n                )}\r\n\r\n                {isEdit && (\r\n                  <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                    <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                      Punishment: &nbsp;&nbsp;&nbsp; banned from talking,\r\n                    </Typography>\r\n                    <TextField\r\n                      variant=\"standard\"\r\n                      style={{ width: 50 }}\r\n                      inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }}\r\n                      {...getFieldProps('punishment')}\r\n                      error={Boolean(touched.punishment && errors.punishment)}\r\n                      helperText={touched.punishment && errors.punishment}\r\n                    />\r\n                    <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                      hours remaining\r\n                    </Typography>\r\n                  </Stack>\r\n                )}\r\n\r\n                <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\r\n                  <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                    {isEdit && (\r\n                      <LoadingButton type=\"button\" color=\"error\" variant=\"contained\" onClick={onDeleteUser}>\r\n                        Delete This User\r\n                      </LoadingButton>\r\n                    )}\r\n                    <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n                      {!isEdit ? 'Create User' : 'Save Changes'}\r\n                    </LoadingButton>\r\n                    <LoadingButton type=\"button\" color=\"warning\" variant=\"contained\" onClick={handleAbort}>\r\n                      Abort\r\n                    </LoadingButton>\r\n                  </Stack>\r\n                </Box>\r\n              </Stack>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Form>\r\n      {openDeleteConfirm && (\r\n        <ConfirmDialog\r\n          message=\"Are you sure you are going to delete this user?\"\r\n          onConfirm={handleDeleteUser}\r\n          onClose={handleCloseDeleteConfirm}\r\n        />\r\n      )}\r\n    </FormikProvider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}