{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\localtalk.mobi(back)\\\\pro\\\\toptalk-adminpanel\\\\src\\\\pages\\\\dashboard\\\\BlockLimitedWordsList.js\",\n    _s = $RefreshSig$();\n\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport { useState, useEffect } from 'react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom'; // material\n\nimport { useTheme } from '@material-ui/core/styles';\nimport { Card, Table, Stack, Avatar, Button, Checkbox, TableRow, TableBody, TableCell, Container, Typography, TableContainer, TablePagination } from '@material-ui/core'; // redux\n\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getWordList, deleteWord } from '../../redux/slices/blocklimitedword'; // routes\n\nimport { PATH_DASHBOARD } from '../../routes/paths'; // hooks\n\nimport useSettings from '../../hooks/useSettings';\nimport useAuth from '../../hooks/useAuth'; // components\n\nimport Page from '../../components/Page';\nimport Label from '../../components/Label';\nimport Scrollbar from '../../components/Scrollbar';\nimport SearchNotFound from '../../components/SearchNotFound';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport { BlockLimitedWordListHead, BlockLimitedWordListToolbar, BlockLimitedWordMoreMenu } from '../../components/_dashboard/blocklimitedwords/list';\nimport axios from '../../utils/axios'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TABLE_HEAD = [{\n  id: 'word',\n  label: 'Word',\n  alignRight: false\n}, // { id: 'replacewith', label: 'ReplaceWith', alignRight: false },\n{\n  id: ''\n}]; // ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n\n  if (query) {\n    return filter(array, _user => _user.word.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n\n  return stabilizedThis.map(el => el[0]);\n}\n\nexport default function BlockLimitedWordsList() {\n  _s();\n\n  const {\n    themeStretch\n  } = useSettings();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const {\n    user,\n    logout\n  } = useAuth();\n  const {\n    wordList\n  } = useSelector(state => state.blocklimitedword);\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('word');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(localStorage.getItem('blockwords_rows_per_page') ? Number(localStorage.getItem('blockwords_rows_per_page')) : 25);\n  useEffect(() => {\n    dispatch(getWordList());\n  }, [dispatch]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = wordList.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    localStorage.setItem('blockwords_rows_per_page', parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = event => {\n    setFilterName(event.target.value);\n  };\n\n  const handleDeleteWord = async wordId => {\n    dispatch(deleteWord(wordId));\n    await axios.post(`/block-limited-words/delete/${wordId}`);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - wordList.length) : 0;\n  const filteredWords = applySortFilter(wordList, getComparator(order, orderBy), filterName);\n  const isWordNotFound = filteredWords.length === 0;\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: \"Block Limited Words: List | Locals\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: themeStretch ? false : 'lg',\n      children: [/*#__PURE__*/_jsxDEV(HeaderBreadcrumbs, {\n        heading: \"Block Limited Words\",\n        links: [{\n          name: 'Word Restrications'\n        }],\n        action: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          component: RouterLink,\n          to: PATH_DASHBOARD.prohibitedwords.new,\n          startIcon: /*#__PURE__*/_jsxDEV(Icon, {\n            icon: plusFill\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 26\n          }, this),\n          children: \"New Block Limited Word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(BlockLimitedWordListToolbar, {\n          numSelected: selected.length,\n          filterName: filterName,\n          onFilterName: handleFilterByName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Scrollbar, {\n          children: /*#__PURE__*/_jsxDEV(TableContainer, {\n            sx: {\n              minWidth: 800\n            },\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(BlockLimitedWordListHead, {\n                order: order,\n                orderBy: orderBy,\n                headLabel: TABLE_HEAD,\n                rowCount: wordList.length,\n                numSelected: selected.length,\n                onRequestSort: handleRequestSort,\n                onSelectAllClick: handleSelectAllClick\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: [filteredWords.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n                  const {\n                    _id,\n                    word,\n                    replacewith\n                  } = row;\n                  const isItemSelected = selected.indexOf(word) !== -1;\n                  return /*#__PURE__*/_jsxDEV(TableRow, {\n                    hover: true,\n                    tabIndex: -1,\n                    role: \"checkbox\",\n                    selected: isItemSelected,\n                    \"aria-checked\": isItemSelected,\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      padding: \"checkbox\",\n                      children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                        checked: isItemSelected,\n                        onChange: event => handleClick(event, word)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 210,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      component: \"th\",\n                      scope: \"row\",\n                      padding: \"none\",\n                      children: /*#__PURE__*/_jsxDEV(Stack, {\n                        direction: \"row\",\n                        alignItems: \"center\",\n                        spacing: 2,\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"subtitle2\",\n                          noWrap: true,\n                          children: word\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 214,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 213,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: /*#__PURE__*/_jsxDEV(BlockLimitedWordMoreMenu, {\n                        onDelete: () => handleDeleteWord(_id),\n                        word: word\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 227,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 25\n                    }, this)]\n                  }, _id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 23\n                  }, this);\n                }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n                  style: {\n                    height: 53 * emptyRows\n                  },\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: 6\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this), isWordNotFound && /*#__PURE__*/_jsxDEV(TableBody, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    colSpan: 6,\n                    sx: {\n                      py: 3\n                    },\n                    children: /*#__PURE__*/_jsxDEV(SearchNotFound, {\n                      searchQuery: filterName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [25, 50, 100],\n          component: \"div\",\n          count: wordList.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: handleChangePage,\n          onRowsPerPageChange: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BlockLimitedWordsList, \"y3QE0WYtw+XTw/dL2/Rg0Eq3cyw=\", false, function () {\n  return [useSettings, useTheme, useDispatch, useAuth, useSelector];\n});\n\n_c = BlockLimitedWordsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlockLimitedWordsList\");","map":{"version":3,"sources":["E:/projects/localtalk.mobi(back)/pro/toptalk-adminpanel/src/pages/dashboard/BlockLimitedWordsList.js"],"names":["filter","Icon","sentenceCase","useState","useEffect","plusFill","Link","RouterLink","useTheme","Card","Table","Stack","Avatar","Button","Checkbox","TableRow","TableBody","TableCell","Container","Typography","TableContainer","TablePagination","useDispatch","useSelector","getWordList","deleteWord","PATH_DASHBOARD","useSettings","useAuth","Page","Label","Scrollbar","SearchNotFound","HeaderBreadcrumbs","BlockLimitedWordListHead","BlockLimitedWordListToolbar","BlockLimitedWordMoreMenu","axios","TABLE_HEAD","id","label","alignRight","descendingComparator","a","b","orderBy","getComparator","order","applySortFilter","array","comparator","query","stabilizedThis","map","el","index","sort","_user","word","toLowerCase","indexOf","BlockLimitedWordsList","themeStretch","theme","dispatch","user","logout","wordList","state","blocklimitedword","page","setPage","setOrder","selected","setSelected","setOrderBy","filterName","setFilterName","rowsPerPage","setRowsPerPage","localStorage","getItem","Number","handleRequestSort","event","property","isAsc","handleSelectAllClick","target","checked","newSelecteds","n","name","handleClick","selectedIndex","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","setItem","handleFilterByName","handleDeleteWord","wordId","post","emptyRows","Math","max","filteredWords","isWordNotFound","prohibitedwords","new","minWidth","row","_id","replacewith","isItemSelected","height","py"],"mappings":"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","sourcesContent":["import { filter } from 'lodash';\r\nimport { Icon } from '@iconify/react';\r\nimport { sentenceCase } from 'change-case';\r\nimport { useState, useEffect } from 'react';\r\nimport plusFill from '@iconify/icons-eva/plus-fill';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// material\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport {\r\n  Card,\r\n  Table,\r\n  Stack,\r\n  Avatar,\r\n  Button,\r\n  Checkbox,\r\n  TableRow,\r\n  TableBody,\r\n  TableCell,\r\n  Container,\r\n  Typography,\r\n  TableContainer,\r\n  TablePagination\r\n} from '@material-ui/core';\r\n// redux\r\nimport { useDispatch, useSelector } from '../../redux/store';\r\nimport { getWordList, deleteWord } from '../../redux/slices/blocklimitedword';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// hooks\r\nimport useSettings from '../../hooks/useSettings';\r\nimport useAuth from '../../hooks/useAuth';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport Label from '../../components/Label';\r\nimport Scrollbar from '../../components/Scrollbar';\r\nimport SearchNotFound from '../../components/SearchNotFound';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\nimport {\r\n  BlockLimitedWordListHead,\r\n  BlockLimitedWordListToolbar,\r\n  BlockLimitedWordMoreMenu\r\n} from '../../components/_dashboard/blocklimitedwords/list';\r\nimport axios from '../../utils/axios';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'word', label: 'Word', alignRight: false },\r\n  // { id: 'replacewith', label: 'ReplaceWith', alignRight: false },\r\n  { id: '' }\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction applySortFilter(array, comparator, query) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  if (query) {\r\n    return filter(array, (_user) => _user.word.toLowerCase().indexOf(query.toLowerCase()) !== -1);\r\n  }\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nexport default function BlockLimitedWordsList() {\r\n  const { themeStretch } = useSettings();\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  const { user, logout } = useAuth();\r\n  const { wordList } = useSelector((state) => state.blocklimitedword);\r\n  const [page, setPage] = useState(0);\r\n  const [order, setOrder] = useState('asc');\r\n  const [selected, setSelected] = useState([]);\r\n  const [orderBy, setOrderBy] = useState('word');\r\n  const [filterName, setFilterName] = useState('');\r\n  const [rowsPerPage, setRowsPerPage] = useState(\r\n    localStorage.getItem('blockwords_rows_per_page') ? Number(localStorage.getItem('blockwords_rows_per_page')) : 25\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(getWordList());\r\n  }, [dispatch]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = wordList.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    localStorage.setItem('blockwords_rows_per_page', parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleFilterByName = (event) => {\r\n    setFilterName(event.target.value);\r\n  };\r\n\r\n  const handleDeleteWord = async (wordId) => {\r\n    dispatch(deleteWord(wordId));\r\n    await axios.post(`/block-limited-words/delete/${wordId}`);\r\n  };\r\n\r\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - wordList.length) : 0;\r\n\r\n  const filteredWords = applySortFilter(wordList, getComparator(order, orderBy), filterName);\r\n\r\n  const isWordNotFound = filteredWords.length === 0;\r\n\r\n  return (\r\n    <Page title=\"Block Limited Words: List | Locals\">\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <HeaderBreadcrumbs\r\n          heading=\"Block Limited Words\"\r\n          links={[{ name: 'Word Restrications' }]}\r\n          action={\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              to={PATH_DASHBOARD.prohibitedwords.new}\r\n              startIcon={<Icon icon={plusFill} />}\r\n            >\r\n              New Block Limited Word\r\n            </Button>\r\n          }\r\n        />\r\n\r\n        <Card>\r\n          <BlockLimitedWordListToolbar\r\n            numSelected={selected.length}\r\n            filterName={filterName}\r\n            onFilterName={handleFilterByName}\r\n          />\r\n\r\n          <Scrollbar>\r\n            <TableContainer sx={{ minWidth: 800 }}>\r\n              <Table>\r\n                <BlockLimitedWordListHead\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={wordList.length}\r\n                  numSelected={selected.length}\r\n                  onRequestSort={handleRequestSort}\r\n                  onSelectAllClick={handleSelectAllClick}\r\n                />\r\n                <TableBody>\r\n                  {filteredWords.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                    const { _id, word, replacewith } = row;\r\n                    const isItemSelected = selected.indexOf(word) !== -1;\r\n\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        key={_id}\r\n                        tabIndex={-1}\r\n                        role=\"checkbox\"\r\n                        selected={isItemSelected}\r\n                        aria-checked={isItemSelected}\r\n                      >\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox checked={isItemSelected} onChange={(event) => handleClick(event, word)} />\r\n                        </TableCell>\r\n                        <TableCell component=\"th\" scope=\"row\" padding=\"none\">\r\n                          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                            <Typography variant=\"subtitle2\" noWrap>\r\n                              {word}\r\n                            </Typography>\r\n                          </Stack>\r\n                        </TableCell>\r\n                        {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\r\n                          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                            <Typography variant=\"subtitle2\" noWrap>\r\n                              {replacewith}\r\n                            </Typography>\r\n                          </Stack>\r\n                        </TableCell> */}\r\n                        <TableCell align=\"right\">\r\n                          <BlockLimitedWordMoreMenu onDelete={() => handleDeleteWord(_id)} word={word} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                  {emptyRows > 0 && (\r\n                    <TableRow style={{ height: 53 * emptyRows }}>\r\n                      <TableCell colSpan={6} />\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n                {isWordNotFound && (\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\r\n                        <SearchNotFound searchQuery={filterName} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                )}\r\n              </Table>\r\n            </TableContainer>\r\n          </Scrollbar>\r\n\r\n          <TablePagination\r\n            rowsPerPageOptions={[25, 50, 100]}\r\n            component=\"div\"\r\n            count={wordList.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Card>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}