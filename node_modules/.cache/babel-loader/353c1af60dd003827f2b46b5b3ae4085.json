{"ast":null,"code":"import _objectSpread from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"links\",\"activeLast\"];import{last}from'lodash';// material\nimport{Link as RouterLink}from'react-router-dom';import{Typography,Box,Link,Breadcrumbs}from'@material-ui/core';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Separator=/*#__PURE__*/_jsx(Box,{component:\"span\",sx:{width:4,height:4,borderRadius:'50%',bgcolor:'text.disabled'}});function LinkItem(_ref){var link=_ref.link;var href=link.href,name=link.name,icon=link.icon;return/*#__PURE__*/_jsxs(Link,{to:href,variant:\"body2\",component:RouterLink,sx:{lineHeight:2,display:'flex',alignItems:'center',color:'text.primary','& > div':{display:'inherit'}},children:[icon&&/*#__PURE__*/_jsx(Box,{sx:{mr:1,'& svg':{width:20,height:20}},children:icon}),name]},name);}export default function MBreadcrumbs(_ref2){var links=_ref2.links,_ref2$activeLast=_ref2.activeLast,activeLast=_ref2$activeLast===void 0?false:_ref2$activeLast,other=_objectWithoutProperties(_ref2,_excluded);var currentLink=last(links).name;var listDefault=links.map(function(link){return/*#__PURE__*/_jsx(LinkItem,{link:link},link.name);});var listActiveLast=links.map(function(link){return/*#__PURE__*/_jsx(\"div\",{children:link.name!==currentLink?/*#__PURE__*/_jsx(LinkItem,{link:link}):/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{maxWidth:260,overflow:'hidden',whiteSpace:'nowrap',color:'text.disabled',textOverflow:'ellipsis'},children:currentLink})},link.name);});return/*#__PURE__*/_jsx(Breadcrumbs,_objectSpread(_objectSpread({separator:Separator},other),{},{children:activeLast?listDefault:listActiveLast}));}","map":{"version":3,"sources":["E:/projects/localtalk.mobi/mobilechat-adminpanel/src/components/@material-extend/MBreadcrumbs.js"],"names":["last","Link","RouterLink","Typography","Box","Breadcrumbs","Separator","width","height","borderRadius","bgcolor","LinkItem","link","href","name","icon","lineHeight","display","alignItems","color","mr","MBreadcrumbs","links","activeLast","other","currentLink","listDefault","map","listActiveLast","maxWidth","overflow","whiteSpace","textOverflow"],"mappings":"sYAAA,OAASA,IAAT,KAAqB,QAArB,CAEA;AACA,OAASC,IAAI,GAAIC,CAAAA,UAAjB,KAAmC,kBAAnC,CACA,OAASC,UAAT,CAAqBC,GAArB,CAA0BH,IAA1B,CAAgCI,WAAhC,KAAmD,mBAAnD,CAEA;wFAEA,GAAMC,CAAAA,SAAS,cAAG,KAAC,GAAD,EAAK,SAAS,CAAC,MAAf,CAAsB,EAAE,CAAE,CAAEC,KAAK,CAAE,CAAT,CAAYC,MAAM,CAAE,CAApB,CAAuBC,YAAY,CAAE,KAArC,CAA4CC,OAAO,CAAE,eAArD,CAA1B,EAAlB,CAMA,QAASC,CAAAA,QAAT,MAA4B,IAARC,CAAAA,IAAQ,MAARA,IAAQ,CAC1B,GAAQC,CAAAA,IAAR,CAA6BD,IAA7B,CAAQC,IAAR,CAAcC,IAAd,CAA6BF,IAA7B,CAAcE,IAAd,CAAoBC,IAApB,CAA6BH,IAA7B,CAAoBG,IAApB,CACA,mBACE,MAAC,IAAD,EACE,EAAE,CAAEF,IADN,CAGE,OAAO,CAAC,OAHV,CAIE,SAAS,CAAEX,UAJb,CAKE,EAAE,CAAE,CACFc,UAAU,CAAE,CADV,CAEFC,OAAO,CAAE,MAFP,CAGFC,UAAU,CAAE,QAHV,CAIFC,KAAK,CAAE,cAJL,CAKF,UAAW,CAAEF,OAAO,CAAE,SAAX,CALT,CALN,WAaGF,IAAI,eACH,KAAC,GAAD,EACE,EAAE,CAAE,CACFK,EAAE,CAAE,CADF,CAEF,QAAS,CAAEb,KAAK,CAAE,EAAT,CAAaC,MAAM,CAAE,EAArB,CAFP,CADN,UAMGO,IANH,EAdJ,CAuBGD,IAvBH,GAEOA,IAFP,CADF,CA2BD,CAOD,cAAe,SAASO,CAAAA,YAAT,OAA+D,IAAvCC,CAAAA,KAAuC,OAAvCA,KAAuC,wBAAhCC,UAAgC,CAAhCA,UAAgC,2BAAnB,KAAmB,kBAATC,KAAS,2CAC5E,GAAMC,CAAAA,WAAW,CAAGzB,IAAI,CAACsB,KAAD,CAAJ,CAAYR,IAAhC,CAEA,GAAMY,CAAAA,WAAW,CAAGJ,KAAK,CAACK,GAAN,CAAU,SAACf,IAAD,qBAAU,KAAC,QAAD,EAA0B,IAAI,CAAEA,IAAhC,EAAeA,IAAI,CAACE,IAApB,CAAV,EAAV,CAApB,CACA,GAAMc,CAAAA,cAAc,CAAGN,KAAK,CAACK,GAAN,CAAU,SAACf,IAAD,qBAC/B,qBACGA,IAAI,CAACE,IAAL,GAAcW,WAAd,cACC,KAAC,QAAD,EAAU,IAAI,CAAEb,IAAhB,EADD,cAGC,KAAC,UAAD,EACE,OAAO,CAAC,OADV,CAEE,EAAE,CAAE,CACFiB,QAAQ,CAAE,GADR,CAEFC,QAAQ,CAAE,QAFR,CAGFC,UAAU,CAAE,QAHV,CAIFZ,KAAK,CAAE,eAJL,CAKFa,YAAY,CAAE,UALZ,CAFN,UAUGP,WAVH,EAJJ,EAAUb,IAAI,CAACE,IAAf,CAD+B,EAAV,CAAvB,CAqBA,mBACE,KAAC,WAAD,8BAAa,SAAS,CAAER,SAAxB,EAAuCkB,KAAvC,eACGD,UAAU,CAAGG,WAAH,CAAiBE,cAD9B,GADF,CAKD","sourcesContent":["import { last } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\n// material\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { Typography, Box, Link, Breadcrumbs } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst Separator = <Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />;\r\n\r\nLinkItem.propTypes = {\r\n  link: PropTypes.object\r\n};\r\n\r\nfunction LinkItem({ link }) {\r\n  const { href, name, icon } = link;\r\n  return (\r\n    <Link\r\n      to={href}\r\n      key={name}\r\n      variant=\"body2\"\r\n      component={RouterLink}\r\n      sx={{\r\n        lineHeight: 2,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        color: 'text.primary',\r\n        '& > div': { display: 'inherit' }\r\n      }}\r\n    >\r\n      {icon && (\r\n        <Box\r\n          sx={{\r\n            mr: 1,\r\n            '& svg': { width: 20, height: 20 }\r\n          }}\r\n        >\r\n          {icon}\r\n        </Box>\r\n      )}\r\n      {name}\r\n    </Link>\r\n  );\r\n}\r\n\r\nMBreadcrumbs.propTypes = {\r\n  links: PropTypes.array.isRequired,\r\n  activeLast: PropTypes.bool\r\n};\r\n\r\nexport default function MBreadcrumbs({ links, activeLast = false, ...other }) {\r\n  const currentLink = last(links).name;\r\n\r\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\r\n  const listActiveLast = links.map((link) => (\r\n    <div key={link.name}>\r\n      {link.name !== currentLink ? (\r\n        <LinkItem link={link} />\r\n      ) : (\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            maxWidth: 260,\r\n            overflow: 'hidden',\r\n            whiteSpace: 'nowrap',\r\n            color: 'text.disabled',\r\n            textOverflow: 'ellipsis'\r\n          }}\r\n        >\r\n          {currentLink}\r\n        </Typography>\r\n      )}\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <Breadcrumbs separator={Separator} {...other}>\r\n      {activeLast ? listDefault : listActiveLast}\r\n    </Breadcrumbs>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}