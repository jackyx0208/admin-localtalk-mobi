{"ast":null,"code":"import _objectSpread from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import Slider from'react-slick';import{useState,useRef}from'react';// material\nimport{useTheme}from'@material-ui/core/styles';import{Box,Card,Typography,CardContent}from'@material-ui/core';// utils\nimport mockData from'../../utils/mock-data';//\nimport{CarouselControlsArrowsIndex}from'./controls';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var MOCK_CAROUSELS=_toConsumableArray(Array(5)).map(function(_,index){return{id:mockData.id(index),title:mockData.text.title(index),image:mockData.image.feed(index),description:mockData.text.description(index)};});function CarouselItem(_ref){var item=_ref.item;var image=item.image,title=item.title,description=item.description;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Box,{component:\"img\",alt:title,src:image,sx:{width:'100%',height:370,objectFit:'cover'}}),/*#__PURE__*/_jsxs(CardContent,{sx:{textAlign:'left'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",noWrap:true,gutterBottom:true,children:title}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{color:'text.secondary'},noWrap:true,children:description})]})]});}export default function CarouselBasic2(){var theme=useTheme();var carouselRef=useRef();var _useState=useState(2),_useState2=_slicedToArray(_useState,2),currentIndex=_useState2[0],setCurrentIndex=_useState2[1];var settings={dots:false,arrows:false,autoplay:true,slidesToShow:1,slidesToScroll:1,initialSlide:currentIndex,fade:Boolean(theme.direction!=='rtl'),rtl:Boolean(theme.direction==='rtl'),beforeChange:function beforeChange(current,next){return setCurrentIndex(next);}};var handlePrevious=function handlePrevious(){carouselRef.current.slickPrev();};var handleNext=function handleNext(){carouselRef.current.slickNext();};return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Slider,_objectSpread(_objectSpread({ref:carouselRef},settings),{},{children:MOCK_CAROUSELS.map(function(item){return/*#__PURE__*/_jsx(CarouselItem,{item:item},item.title);})})),/*#__PURE__*/_jsx(CarouselControlsArrowsIndex,{index:currentIndex,total:MOCK_CAROUSELS.length,onNext:handleNext,onPrevious:handlePrevious,sx:{bottom:120}})]});}","map":{"version":3,"sources":["E:/projects/localtalk.mobi/mobilechat-adminpanel/src/components/carousel/CarouselBasic2.js"],"names":["Slider","useState","useRef","useTheme","Box","Card","Typography","CardContent","mockData","CarouselControlsArrowsIndex","MOCK_CAROUSELS","Array","map","_","index","id","title","text","image","feed","description","CarouselItem","item","width","height","objectFit","textAlign","color","CarouselBasic2","theme","carouselRef","currentIndex","setCurrentIndex","settings","dots","arrows","autoplay","slidesToShow","slidesToScroll","initialSlide","fade","Boolean","direction","rtl","beforeChange","current","next","handlePrevious","slickPrev","handleNext","slickNext","length","bottom"],"mappings":"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","sourcesContent":["import Slider from 'react-slick';\r\nimport PropTypes from 'prop-types';\r\nimport { useState, useRef } from 'react';\r\n// material\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { Box, Card, Typography, CardContent } from '@material-ui/core';\r\n// utils\r\nimport mockData from '../../utils/mock-data';\r\n//\r\nimport { CarouselControlsArrowsIndex } from './controls';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst MOCK_CAROUSELS = [...Array(5)].map((_, index) => ({\r\n  id: mockData.id(index),\r\n  title: mockData.text.title(index),\r\n  image: mockData.image.feed(index),\r\n  description: mockData.text.description(index)\r\n}));\r\n\r\nCarouselItem.propTypes = {\r\n  item: PropTypes.object\r\n};\r\n\r\nfunction CarouselItem({ item }) {\r\n  const { image, title, description } = item;\r\n\r\n  return (\r\n    <>\r\n      <Box component=\"img\" alt={title} src={image} sx={{ width: '100%', height: 370, objectFit: 'cover' }} />\r\n\r\n      <CardContent sx={{ textAlign: 'left' }}>\r\n        <Typography variant=\"h6\" noWrap gutterBottom>\r\n          {title}\r\n        </Typography>\r\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\r\n          {description}\r\n        </Typography>\r\n      </CardContent>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default function CarouselBasic2() {\r\n  const theme = useTheme();\r\n  const carouselRef = useRef();\r\n  const [currentIndex, setCurrentIndex] = useState(2);\r\n\r\n  const settings = {\r\n    dots: false,\r\n    arrows: false,\r\n    autoplay: true,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    initialSlide: currentIndex,\r\n    fade: Boolean(theme.direction !== 'rtl'),\r\n    rtl: Boolean(theme.direction === 'rtl'),\r\n    beforeChange: (current, next) => setCurrentIndex(next)\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    carouselRef.current.slickPrev();\r\n  };\r\n\r\n  const handleNext = () => {\r\n    carouselRef.current.slickNext();\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Slider ref={carouselRef} {...settings}>\r\n        {MOCK_CAROUSELS.map((item) => (\r\n          <CarouselItem key={item.title} item={item} />\r\n        ))}\r\n      </Slider>\r\n\r\n      <CarouselControlsArrowsIndex\r\n        index={currentIndex}\r\n        total={MOCK_CAROUSELS.length}\r\n        onNext={handleNext}\r\n        onPrevious={handlePrevious}\r\n        sx={{ bottom: 120 }}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}