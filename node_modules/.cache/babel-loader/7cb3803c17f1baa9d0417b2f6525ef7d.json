{"ast":null,"code":"import _objectSpread from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _toConsumableArray from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";var _excluded=[\"isSelected\",\"opponent\",\"conversation\",\"onSelectConversation\",\"isOpenSidebar\"];import{last}from'lodash';import{formatDistanceToNowStrict}from'date-fns';// material\nimport{styled}from'@material-ui/core/styles';import{Box,Avatar,ListItemText,ListItemAvatar,ListItemButton,Badge}from'@material-ui/core';//\nimport BadgeStatus from'../../BadgeStatus';import{serverConfig}from'../../../config';// hooks\nimport useAuth from'../../../hooks/useAuth';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var AVATAR_SIZE=48;var AVATAR_SIZE_GROUP=32;var RootStyle=styled(ListItemButton)(function(_ref){var theme=_ref.theme;return{padding:theme.spacing(1.5,3),transition:theme.transitions.create('all')};});var AvatarWrapperStyle=styled('div')({position:'relative',width:AVATAR_SIZE,height:AVATAR_SIZE,'& .MuiAvatar-img':{borderRadius:'50%'},'& .MuiAvatar-root':{width:'100%',height:'100%'}});// ----------------------------------------------------------------------\nvar getDetails=function getDetails(conversation,currentUserId){var otherParticipants=conversation.participants.filter(function(participant){return participant.id!==currentUserId;});var displayNames=otherParticipants.reduce(function(names,participant){return[].concat(_toConsumableArray(names),[participant.name]);},[]).join(', ');var displayText='';var lastMessage=conversation.messages[conversation.messages.length-1];if(lastMessage){var sender=lastMessage.senderId===currentUserId?'You: ':'';var message=lastMessage.contentType==='image'?'Sent a photo':lastMessage.body;displayText=\"\".concat(sender).concat(message);}return{otherParticipants:otherParticipants,displayNames:displayNames,displayText:displayText};};export default function ChatConversationItem(_ref2){var isSelected=_ref2.isSelected,opponent=_ref2.opponent,conversation=_ref2.conversation,onSelectConversation=_ref2.onSelectConversation,isOpenSidebar=_ref2.isOpenSidebar,other=_objectWithoutProperties(_ref2,_excluded);var _useAuth=useAuth(),user=_useAuth.user;// const displayLastActivity = last(conversation.messages).createdAt;\nvar displayLastActivity=opponent.created;// const isGroup = details.otherParticipants.length > 1;\nvar isGroup=false;// const isOnlineGroup = isGroup && details.otherParticipants.map((item) => item.status).includes('online');\nvar avatarImgSrc=\"\".concat(serverConfig.baseUrl,\"/user/img-src/\").concat(opponent.avatarUrl);var opponentStatus=opponent.online?'online':'offline';var unreadCount=conversation&&(conversation.lastMessage.users_see_message.indexOf(user._id)>-1?0:conversation.lastMessage.unread_count)||0;var isUnread=unreadCount>0;return/*#__PURE__*/_jsxs(RootStyle,_objectSpread(_objectSpread({disableGutters:true,onClick:onSelectConversation,sx:_objectSpread({},isSelected&&{bgcolor:'action.selected'})},other),{},{children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Box,{sx:_objectSpread({},isGroup&&{position:'relative',width:AVATAR_SIZE,height:AVATAR_SIZE,'& .avatarWrapper':{position:'absolute',width:AVATAR_SIZE_GROUP,height:AVATAR_SIZE_GROUP,'&:nth-of-type(1)':{left:0,zIndex:9,bottom:2,'& .MuiAvatar-root':{border:function border(theme){return\"solid 2px \".concat(theme.palette.background.paper);}}},'&:nth-of-type(2)':{top:2,right:0}}}),children:/*#__PURE__*/_jsxs(AvatarWrapperStyle,{className:\"avatarWrapper\",children:[/*#__PURE__*/_jsx(Avatar,{alt:opponent.name,src:avatarImgSrc}),/*#__PURE__*/_jsx(BadgeStatus,{status:opponentStatus,sx:{right:2,bottom:2,position:'absolute'}})]},opponent._id)})}),isOpenSidebar&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ListItemText,{primary:opponent.name,primaryTypographyProps:{noWrap:true,variant:'subtitle2'},secondary:conversation&&conversation.lastMessage.message,secondaryTypographyProps:{noWrap:true,variant:isUnread?'subtitle2':'body2',color:isUnread?'textPrimary':'textSecondary'}}),/*#__PURE__*/_jsxs(Box,{sx:{ml:2,height:44,display:'flex',alignItems:'flex-end',flexDirection:'column'},children:[/*#__PURE__*/_jsx(Box,{sx:{mb:1.25,fontSize:12,lineHeight:'22px',whiteSpace:'nowrap',color:'text.disabled'},children:formatDistanceToNowStrict(new Date(displayLastActivity),{addSuffix:false})}),isUnread&&/*#__PURE__*/_jsx(Badge,{color:\"secondary\",badgeContent:unreadCount})]})]})]}));}","map":{"version":3,"sources":["E:/projects/localtalk.mobi/mobilechat-adminpanel/src/components/_dashboard/privatechat/ChatConversationItem.js"],"names":["last","formatDistanceToNowStrict","styled","Box","Avatar","ListItemText","ListItemAvatar","ListItemButton","Badge","BadgeStatus","serverConfig","useAuth","AVATAR_SIZE","AVATAR_SIZE_GROUP","RootStyle","theme","padding","spacing","transition","transitions","create","AvatarWrapperStyle","position","width","height","borderRadius","getDetails","conversation","currentUserId","otherParticipants","participants","filter","participant","id","displayNames","reduce","names","name","join","displayText","lastMessage","messages","length","sender","senderId","message","contentType","body","ChatConversationItem","isSelected","opponent","onSelectConversation","isOpenSidebar","other","user","displayLastActivity","created","isGroup","avatarImgSrc","baseUrl","avatarUrl","opponentStatus","online","unreadCount","users_see_message","indexOf","_id","unread_count","isUnread","bgcolor","left","zIndex","bottom","border","palette","background","paper","top","right","noWrap","variant","color","ml","display","alignItems","flexDirection","mb","fontSize","lineHeight","whiteSpace","Date","addSuffix"],"mappings":"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","sourcesContent":["import { last } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport { formatDistanceToNowStrict } from 'date-fns';\r\n// material\r\nimport { styled } from '@material-ui/core/styles';\r\nimport { Box, Avatar, ListItemText, ListItemAvatar, ListItemButton, Badge } from '@material-ui/core';\r\n//\r\nimport BadgeStatus from '../../BadgeStatus';\r\nimport { serverConfig } from '../../../config';\r\n// hooks\r\nimport useAuth from '../../../hooks/useAuth';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst AVATAR_SIZE = 48;\r\nconst AVATAR_SIZE_GROUP = 32;\r\n\r\nconst RootStyle = styled(ListItemButton)(({ theme }) => ({\r\n  padding: theme.spacing(1.5, 3),\r\n  transition: theme.transitions.create('all')\r\n}));\r\n\r\nconst AvatarWrapperStyle = styled('div')({\r\n  position: 'relative',\r\n  width: AVATAR_SIZE,\r\n  height: AVATAR_SIZE,\r\n  '& .MuiAvatar-img': { borderRadius: '50%' },\r\n  '& .MuiAvatar-root': { width: '100%', height: '100%' }\r\n});\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst getDetails = (conversation, currentUserId) => {\r\n  const otherParticipants = conversation.participants.filter((participant) => participant.id !== currentUserId);\r\n  const displayNames = otherParticipants.reduce((names, participant) => [...names, participant.name], []).join(', ');\r\n  let displayText = '';\r\n  const lastMessage = conversation.messages[conversation.messages.length - 1];\r\n  if (lastMessage) {\r\n    const sender = lastMessage.senderId === currentUserId ? 'You: ' : '';\r\n    const message = lastMessage.contentType === 'image' ? 'Sent a photo' : lastMessage.body;\r\n    displayText = `${sender}${message}`;\r\n  }\r\n  return { otherParticipants, displayNames, displayText };\r\n};\r\n\r\nChatConversationItem.propTypes = {\r\n  isSelected: PropTypes.bool,\r\n  opponent: PropTypes.object,\r\n  // conversation: PropTypes.object.isRequired,\r\n  isOpenSidebar: PropTypes.bool,\r\n  onSelectConversation: PropTypes.func\r\n};\r\n\r\nexport default function ChatConversationItem({\r\n  isSelected,\r\n  opponent,\r\n  conversation,\r\n  onSelectConversation,\r\n  isOpenSidebar,\r\n  ...other\r\n}) {\r\n  const { user } = useAuth();\r\n  // const displayLastActivity = last(conversation.messages).createdAt;\r\n  const displayLastActivity = opponent.created;\r\n  // const isGroup = details.otherParticipants.length > 1;\r\n  const isGroup = false;\r\n  // const isOnlineGroup = isGroup && details.otherParticipants.map((item) => item.status).includes('online');\r\n  const avatarImgSrc = `${serverConfig.baseUrl}/user/img-src/${opponent.avatarUrl}`;\r\n  const opponentStatus = opponent.online ? 'online' : 'offline';\r\n\r\n  const unreadCount =\r\n    (conversation &&\r\n      (conversation.lastMessage.users_see_message.indexOf(user._id) > -1\r\n        ? 0\r\n        : conversation.lastMessage.unread_count)) ||\r\n    0;\r\n  const isUnread = unreadCount > 0;\r\n\r\n  return (\r\n    <RootStyle\r\n      disableGutters\r\n      onClick={onSelectConversation}\r\n      sx={{\r\n        ...(isSelected && { bgcolor: 'action.selected' })\r\n      }}\r\n      {...other}\r\n    >\r\n      <ListItemAvatar>\r\n        <Box\r\n          sx={{\r\n            ...(isGroup && {\r\n              position: 'relative',\r\n              width: AVATAR_SIZE,\r\n              height: AVATAR_SIZE,\r\n              '& .avatarWrapper': {\r\n                position: 'absolute',\r\n                width: AVATAR_SIZE_GROUP,\r\n                height: AVATAR_SIZE_GROUP,\r\n                '&:nth-of-type(1)': {\r\n                  left: 0,\r\n                  zIndex: 9,\r\n                  bottom: 2,\r\n                  '& .MuiAvatar-root': {\r\n                    border: (theme) => `solid 2px ${theme.palette.background.paper}`\r\n                  }\r\n                },\r\n                '&:nth-of-type(2)': { top: 2, right: 0 }\r\n              }\r\n            })\r\n          }}\r\n        >\r\n          {/* {details.otherParticipants.slice(0, 2).map((participant) => ( */}\r\n          <AvatarWrapperStyle className=\"avatarWrapper\" key={opponent._id}>\r\n            <Avatar alt={opponent.name} src={avatarImgSrc} />\r\n            <BadgeStatus status={opponentStatus} sx={{ right: 2, bottom: 2, position: 'absolute' }} />\r\n          </AvatarWrapperStyle>\r\n          {/* ))} */}\r\n          {/* {opponent.online && <BadgeStatus status=\"online\" sx={{ right: 2, bottom: 2, position: 'absolute' }} />} */}\r\n        </Box>\r\n      </ListItemAvatar>\r\n\r\n      {isOpenSidebar && (\r\n        <>\r\n          <ListItemText\r\n            primary={opponent.name}\r\n            primaryTypographyProps={{\r\n              noWrap: true,\r\n              variant: 'subtitle2'\r\n            }}\r\n            secondary={conversation && conversation.lastMessage.message}\r\n            secondaryTypographyProps={{\r\n              noWrap: true,\r\n              variant: isUnread ? 'subtitle2' : 'body2',\r\n              color: isUnread ? 'textPrimary' : 'textSecondary'\r\n            }}\r\n          />\r\n\r\n          <Box\r\n            sx={{\r\n              ml: 2,\r\n              height: 44,\r\n              display: 'flex',\r\n              alignItems: 'flex-end',\r\n              flexDirection: 'column'\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                mb: 1.25,\r\n                fontSize: 12,\r\n                lineHeight: '22px',\r\n                whiteSpace: 'nowrap',\r\n                color: 'text.disabled'\r\n              }}\r\n            >\r\n              {formatDistanceToNowStrict(new Date(displayLastActivity), {\r\n                addSuffix: false\r\n              })}\r\n            </Box>\r\n            {/* {isUnread && <BadgeStatus status=\"unread\" size=\"small\" />} */}\r\n            {isUnread && <Badge color=\"secondary\" badgeContent={unreadCount} />}\r\n          </Box>\r\n        </>\r\n      )}\r\n    </RootStyle>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}