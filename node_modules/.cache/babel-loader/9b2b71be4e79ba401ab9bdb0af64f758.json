{"ast":null,"code":"import _objectSpread from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import*as Yup from'yup';import{useState}from'react';import{useSnackbar}from'notistack5';import{Link as RouterLink}from'react-router-dom';import{useFormik,Form,FormikProvider}from'formik';import{Icon}from'@iconify/react';import eyeFill from'@iconify/icons-eva/eye-fill';import closeFill from'@iconify/icons-eva/close-fill';import eyeOffFill from'@iconify/icons-eva/eye-off-fill';// material\nimport{Link,Stack,Alert,Checkbox,TextField,IconButton,InputAdornment,FormControlLabel}from'@material-ui/core';import{LoadingButton}from'@material-ui/lab';// routes\nimport{PATH_AUTH}from'../../../routes/paths';// hooks\nimport useAuth from'../../../hooks/useAuth';import useIsMountedRef from'../../../hooks/useIsMountedRef';//\nimport{MIconButton}from'../../@material-extend';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function LoginForm(){var _useAuth=useAuth(),login=_useAuth.login;var isMountedRef=useIsMountedRef();var _useSnackbar=useSnackbar(),enqueueSnackbar=_useSnackbar.enqueueSnackbar,closeSnackbar=_useSnackbar.closeSnackbar;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showPassword=_useState2[0],setShowPassword=_useState2[1];var LoginSchema=Yup.object().shape({email:Yup.string().email('Email must be a valid email address').required('Email is required'),password:Yup.string().required('Password is required')});var formik=useFormik({initialValues:{email:'',password:'',remember:true},validationSchema:LoginSchema,onSubmit:function(){var _onSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values,_ref){var setErrors,setSubmitting,resetForm,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setErrors=_ref.setErrors,setSubmitting=_ref.setSubmitting,resetForm=_ref.resetForm;_context.prev=1;_context.next=4;return login(values.email,values.password);case 4:res=_context.sent;if(!res.data.success){enqueueSnackbar(res.data.message,{variant:'error'});}if(isMountedRef.current){setSubmitting(false);}_context.next=15;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);console.error(_context.t0);enqueueSnackbar(_context.t0.message||\"Server Error: \".concat(_context.t0),{variant:'error'});resetForm();if(isMountedRef.current){setSubmitting(false);setErrors({afterSubmit:_context.t0.message});}case 15:case\"end\":return _context.stop();}}},_callee,null,[[1,9]]);}));function onSubmit(_x,_x2){return _onSubmit.apply(this,arguments);}return onSubmit;}()});var errors=formik.errors,touched=formik.touched,values=formik.values,isSubmitting=formik.isSubmitting,handleSubmit=formik.handleSubmit,getFieldProps=formik.getFieldProps;var handleShowPassword=function handleShowPassword(){setShowPassword(function(show){return!show;});};return/*#__PURE__*/_jsx(FormikProvider,{value:formik,children:/*#__PURE__*/_jsxs(Form,{autoComplete:\"off\",noValidate:true,onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Stack,{spacing:3,children:[errors.afterSubmit&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",children:errors.afterSubmit}),/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({fullWidth:true,autoComplete:\"username\",type:\"email\",label:\"Email address\"},getFieldProps('email')),{},{error:Boolean(touched.email&&errors.email),helperText:touched.email&&errors.email})),/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({fullWidth:true,autoComplete:\"current-password\",type:showPassword?'text':'password',label:\"Password\"},getFieldProps('password')),{},{InputProps:{endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:/*#__PURE__*/_jsx(IconButton,{onClick:handleShowPassword,edge:\"end\",children:/*#__PURE__*/_jsx(Icon,{icon:showPassword?eyeFill:eyeOffFill})})})},error:Boolean(touched.password&&errors.password),helperText:touched.password&&errors.password}))]}),/*#__PURE__*/_jsxs(Stack,{direction:\"row\",alignItems:\"center\",justifyContent:\"space-between\",sx:{my:2},children:[/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,_objectSpread(_objectSpread({},getFieldProps('remember')),{},{checked:values.remember})),label:\"Remember me\"}),/*#__PURE__*/_jsx(Link,{component:RouterLink,variant:\"subtitle2\",to:PATH_AUTH.resetPassword,children:\"Forgot password?\"})]}),/*#__PURE__*/_jsx(LoadingButton,{fullWidth:true,size:\"large\",type:\"submit\",variant:\"contained\",loading:isSubmitting,children:\"Login\"})]})});}","map":{"version":3,"sources":["E:/projects/localtalk.mobi/mobilechat-adminpanel/src/components/authentication/login/LoginForm.js"],"names":["Yup","useState","useSnackbar","Link","RouterLink","useFormik","Form","FormikProvider","Icon","eyeFill","closeFill","eyeOffFill","Stack","Alert","Checkbox","TextField","IconButton","InputAdornment","FormControlLabel","LoadingButton","PATH_AUTH","useAuth","useIsMountedRef","MIconButton","LoginForm","login","isMountedRef","enqueueSnackbar","closeSnackbar","showPassword","setShowPassword","LoginSchema","object","shape","email","string","required","password","formik","initialValues","remember","validationSchema","onSubmit","values","setErrors","setSubmitting","resetForm","res","data","success","message","variant","current","console","error","afterSubmit","errors","touched","isSubmitting","handleSubmit","getFieldProps","handleShowPassword","show","Boolean","endAdornment","my","resetPassword"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\r\nimport { useState } from 'react';\r\nimport { useSnackbar } from 'notistack5';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useFormik, Form, FormikProvider } from 'formik';\r\nimport { Icon } from '@iconify/react';\r\nimport eyeFill from '@iconify/icons-eva/eye-fill';\r\nimport closeFill from '@iconify/icons-eva/close-fill';\r\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\r\n// material\r\nimport {\r\n  Link,\r\n  Stack,\r\n  Alert,\r\n  Checkbox,\r\n  TextField,\r\n  IconButton,\r\n  InputAdornment,\r\n  FormControlLabel\r\n} from '@material-ui/core';\r\nimport { LoadingButton } from '@material-ui/lab';\r\n// routes\r\nimport { PATH_AUTH } from '../../../routes/paths';\r\n// hooks\r\nimport useAuth from '../../../hooks/useAuth';\r\nimport useIsMountedRef from '../../../hooks/useIsMountedRef';\r\n//\r\nimport { MIconButton } from '../../@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function LoginForm() {\r\n  const { login } = useAuth();\r\n  const isMountedRef = useIsMountedRef();\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const LoginSchema = Yup.object().shape({\r\n    email: Yup.string().email('Email must be a valid email address').required('Email is required'),\r\n    password: Yup.string().required('Password is required')\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n      remember: true\r\n    },\r\n    validationSchema: LoginSchema,\r\n    onSubmit: async (values, { setErrors, setSubmitting, resetForm }) => {\r\n      try {\r\n        const res = await login(values.email, values.password);\r\n        if (!res.data.success) {\r\n          enqueueSnackbar(res.data.message, { variant: 'error' });\r\n        }\r\n        if (isMountedRef.current) {\r\n          setSubmitting(false);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        enqueueSnackbar(error.message || `Server Error: ${error}`, { variant: 'error' });\r\n        resetForm();\r\n        if (isMountedRef.current) {\r\n          setSubmitting(false);\r\n          setErrors({ afterSubmit: error.message });\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  const { errors, touched, values, isSubmitting, handleSubmit, getFieldProps } = formik;\r\n\r\n  const handleShowPassword = () => {\r\n    setShowPassword((show) => !show);\r\n  };\r\n\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n        <Stack spacing={3}>\r\n          {errors.afterSubmit && <Alert severity=\"error\">{errors.afterSubmit}</Alert>}\r\n\r\n          <TextField\r\n            fullWidth\r\n            autoComplete=\"username\"\r\n            type=\"email\"\r\n            label=\"Email address\"\r\n            {...getFieldProps('email')}\r\n            error={Boolean(touched.email && errors.email)}\r\n            helperText={touched.email && errors.email}\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            autoComplete=\"current-password\"\r\n            type={showPassword ? 'text' : 'password'}\r\n            label=\"Password\"\r\n            {...getFieldProps('password')}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton onClick={handleShowPassword} edge=\"end\">\r\n                    <Icon icon={showPassword ? eyeFill : eyeOffFill} />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n            error={Boolean(touched.password && errors.password)}\r\n            helperText={touched.password && errors.password}\r\n          />\r\n        </Stack>\r\n\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ my: 2 }}>\r\n          <FormControlLabel\r\n            control={<Checkbox {...getFieldProps('remember')} checked={values.remember} />}\r\n            label=\"Remember me\"\r\n          />\r\n\r\n          <Link component={RouterLink} variant=\"subtitle2\" to={PATH_AUTH.resetPassword}>\r\n            Forgot password?\r\n          </Link>\r\n        </Stack>\r\n\r\n        <LoadingButton fullWidth size=\"large\" type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n          Login\r\n        </LoadingButton>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}