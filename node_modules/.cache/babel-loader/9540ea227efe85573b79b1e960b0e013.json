{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\localtalk.mobi(react+node)\\\\pro\\\\toptalk-adminpanel\\\\src\\\\components\\\\_dashboard\\\\general-analytics\\\\AnalyticsOrderTimeline.js\";\nimport PropTypes from 'prop-types'; // material\n\nimport { Card, Typography, CardHeader, CardContent } from '@material-ui/core';\nimport { Timeline, TimelineDot, TimelineItem, TimelineContent, TimelineConnector, TimelineSeparator } from '@material-ui/lab'; // utils\n\nimport { fDateTime } from '../../../utils/formatTime';\nimport mockData from '../../../utils/mock-data'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TITLES = ['1983, orders, $4220', '12 Invoices have been paid', 'Order #37745 from September', 'New order placed #XF-2356', 'New order placed #XF-2346'];\nconst MOCK_TIMELINES = [...Array(5)].map((_, index) => ({\n  id: mockData.id(index),\n  title: TITLES[index],\n  type: `order${index + 1}`,\n  time: mockData.time(index)\n})); // ----------------------------------------------------------------------\n\nOrderItem.propTypes = {\n  item: PropTypes.object,\n  isLast: PropTypes.bool\n};\n\nfunction OrderItem({\n  item,\n  isLast\n}) {\n  const {\n    type,\n    title,\n    time\n  } = item;\n  return /*#__PURE__*/_jsxDEV(TimelineItem, {\n    children: [/*#__PURE__*/_jsxDEV(TimelineSeparator, {\n      children: [/*#__PURE__*/_jsxDEV(TimelineDot, {\n        color: type === 'order1' && 'primary' || type === 'order2' && 'success' || type === 'order3' && 'info' || type === 'order4' && 'warning' || 'error'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), isLast ? null : /*#__PURE__*/_jsxDEV(TimelineConnector, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TimelineContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        sx: {\n          color: 'text.secondary'\n        },\n        children: fDateTime(time)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\nexport default function AnalyticsOrderTimeline() {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      '& .MuiTimelineItem-missingOppositeContent:before': {\n        display: 'none'\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: \"Order Timeline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Timeline, {\n        children: MOCK_TIMELINES.map((item, index) => /*#__PURE__*/_jsxDEV(OrderItem, {\n          item: item,\n          isLast: index === MOCK_TIMELINES.length - 1\n        }, item.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["E:/projects/localtalk.mobi(react+node)/pro/toptalk-adminpanel/src/components/_dashboard/general-analytics/AnalyticsOrderTimeline.js"],"names":["PropTypes","Card","Typography","CardHeader","CardContent","Timeline","TimelineDot","TimelineItem","TimelineContent","TimelineConnector","TimelineSeparator","fDateTime","mockData","TITLES","MOCK_TIMELINES","Array","map","_","index","id","title","type","time","OrderItem","propTypes","item","object","isLast","bool","color","AnalyticsOrderTimeline","display","length"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\n// material\r\nimport { Card, Typography, CardHeader, CardContent } from '@material-ui/core';\r\nimport {\r\n  Timeline,\r\n  TimelineDot,\r\n  TimelineItem,\r\n  TimelineContent,\r\n  TimelineConnector,\r\n  TimelineSeparator\r\n} from '@material-ui/lab';\r\n// utils\r\nimport { fDateTime } from '../../../utils/formatTime';\r\nimport mockData from '../../../utils/mock-data';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TITLES = [\r\n  '1983, orders, $4220',\r\n  '12 Invoices have been paid',\r\n  'Order #37745 from September',\r\n  'New order placed #XF-2356',\r\n  'New order placed #XF-2346'\r\n];\r\n\r\nconst MOCK_TIMELINES = [...Array(5)].map((_, index) => ({\r\n  id: mockData.id(index),\r\n  title: TITLES[index],\r\n  type: `order${index + 1}`,\r\n  time: mockData.time(index)\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nOrderItem.propTypes = {\r\n  item: PropTypes.object,\r\n  isLast: PropTypes.bool\r\n};\r\n\r\nfunction OrderItem({ item, isLast }) {\r\n  const { type, title, time } = item;\r\n  return (\r\n    <TimelineItem>\r\n      <TimelineSeparator>\r\n        <TimelineDot\r\n          color={\r\n            (type === 'order1' && 'primary') ||\r\n            (type === 'order2' && 'success') ||\r\n            (type === 'order3' && 'info') ||\r\n            (type === 'order4' && 'warning') ||\r\n            'error'\r\n          }\r\n        />\r\n        {isLast ? null : <TimelineConnector />}\r\n      </TimelineSeparator>\r\n      <TimelineContent>\r\n        <Typography variant=\"subtitle2\">{title}</Typography>\r\n        <Typography variant=\"caption\" sx={{ color: 'text.secondary' }}>\r\n          {fDateTime(time)}\r\n        </Typography>\r\n      </TimelineContent>\r\n    </TimelineItem>\r\n  );\r\n}\r\n\r\nexport default function AnalyticsOrderTimeline() {\r\n  return (\r\n    <Card\r\n      sx={{\r\n        '& .MuiTimelineItem-missingOppositeContent:before': {\r\n          display: 'none'\r\n        }\r\n      }}\r\n    >\r\n      <CardHeader title=\"Order Timeline\" />\r\n      <CardContent>\r\n        <Timeline>\r\n          {MOCK_TIMELINES.map((item, index) => (\r\n            <OrderItem key={item.title} item={item} isLast={index === MOCK_TIMELINES.length - 1} />\r\n          ))}\r\n        </Timeline>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}