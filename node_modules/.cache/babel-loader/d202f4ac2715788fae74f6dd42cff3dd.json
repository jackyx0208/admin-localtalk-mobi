{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\localtalk.mobi(back)\\\\pro\\\\toptalk-adminpanel\\\\src\\\\components\\\\_dashboard\\\\user\\\\UserDetailsForm.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack5';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, FormikProvider, useFormik } from 'formik';\nimport { Box, Card, Grid, Stack, Switch, TextField, Typography, FormHelperText, FormControlLabel, Avatar } from '@material-ui/core'; // utils\n\nimport axios from '../../../utils/axios';\nimport fakeRequest from '../../../utils/fakeRequest'; // routes\n\nimport { PATH_DASHBOARD } from '../../../routes/paths'; //\n\nimport Label from '../../Label';\nimport { serverConfig } from '../../../config'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nUserDetailsForm.propTypes = {\n  currentUser: PropTypes.object,\n  userSpecialPermissions: PropTypes.object,\n  parameterSettings: PropTypes.object\n};\nexport default function UserDetailsForm({\n  currentUser,\n  userSpecialPermissions,\n  parameterSettings\n}) {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const role = currentUser ? (currentUser.role === 'user' || currentUser.role === 's-user') && userSpecialPermissions && 's-user' || currentUser.role : '';\n  const displayMaxCoverage = userSpecialPermissions && userSpecialPermissions.max_coverage || parameterSettings && parameterSettings.settings.default_coverage || 150;\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      name: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.name) || '',\n      email: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.email) || '',\n      password: '',\n      gender: currentUser && currentUser.gender > -1 ? currentUser.gender : '',\n      role: role || '',\n      coverage: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.coverage) || 50,\n      max_coverage: displayMaxCoverage,\n      location: currentUser ? `${currentUser.location.coordinates[1]}, ${currentUser.location.coordinates[0]}` : '',\n      fixedLocation: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.fixedLocation) || '',\n      phoneNumber: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.phoneNumber) || '',\n      address: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.address) || '',\n      country: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.country) || '',\n      state: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.state) || '',\n      city: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.city) || '',\n      zipCode: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.zipCode) || '',\n      avatarUrl: currentUser && `${serverConfig.baseUrl}/user/img-src/${currentUser.avatarUrl}` || null,\n      isVerified: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.isVerified) || true,\n      status: currentUser === null || currentUser === void 0 ? void 0 : currentUser.status,\n      online: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.online) || false,\n      onlineStatus: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.online) && 'online' || 'offline',\n      username: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.username) || '',\n      note: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.note) || '',\n      credit: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.credit) || '0 %',\n      balance: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.balance) || '$ 0'\n    },\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm,\n      setErrors\n    }) => {\n      try {\n        await fakeRequest(500);\n        await axios.put(`/user/manage-users?username=${values.username}`, values);\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar('Update success', {\n          variant: 'success'\n        });\n        navigate(PATH_DASHBOARD.user.list);\n      } catch (error) {\n        console.error(error);\n        setSubmitting(false);\n        setErrors(error);\n      }\n    }\n  });\n  const {\n    errors,\n    values,\n    touched,\n    handleSubmit,\n    setFieldValue,\n    getFieldProps\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(FormikProvider, {\n    value: formik,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              py: 10,\n              px: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              color: values.status !== 'active' ? 'error' : 'success',\n              sx: {\n                textTransform: 'uppercase',\n                position: 'absolute',\n                top: 24,\n                right: 24\n              },\n              children: values.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 5\n              },\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                src: values.avatarUrl\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                error: true,\n                sx: {\n                  px: 2,\n                  textAlign: 'center'\n                },\n                children: touched.avatarUrl && errors.avatarUrl\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              labelPlacement: \"start\",\n              control: /*#__PURE__*/_jsxDEV(Switch, {\n                disabled: true,\n                onChange: event => setFieldValue('status', event.target.checked ? 'banned' : 'active'),\n                checked: values.status !== 'active'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this),\n              label: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  sx: {\n                    mb: 0.5\n                  },\n                  children: \"Banned\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    color: 'text.secondary'\n                  },\n                  children: \"Apply disable account\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true),\n              sx: {\n                mx: 0,\n                mb: 3,\n                width: 1,\n                justifyContent: 'space-between'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              labelPlacement: \"start\",\n              control: /*#__PURE__*/_jsxDEV(Switch, {\n                disabled: true,\n                ...getFieldProps('isVerified'),\n                checked: values.isVerified\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 26\n              }, this),\n              label: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  sx: {\n                    mb: 0.5\n                  },\n                  children: \"Email Verified\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    color: 'text.secondary'\n                  },\n                  children: \"Disabling this will automatically send the user a verification email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true),\n              sx: {\n                mx: 0,\n                width: 1,\n                justifyContent: 'space-between'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              p: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  disabled: true,\n                  inputProps: {\n                    readOnly: true\n                  },\n                  fullWidth: true,\n                  label: \"Email\",\n                  ...getFieldProps('email')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  disabled: true,\n                  inputProps: {\n                    readOnly: true\n                  },\n                  fullWidth: true,\n                  label: \"Nickname\",\n                  ...getFieldProps('name')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  select: true,\n                  fullWidth: true,\n                  label: \"Gender\",\n                  ...getFieldProps('gender'),\n                  SelectProps: {\n                    native: true\n                  },\n                  disabled: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"0\",\n                    children: \"Male\"\n                  }, \"male\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"1\",\n                    children: \"Female\"\n                  }, \"female\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"2\",\n                    children: \"Business\"\n                  }, \"business\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  disabled: true,\n                  fullWidth: true,\n                  label: \"Role\",\n                  ...getFieldProps('role')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  disabled: true,\n                  fullWidth: true,\n                  label: \"Credit\",\n                  ...getFieldProps('credit')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  disabled: true,\n                  fullWidth: true,\n                  label: \"Balance\",\n                  ...getFieldProps('balance')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  disabled: true,\n                  fullWidth: true,\n                  label: \"Status\",\n                  ...getFieldProps('onlineStatus')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  disabled: true,\n                  fullWidth: true,\n                  label: \"Punishment\",\n                  ...getFieldProps('punishment')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  disabled: true,\n                  fullWidth: true,\n                  label: \"Coverage\",\n                  ...getFieldProps('coverage')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  disabled: true,\n                  fullWidth: true,\n                  label: \"Max Coverage\",\n                  ...getFieldProps('max_coverage')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  disabled: true,\n                  fullWidth: true,\n                  label: \"Location\",\n                  ...getFieldProps('country')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  disabled: true,\n                  fullWidth: true,\n                  label: \"Latitude and logintude\",\n                  ...getFieldProps('location')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  disabled: true,\n                  fullWidth: true,\n                  label: \"Registration Date\",\n                  ...getFieldProps('created')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: {\n                  xs: 'column',\n                  sm: 'row'\n                },\n                spacing: {\n                  xs: 3,\n                  sm: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  disabled: true,\n                  fullWidth: true,\n                  label: \"Note\",\n                  multiline: true,\n                  minRows: 4,\n                  maxRows: 4,\n                  ...getFieldProps('note')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserDetailsForm, \"ShlbACjtCU8GDduOfYBiimtQsaY=\", false, function () {\n  return [useNavigate, useSnackbar, useFormik];\n});\n\n_c = UserDetailsForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserDetailsForm\");","map":{"version":3,"sources":["E:/projects/localtalk.mobi(back)/pro/toptalk-adminpanel/src/components/_dashboard/user/UserDetailsForm.js"],"names":["PropTypes","useSnackbar","useNavigate","Form","FormikProvider","useFormik","Box","Card","Grid","Stack","Switch","TextField","Typography","FormHelperText","FormControlLabel","Avatar","axios","fakeRequest","PATH_DASHBOARD","Label","serverConfig","UserDetailsForm","propTypes","currentUser","object","userSpecialPermissions","parameterSettings","navigate","enqueueSnackbar","role","displayMaxCoverage","max_coverage","settings","default_coverage","formik","enableReinitialize","initialValues","name","email","password","gender","coverage","location","coordinates","fixedLocation","phoneNumber","address","country","state","city","zipCode","avatarUrl","baseUrl","isVerified","status","online","onlineStatus","username","note","credit","balance","onSubmit","values","setSubmitting","resetForm","setErrors","put","variant","user","list","error","console","errors","touched","handleSubmit","setFieldValue","getFieldProps","py","px","textTransform","position","top","right","mb","textAlign","event","target","checked","color","mx","width","justifyContent","p","xs","sm","readOnly","native"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useSnackbar } from 'notistack5';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Form, FormikProvider, useFormik } from 'formik';\r\nimport {\r\n  Box,\r\n  Card,\r\n  Grid,\r\n  Stack,\r\n  Switch,\r\n  TextField,\r\n  Typography,\r\n  FormHelperText,\r\n  FormControlLabel,\r\n  Avatar\r\n} from '@material-ui/core';\r\n// utils\r\nimport axios from '../../../utils/axios';\r\nimport fakeRequest from '../../../utils/fakeRequest';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n//\r\nimport Label from '../../Label';\r\nimport { serverConfig } from '../../../config';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nUserDetailsForm.propTypes = {\r\n  currentUser: PropTypes.object,\r\n  userSpecialPermissions: PropTypes.object,\r\n  parameterSettings: PropTypes.object\r\n};\r\n\r\nexport default function UserDetailsForm({ currentUser, userSpecialPermissions, parameterSettings }) {\r\n  const navigate = useNavigate();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const role = currentUser\r\n    ? ((currentUser.role === 'user' || currentUser.role === 's-user') && userSpecialPermissions && 's-user') ||\r\n      currentUser.role\r\n    : '';\r\n  const displayMaxCoverage =\r\n    (userSpecialPermissions && userSpecialPermissions.max_coverage) ||\r\n    (parameterSettings && parameterSettings.settings.default_coverage) ||\r\n    150;\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      name: currentUser?.name || '',\r\n      email: currentUser?.email || '',\r\n      password: '',\r\n      gender: currentUser && currentUser.gender > -1 ? currentUser.gender : '',\r\n      role: role || '',\r\n      coverage: currentUser?.coverage || 50,\r\n      max_coverage: displayMaxCoverage,\r\n      location: currentUser ? `${currentUser.location.coordinates[1]}, ${currentUser.location.coordinates[0]}` : '',\r\n      fixedLocation: currentUser?.fixedLocation || '',\r\n      phoneNumber: currentUser?.phoneNumber || '',\r\n      address: currentUser?.address || '',\r\n      country: currentUser?.country || '',\r\n      state: currentUser?.state || '',\r\n      city: currentUser?.city || '',\r\n      zipCode: currentUser?.zipCode || '',\r\n      avatarUrl: (currentUser && `${serverConfig.baseUrl}/user/img-src/${currentUser.avatarUrl}`) || null,\r\n      isVerified: currentUser?.isVerified || true,\r\n      status: currentUser?.status,\r\n      online: currentUser?.online || false,\r\n      onlineStatus: (currentUser?.online && 'online') || 'offline',\r\n      username: currentUser?.username || '',\r\n      note: currentUser?.note || '',\r\n      credit: currentUser?.credit || '0 %',\r\n      balance: currentUser?.balance || '$ 0'\r\n    },\r\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\r\n      try {\r\n        await fakeRequest(500);\r\n\r\n        await axios.put(`/user/manage-users?username=${values.username}`, values);\r\n\r\n        resetForm();\r\n        setSubmitting(false);\r\n        enqueueSnackbar('Update success', { variant: 'success' });\r\n        navigate(PATH_DASHBOARD.user.list);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setSubmitting(false);\r\n        setErrors(error);\r\n      }\r\n    }\r\n  });\r\n\r\n  const { errors, values, touched, handleSubmit, setFieldValue, getFieldProps } = formik;\r\n\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={4}>\r\n            <Card sx={{ py: 10, px: 3 }}>\r\n              <Label\r\n                color={values.status !== 'active' ? 'error' : 'success'}\r\n                sx={{ textTransform: 'uppercase', position: 'absolute', top: 24, right: 24 }}\r\n              >\r\n                {values.status}\r\n              </Label>\r\n\r\n              <Box sx={{ mb: 5 }}>\r\n                <Avatar src={values.avatarUrl} />\r\n                <FormHelperText error sx={{ px: 2, textAlign: 'center' }}>\r\n                  {touched.avatarUrl && errors.avatarUrl}\r\n                </FormHelperText>\r\n              </Box>\r\n\r\n              <FormControlLabel\r\n                labelPlacement=\"start\"\r\n                control={\r\n                  <Switch\r\n                    disabled\r\n                    onChange={(event) => setFieldValue('status', event.target.checked ? 'banned' : 'active')}\r\n                    checked={values.status !== 'active'}\r\n                  />\r\n                }\r\n                label={\r\n                  <>\r\n                    <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\r\n                      Banned\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                      Apply disable account\r\n                    </Typography>\r\n                  </>\r\n                }\r\n                sx={{ mx: 0, mb: 3, width: 1, justifyContent: 'space-between' }}\r\n              />\r\n\r\n              <FormControlLabel\r\n                labelPlacement=\"start\"\r\n                control={<Switch disabled {...getFieldProps('isVerified')} checked={values.isVerified} />}\r\n                label={\r\n                  <>\r\n                    <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\r\n                      Email Verified\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                      Disabling this will automatically send the user a verification email\r\n                    </Typography>\r\n                  </>\r\n                }\r\n                sx={{ mx: 0, width: 1, justifyContent: 'space-between' }}\r\n              />\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={8}>\r\n            <Card sx={{ p: 3 }}>\r\n              <Stack spacing={3}>\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <TextField\r\n                    disabled\r\n                    inputProps={{ readOnly: true }}\r\n                    fullWidth\r\n                    label=\"Email\"\r\n                    {...getFieldProps('email')}\r\n                  />\r\n                  <TextField\r\n                    disabled\r\n                    inputProps={{ readOnly: true }}\r\n                    fullWidth\r\n                    label=\"Nickname\"\r\n                    {...getFieldProps('name')}\r\n                  />\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <TextField\r\n                    select\r\n                    fullWidth\r\n                    label=\"Gender\"\r\n                    {...getFieldProps('gender')}\r\n                    SelectProps={{ native: true }}\r\n                    disabled\r\n                  >\r\n                    <option value=\"\" />\r\n                    <option key=\"male\" value=\"0\">\r\n                      Male\r\n                    </option>\r\n                    <option key=\"female\" value=\"1\">\r\n                      Female\r\n                    </option>\r\n                    <option key=\"business\" value=\"2\">\r\n                      Business\r\n                    </option>\r\n                  </TextField>\r\n                  <TextField disabled fullWidth label=\"Role\" {...getFieldProps('role')} />\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <TextField disabled fullWidth label=\"Credit\" {...getFieldProps('credit')} />\r\n                  <TextField disabled fullWidth label=\"Balance\" {...getFieldProps('balance')} />\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <TextField disabled fullWidth label=\"Status\" {...getFieldProps('onlineStatus')} />\r\n                  <TextField disabled fullWidth label=\"Punishment\" {...getFieldProps('punishment')} />\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <TextField disabled fullWidth label=\"Coverage\" {...getFieldProps('coverage')} />\r\n                  <TextField disabled fullWidth label=\"Max Coverage\" {...getFieldProps('max_coverage')} />\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <TextField disabled fullWidth label=\"Location\" {...getFieldProps('country')} />\r\n                  <TextField disabled fullWidth label=\"Latitude and logintude\" {...getFieldProps('location')} />\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <TextField disabled fullWidth label=\"Registration Date\" {...getFieldProps('created')} />\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <TextField\r\n                    disabled\r\n                    fullWidth\r\n                    label=\"Note\"\r\n                    multiline\r\n                    minRows={4}\r\n                    maxRows={4}\r\n                    {...getFieldProps('note')}\r\n                  />\r\n                </Stack>\r\n              </Stack>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}