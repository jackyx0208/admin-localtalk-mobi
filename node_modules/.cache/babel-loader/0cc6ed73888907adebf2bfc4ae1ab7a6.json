{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\localtalk.mobi(back)\\\\pro\\\\toptalk-adminpanel\\\\src\\\\pages\\\\dashboard\\\\ParameterSettings.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react'; // import { paramCase } from 'change-case';\n// import { useParams, useLocation } from 'react-router-dom';\n// material\n\nimport { Container } from '@material-ui/core'; // redux\n\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getSettingsList } from '../../redux/slices/settings'; // import { getWordList } from '../../redux/slices/prohibitedword';\n// routes\n\nimport { PATH_DASHBOARD } from '../../routes/paths'; // hooks\n\nimport useSettings from '../../hooks/useSettings'; // components\n\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport ParameterSettingsForm from '../../components/_dashboard/settings/ParameterSettingsForm'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ParameterSettings() {\n  _s();\n\n  const {\n    themeStretch\n  } = useSettings();\n  const dispatch = useDispatch(); // const { pathname } = useLocation();\n  // const { word } = useParams();\n\n  const {\n    settingsList\n  } = useSelector(state => state.setting);\n  const parameterSettings = settingsList.find(settingRow => settingRow.type === 'parameter');\n  useEffect(() => {\n    dispatch(getSettingsList());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: \"Settings: Parameter Settings | Locals\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: themeStretch ? false : 'lg',\n      children: [/*#__PURE__*/_jsxDEV(HeaderBreadcrumbs, {\n        heading: \"Parameter Settings\",\n        links: [{\n          name: 'Dashboard',\n          href: PATH_DASHBOARD.root\n        }, {\n          name: 'Settings',\n          href: PATH_DASHBOARD.settings.parameters\n        }, {\n          name: 'Parameters'\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ParameterSettingsForm, {\n        settingsData: parameterSettings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ParameterSettings, \"0KVCE3+eA0uev5CqpuNfTyRIhZI=\", false, function () {\n  return [useSettings, useDispatch, useSelector];\n});\n\n_c = ParameterSettings;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParameterSettings\");","map":{"version":3,"sources":["E:/projects/localtalk.mobi(back)/pro/toptalk-adminpanel/src/pages/dashboard/ParameterSettings.js"],"names":["useEffect","Container","useDispatch","useSelector","getSettingsList","PATH_DASHBOARD","useSettings","Page","HeaderBreadcrumbs","ParameterSettingsForm","ParameterSettings","themeStretch","dispatch","settingsList","state","setting","parameterSettings","find","settingRow","type","name","href","root","settings","parameters"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B,C,CACA;AACA;AACA;;AACA,SAASC,SAAT,QAA0B,mBAA1B,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,mBAAzC;AACA,SAASC,eAAT,QAAgC,6BAAhC,C,CACA;AACA;;AACA,SAASC,cAAT,QAA+B,oBAA/B,C,CACA;;AACA,OAAOC,WAAP,MAAwB,yBAAxB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;AACA,OAAOC,qBAAP,MAAkC,4DAAlC,C,CAEA;;;AAEA,eAAe,SAASC,iBAAT,GAA6B;AAAA;;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAmBL,WAAW,EAApC;AACA,QAAMM,QAAQ,GAAGV,WAAW,EAA5B,CAF0C,CAG1C;AACA;;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAmBV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,OAAlB,CAApC;AACA,QAAMC,iBAAiB,GAAGH,YAAY,CAACI,IAAb,CAAmBC,UAAD,IAAgBA,UAAU,CAACC,IAAX,KAAoB,WAAtD,CAA1B;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ,CAACR,eAAe,EAAhB,CAAR;AACD,GAFQ,EAEN,CAACQ,QAAD,CAFM,CAAT;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAC,uCAAZ;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAED,YAAY,GAAG,KAAH,GAAW,IAA5C;AAAA,8BACE,QAAC,iBAAD;AACE,QAAA,OAAO,EAAC,oBADV;AAEE,QAAA,KAAK,EAAE,CACL;AAAES,UAAAA,IAAI,EAAE,WAAR;AAAqBC,UAAAA,IAAI,EAAEhB,cAAc,CAACiB;AAA1C,SADK,EAEL;AAAEF,UAAAA,IAAI,EAAE,UAAR;AAAoBC,UAAAA,IAAI,EAAEhB,cAAc,CAACkB,QAAf,CAAwBC;AAAlD,SAFK,EAGL;AAAEJ,UAAAA,IAAI,EAAE;AAAR,SAHK;AAFT;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,qBAAD;AAAuB,QAAA,YAAY,EAAEJ;AAArC;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA5BuBN,iB;UACGJ,W,EACRJ,W,EAGQC,W;;;KALHO,iB","sourcesContent":["import { useEffect } from 'react';\r\n// import { paramCase } from 'change-case';\r\n// import { useParams, useLocation } from 'react-router-dom';\r\n// material\r\nimport { Container } from '@material-ui/core';\r\n// redux\r\nimport { useDispatch, useSelector } from '../../redux/store';\r\nimport { getSettingsList } from '../../redux/slices/settings';\r\n// import { getWordList } from '../../redux/slices/prohibitedword';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// hooks\r\nimport useSettings from '../../hooks/useSettings';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\nimport ParameterSettingsForm from '../../components/_dashboard/settings/ParameterSettingsForm';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ParameterSettings() {\r\n  const { themeStretch } = useSettings();\r\n  const dispatch = useDispatch();\r\n  // const { pathname } = useLocation();\r\n  // const { word } = useParams();\r\n  const { settingsList } = useSelector((state) => state.setting);\r\n  const parameterSettings = settingsList.find((settingRow) => settingRow.type === 'parameter');\r\n\r\n  useEffect(() => {\r\n    dispatch(getSettingsList());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Page title=\"Settings: Parameter Settings | Locals\">\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <HeaderBreadcrumbs\r\n          heading=\"Parameter Settings\"\r\n          links={[\r\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\r\n            { name: 'Settings', href: PATH_DASHBOARD.settings.parameters },\r\n            { name: 'Parameters' }\r\n          ]}\r\n        />\r\n\r\n        <ParameterSettingsForm settingsData={parameterSettings} />\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}