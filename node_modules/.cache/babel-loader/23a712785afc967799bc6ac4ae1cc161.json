{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\localtalk.mobi(react+node)\\\\pro\\\\toptalk-adminpanel\\\\src\\\\components\\\\_dashboard\\\\user\\\\account\\\\AccountNotifications.js\";\nimport { useSnackbar } from 'notistack5';\nimport { useFormik, Form, FormikProvider } from 'formik'; // material\n\nimport { Card, Stack, Switch, Typography, FormControlLabel } from '@material-ui/core';\nimport { LoadingButton } from '@material-ui/lab'; // redux\n\nimport { useSelector } from '../../../../redux/store'; // utils\n\nimport fakeRequest from '../../../../utils/fakeRequest'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ACTIVITY_OPTIONS = [{\n  value: 'activityComments',\n  label: 'Email me when someone comments onmy article'\n}, {\n  value: 'activityAnswers',\n  label: 'Email me when someone answers on my form'\n}, {\n  value: 'activityFollows',\n  label: 'Email me hen someone follows me'\n}];\nconst APPLICATION_OPTIONS = [{\n  value: 'applicationNews',\n  label: 'News and announcements'\n}, {\n  value: 'applicationProduct',\n  label: 'Weekly product updates'\n}, {\n  value: 'applicationBlog',\n  label: 'Weekly blog digest'\n}]; // ----------------------------------------------------------------------\n\nexport default function AccountNotifications() {\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    notifications\n  } = useSelector(state => state.user);\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      activityComments: notifications.activityComments,\n      activityAnswers: notifications.activityAnswers,\n      activityFollows: notifications.activityFollows,\n      applicationNews: notifications.applicationNews,\n      applicationProduct: notifications.applicationProduct,\n      applicationBlog: notifications.applicationBlog\n    },\n    onSubmit: async (values, {\n      setSubmitting\n    }) => {\n      await fakeRequest(500);\n      setSubmitting(false);\n      alert(JSON.stringify(values, null, 2));\n      enqueueSnackbar('Save success', {\n        variant: 'success'\n      });\n    }\n  });\n  const {\n    values,\n    isSubmitting,\n    handleSubmit,\n    getFieldProps\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      p: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(FormikProvider, {\n      value: formik,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        autoComplete: \"off\",\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 3,\n          alignItems: \"flex-end\",\n          children: [/*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 2,\n            sx: {\n              width: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"overline\",\n              sx: {\n                color: 'text.secondary'\n              },\n              children: \"Activity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              spacing: 1,\n              alignItems: \"flex-start\",\n              children: ACTIVITY_OPTIONS.map(activity => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Switch, { ...getFieldProps(activity.value),\n                  checked: values[activity.value]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 30\n                }, this),\n                label: activity.label,\n                sx: {\n                  mx: 0\n                }\n              }, activity.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 2,\n            sx: {\n              width: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"overline\",\n              sx: {\n                color: 'text.secondary'\n              },\n              children: \"Application\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              spacing: 1,\n              alignItems: \"flex-start\",\n              children: APPLICATION_OPTIONS.map(item => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Switch, { ...getFieldProps(item.value),\n                  checked: values[item.value]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 30\n                }, this),\n                label: item.label,\n                sx: {\n                  mx: 0\n                }\n              }, item.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n            type: \"submit\",\n            variant: \"contained\",\n            loading: isSubmitting,\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["E:/projects/localtalk.mobi(react+node)/pro/toptalk-adminpanel/src/components/_dashboard/user/account/AccountNotifications.js"],"names":["useSnackbar","useFormik","Form","FormikProvider","Card","Stack","Switch","Typography","FormControlLabel","LoadingButton","useSelector","fakeRequest","ACTIVITY_OPTIONS","value","label","APPLICATION_OPTIONS","AccountNotifications","enqueueSnackbar","notifications","state","user","formik","enableReinitialize","initialValues","activityComments","activityAnswers","activityFollows","applicationNews","applicationProduct","applicationBlog","onSubmit","values","setSubmitting","alert","JSON","stringify","variant","isSubmitting","handleSubmit","getFieldProps","p","width","color","map","activity","mx","item"],"mappings":"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","sourcesContent":["import { useSnackbar } from 'notistack5';\r\nimport { useFormik, Form, FormikProvider } from 'formik';\r\n// material\r\nimport { Card, Stack, Switch, Typography, FormControlLabel } from '@material-ui/core';\r\nimport { LoadingButton } from '@material-ui/lab';\r\n// redux\r\nimport { useSelector } from '../../../../redux/store';\r\n// utils\r\nimport fakeRequest from '../../../../utils/fakeRequest';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst ACTIVITY_OPTIONS = [\r\n  {\r\n    value: 'activityComments',\r\n    label: 'Email me when someone comments onmy article'\r\n  },\r\n  {\r\n    value: 'activityAnswers',\r\n    label: 'Email me when someone answers on my form'\r\n  },\r\n  { value: 'activityFollows', label: 'Email me hen someone follows me' }\r\n];\r\n\r\nconst APPLICATION_OPTIONS = [\r\n  { value: 'applicationNews', label: 'News and announcements' },\r\n  { value: 'applicationProduct', label: 'Weekly product updates' },\r\n  { value: 'applicationBlog', label: 'Weekly blog digest' }\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AccountNotifications() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const { notifications } = useSelector((state) => state.user);\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      activityComments: notifications.activityComments,\r\n      activityAnswers: notifications.activityAnswers,\r\n      activityFollows: notifications.activityFollows,\r\n      applicationNews: notifications.applicationNews,\r\n      applicationProduct: notifications.applicationProduct,\r\n      applicationBlog: notifications.applicationBlog\r\n    },\r\n    onSubmit: async (values, { setSubmitting }) => {\r\n      await fakeRequest(500);\r\n      setSubmitting(false);\r\n      alert(JSON.stringify(values, null, 2));\r\n      enqueueSnackbar('Save success', { variant: 'success' });\r\n    }\r\n  });\r\n\r\n  const { values, isSubmitting, handleSubmit, getFieldProps } = formik;\r\n\r\n  return (\r\n    <Card sx={{ p: 3 }}>\r\n      <FormikProvider value={formik}>\r\n        <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n          <Stack spacing={3} alignItems=\"flex-end\">\r\n            <Stack spacing={2} sx={{ width: 1 }}>\r\n              <Typography variant=\"overline\" sx={{ color: 'text.secondary' }}>\r\n                Activity\r\n              </Typography>\r\n              <Stack spacing={1} alignItems=\"flex-start\">\r\n                {ACTIVITY_OPTIONS.map((activity) => (\r\n                  <FormControlLabel\r\n                    key={activity.value}\r\n                    control={<Switch {...getFieldProps(activity.value)} checked={values[activity.value]} />}\r\n                    label={activity.label}\r\n                    sx={{ mx: 0 }}\r\n                  />\r\n                ))}\r\n              </Stack>\r\n            </Stack>\r\n\r\n            <Stack spacing={2} sx={{ width: 1 }}>\r\n              <Typography variant=\"overline\" sx={{ color: 'text.secondary' }}>\r\n                Application\r\n              </Typography>\r\n              <Stack spacing={1} alignItems=\"flex-start\">\r\n                {APPLICATION_OPTIONS.map((item) => (\r\n                  <FormControlLabel\r\n                    key={item.value}\r\n                    control={<Switch {...getFieldProps(item.value)} checked={values[item.value]} />}\r\n                    label={item.label}\r\n                    sx={{ mx: 0 }}\r\n                  />\r\n                ))}\r\n              </Stack>\r\n            </Stack>\r\n\r\n            <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n              Save Changes\r\n            </LoadingButton>\r\n          </Stack>\r\n        </Form>\r\n      </FormikProvider>\r\n    </Card>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}