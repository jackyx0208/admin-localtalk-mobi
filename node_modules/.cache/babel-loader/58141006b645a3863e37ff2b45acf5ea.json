{"ast":null,"code":"import { map, filter } from 'lodash';\nimport { createSlice } from '@reduxjs/toolkit'; // utils\n\nimport axios from '../../utils/axios';\nconst initialState = {\n  isLoading: false,\n  error: false,\n  words: [],\n  wordList: []\n};\nconst slice = createSlice({\n  name: 'prohibitedword',\n  initialState,\n  reducers: {\n    // START LOADING\n    startLoading(state) {\n      state.isLoading = true;\n    },\n\n    // HAS ERROR\n    hasError(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n\n    // GET USERS\n    getWordsSuccess(state, action) {\n      state.isLoading = false;\n      state.wordList = action.payload;\n    },\n\n    // DELETE Word\n    deleteWord(state, action) {\n      const deleteWord = filter(state.wordList, word => word._id !== action.payload);\n      state.wordList = deleteWord;\n    }\n\n  }\n}); // Reducer\n\nexport default slice.reducer; // Actions\n\nexport const {\n  deleteWord\n} = slice.actions; // ----------------------------------------------------------------------\n\nexport function getWordList() {\n  return async dispatch => {\n    dispatch(slice.actions.startLoading());\n\n    try {\n      const response = await axios.get('/prohibited-words'); // console.log(response.data);\n\n      dispatch(slice.actions.getWordsSuccess(response.data.prohibitedwords));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n} // ----------------------------------------------------------------------","map":{"version":3,"sources":["E:/projects/localtalk.mobi(react+node)/pro/toptalk-adminpanel/src/redux/slices/prohibitedword.js"],"names":["map","filter","createSlice","axios","initialState","isLoading","error","words","wordList","slice","name","reducers","startLoading","state","hasError","action","payload","getWordsSuccess","deleteWord","word","_id","reducer","actions","getWordList","dispatch","response","get","data","prohibitedwords"],"mappings":"AAAA,SAASA,GAAT,EAAcC,MAAd,QAA4B,QAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CACA;;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,KADQ;AAEnBC,EAAAA,KAAK,EAAE,KAFY;AAGnBC,EAAAA,KAAK,EAAE,EAHY;AAInBC,EAAAA,QAAQ,EAAE;AAJS,CAArB;AAOA,MAAMC,KAAK,GAAGP,WAAW,CAAC;AACxBQ,EAAAA,IAAI,EAAE,gBADkB;AAExBN,EAAAA,YAFwB;AAGxBO,EAAAA,QAAQ,EAAE;AACR;AACAC,IAAAA,YAAY,CAACC,KAAD,EAAQ;AAClBA,MAAAA,KAAK,CAACR,SAAN,GAAkB,IAAlB;AACD,KAJO;;AAKR;AACAS,IAAAA,QAAQ,CAACD,KAAD,EAAQE,MAAR,EAAgB;AACtBF,MAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACAQ,MAAAA,KAAK,CAACP,KAAN,GAAcS,MAAM,CAACC,OAArB;AACD,KATO;;AAUR;AACAC,IAAAA,eAAe,CAACJ,KAAD,EAAQE,MAAR,EAAgB;AAC7BF,MAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACAQ,MAAAA,KAAK,CAACL,QAAN,GAAiBO,MAAM,CAACC,OAAxB;AACD,KAdO;;AAeR;AACAE,IAAAA,UAAU,CAACL,KAAD,EAAQE,MAAR,EAAgB;AACxB,YAAMG,UAAU,GAAGjB,MAAM,CAACY,KAAK,CAACL,QAAP,EAAkBW,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACC,OAA/C,CAAzB;AACAH,MAAAA,KAAK,CAACL,QAAN,GAAiBU,UAAjB;AACD;;AAnBO;AAHc,CAAD,CAAzB,C,CA0BA;;AACA,eAAeT,KAAK,CAACY,OAArB,C,CACA;;AACA,OAAO,MAAM;AAAEH,EAAAA;AAAF,IAAiBT,KAAK,CAACa,OAA7B,C,CAEP;;AAEA,OAAO,SAASC,WAAT,GAAuB;AAC5B,SAAO,MAAOC,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAACf,KAAK,CAACa,OAAN,CAAcV,YAAd,EAAD,CAAR;;AACA,QAAI;AACF,YAAMa,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAN,CAAU,mBAAV,CAAvB,CADE,CAEF;;AACAF,MAAAA,QAAQ,CAACf,KAAK,CAACa,OAAN,CAAcL,eAAd,CAA8BQ,QAAQ,CAACE,IAAT,CAAcC,eAA5C,CAAD,CAAR;AACD,KAJD,CAIE,OAAOtB,KAAP,EAAc;AACdkB,MAAAA,QAAQ,CAACf,KAAK,CAACa,OAAN,CAAcR,QAAd,CAAuBR,KAAvB,CAAD,CAAR;AACD;AACF,GATD;AAUD,C,CAED","sourcesContent":["import { map, filter } from 'lodash';\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n// utils\r\nimport axios from '../../utils/axios';\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  error: false,\r\n  words: [],\r\n  wordList: []\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: 'prohibitedword',\r\n  initialState,\r\n  reducers: {\r\n    // START LOADING\r\n    startLoading(state) {\r\n      state.isLoading = true;\r\n    },\r\n    // HAS ERROR\r\n    hasError(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n    // GET USERS\r\n    getWordsSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.wordList = action.payload;\r\n    },\r\n    // DELETE Word\r\n    deleteWord(state, action) {\r\n      const deleteWord = filter(state.wordList, (word) => word._id !== action.payload);\r\n      state.wordList = deleteWord;\r\n    }\r\n  }\r\n});\r\n\r\n// Reducer\r\nexport default slice.reducer;\r\n// Actions\r\nexport const { deleteWord } = slice.actions;\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function getWordList() {\r\n  return async (dispatch) => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await axios.get('/prohibited-words');\r\n      // console.log(response.data);\r\n      dispatch(slice.actions.getWordsSuccess(response.data.prohibitedwords));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n"]},"metadata":{},"sourceType":"module"}