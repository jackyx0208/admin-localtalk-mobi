{"ast":null,"code":"import _objectSpread from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{useMemo}from'react';// material\nimport{CssBaseline}from'@material-ui/core';import{createTheme,ThemeProvider,StyledEngineProvider}from'@material-ui/core/styles';// hooks\nimport useSettings from'../hooks/useSettings';//\nimport shape from'./shape';import palette from'./palette';import typography from'./typography';import breakpoints from'./breakpoints';import GlobalStyles from'./globalStyles';import componentsOverride from'./overrides';import shadows,{customShadows}from'./shadows';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ThemeConfig(_ref){var children=_ref.children;var _useSettings=useSettings(),themeMode=_useSettings.themeMode,themeDirection=_useSettings.themeDirection;var isLight=themeMode==='light';var themeOptions=useMemo(function(){return{palette:isLight?_objectSpread(_objectSpread({},palette.light),{},{mode:'light'}):_objectSpread(_objectSpread({},palette.dark),{},{mode:'dark'}),shape:shape,typography:typography,breakpoints:breakpoints,direction:themeDirection,shadows:isLight?shadows.light:shadows.dark,customShadows:isLight?customShadows.light:customShadows.dark};},[isLight,themeDirection]);var theme=createTheme(themeOptions);theme.components=componentsOverride(theme);return/*#__PURE__*/_jsx(StyledEngineProvider,{injectFirst:true,children:/*#__PURE__*/_jsxs(ThemeProvider,{theme:theme,children:[/*#__PURE__*/_jsx(CssBaseline,{}),/*#__PURE__*/_jsx(GlobalStyles,{}),children]})});}","map":{"version":3,"sources":["E:/projects/localtalk.mobi/mobilechat-adminpanel/src/theme/index.js"],"names":["useMemo","CssBaseline","createTheme","ThemeProvider","StyledEngineProvider","useSettings","shape","palette","typography","breakpoints","GlobalStyles","componentsOverride","shadows","customShadows","ThemeConfig","children","themeMode","themeDirection","isLight","themeOptions","light","mode","dark","direction","theme","components"],"mappings":"sKAEA,OAASA,OAAT,KAAwB,OAAxB,CACA;AACA,OAASC,WAAT,KAA4B,mBAA5B,CACA,OAASC,WAAT,CAAsBC,aAAtB,CAAqCC,oBAArC,KAAiE,0BAAjE,CACA;AACA,MAAOC,CAAAA,WAAP,KAAwB,sBAAxB,CACA;AACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,aAA/B,CACA,MAAOC,CAAAA,OAAP,EAAkBC,aAAlB,KAAuC,WAAvC,CAEA;wFAMA,cAAe,SAASC,CAAAA,WAAT,MAAmC,IAAZC,CAAAA,QAAY,MAAZA,QAAY,CAChD,iBAAsCV,WAAW,EAAjD,CAAQW,SAAR,cAAQA,SAAR,CAAmBC,cAAnB,cAAmBA,cAAnB,CACA,GAAMC,CAAAA,OAAO,CAAGF,SAAS,GAAK,OAA9B,CAEA,GAAMG,CAAAA,YAAY,CAAGnB,OAAO,CAC1B,iBAAO,CACLO,OAAO,CAAEW,OAAO,gCAAQX,OAAO,CAACa,KAAhB,MAAuBC,IAAI,CAAE,OAA7B,kCAA8Cd,OAAO,CAACe,IAAtD,MAA4DD,IAAI,CAAE,MAAlE,EADX,CAELf,KAAK,CAALA,KAFK,CAGLE,UAAU,CAAVA,UAHK,CAILC,WAAW,CAAXA,WAJK,CAKLc,SAAS,CAAEN,cALN,CAMLL,OAAO,CAAEM,OAAO,CAAGN,OAAO,CAACQ,KAAX,CAAmBR,OAAO,CAACU,IANtC,CAOLT,aAAa,CAAEK,OAAO,CAAGL,aAAa,CAACO,KAAjB,CAAyBP,aAAa,CAACS,IAPxD,CAAP,EAD0B,CAU1B,CAACJ,OAAD,CAAUD,cAAV,CAV0B,CAA5B,CAaA,GAAMO,CAAAA,KAAK,CAAGtB,WAAW,CAACiB,YAAD,CAAzB,CACAK,KAAK,CAACC,UAAN,CAAmBd,kBAAkB,CAACa,KAAD,CAArC,CAEA,mBACE,KAAC,oBAAD,EAAsB,WAAW,KAAjC,uBACE,MAAC,aAAD,EAAe,KAAK,CAAEA,KAAtB,wBACE,KAAC,WAAD,IADF,cAEE,KAAC,YAAD,IAFF,CAGGT,QAHH,GADF,EADF,CASD","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nimport { useMemo } from 'react';\r\n// material\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport { createTheme, ThemeProvider, StyledEngineProvider } from '@material-ui/core/styles';\r\n// hooks\r\nimport useSettings from '../hooks/useSettings';\r\n//\r\nimport shape from './shape';\r\nimport palette from './palette';\r\nimport typography from './typography';\r\nimport breakpoints from './breakpoints';\r\nimport GlobalStyles from './globalStyles';\r\nimport componentsOverride from './overrides';\r\nimport shadows, { customShadows } from './shadows';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nThemeConfig.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default function ThemeConfig({ children }) {\r\n  const { themeMode, themeDirection } = useSettings();\r\n  const isLight = themeMode === 'light';\r\n\r\n  const themeOptions = useMemo(\r\n    () => ({\r\n      palette: isLight ? { ...palette.light, mode: 'light' } : { ...palette.dark, mode: 'dark' },\r\n      shape,\r\n      typography,\r\n      breakpoints,\r\n      direction: themeDirection,\r\n      shadows: isLight ? shadows.light : shadows.dark,\r\n      customShadows: isLight ? customShadows.light : customShadows.dark\r\n    }),\r\n    [isLight, themeDirection]\r\n  );\r\n\r\n  const theme = createTheme(themeOptions);\r\n  theme.components = componentsOverride(theme);\r\n\r\n  return (\r\n    <StyledEngineProvider injectFirst>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <GlobalStyles />\r\n        {children}\r\n      </ThemeProvider>\r\n    </StyledEngineProvider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}