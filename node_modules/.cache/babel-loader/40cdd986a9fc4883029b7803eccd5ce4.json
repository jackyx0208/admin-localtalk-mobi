{"ast":null,"code":"import _objectSpread from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useRef,useState}from'react';// material\nimport{alpha}from'@material-ui/core/styles';import{Box,MenuItem,ListItemIcon,ListItemText}from'@material-ui/core';// hooks\nimport useLocales from'../../hooks/useLocales';// components\nimport MenuPopover from'../../components/MenuPopover';import{MIconButton}from'../../components/@material-extend';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function LanguagePopover(){var anchorRef=useRef(null);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var _useLocales=useLocales(),allLang=_useLocales.allLang,currentLang=_useLocales.currentLang,onChangeLang=_useLocales.onChangeLang;var handleOpen=function handleOpen(){setOpen(true);};var handleClose=function handleClose(){setOpen(false);};var handleChangeLang=function handleChangeLang(value){onChangeLang(value);handleClose();};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(MIconButton,{ref:anchorRef,onClick:handleOpen,sx:_objectSpread({padding:0,width:44,height:44},open&&{bgcolor:function bgcolor(theme){return alpha(theme.palette.primary.main,theme.palette.action.focusOpacity);}}),children:/*#__PURE__*/_jsx(\"img\",{src:currentLang.icon,alt:currentLang.label})}),/*#__PURE__*/_jsx(MenuPopover,{open:open,onClose:handleClose,anchorEl:anchorRef.current,sx:{py:1},children:allLang.map(function(option){return/*#__PURE__*/_jsxs(MenuItem,{selected:option.value===currentLang.value,onClick:function onClick(){return handleChangeLang(option.value);},sx:{py:1,px:2.5},children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(Box,{component:\"img\",alt:option.label,src:option.icon})}),/*#__PURE__*/_jsx(ListItemText,{primaryTypographyProps:{variant:'body2'},children:option.label})]},option.value);})})]});}","map":{"version":3,"sources":["E:/projects/localtalk.mobi/mobilechat-adminpanel/src/layouts/dashboard/LanguagePopover.js"],"names":["useRef","useState","alpha","Box","MenuItem","ListItemIcon","ListItemText","useLocales","MenuPopover","MIconButton","LanguagePopover","anchorRef","open","setOpen","allLang","currentLang","onChangeLang","handleOpen","handleClose","handleChangeLang","value","padding","width","height","bgcolor","theme","palette","primary","main","action","focusOpacity","icon","label","current","py","map","option","px","variant"],"mappings":"6UAAA,OAASA,MAAT,CAAiBC,QAAjB,KAAiC,OAAjC,CACA;AACA,OAASC,KAAT,KAAsB,0BAAtB,CACA,OAASC,GAAT,CAAcC,QAAd,CAAwBC,YAAxB,CAAsCC,YAAtC,KAA0D,mBAA1D,CACA;AACA,MAAOC,CAAAA,UAAP,KAAuB,wBAAvB,CACA;AACA,MAAOC,CAAAA,WAAP,KAAwB,8BAAxB,CACA,OAASC,WAAT,KAA4B,mCAA5B,CAEA;6IAEA,cAAe,SAASC,CAAAA,eAAT,EAA2B,CACxC,GAAMC,CAAAA,SAAS,CAAGX,MAAM,CAAC,IAAD,CAAxB,CACA,cAAwBC,QAAQ,CAAC,KAAD,CAAhC,wCAAOW,IAAP,eAAaC,OAAb,eACA,gBAA+CN,UAAU,EAAzD,CAAQO,OAAR,aAAQA,OAAR,CAAiBC,WAAjB,aAAiBA,WAAjB,CAA8BC,YAA9B,aAA8BA,YAA9B,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvBJ,OAAO,CAAC,IAAD,CAAP,CACD,CAFD,CAIA,GAAMK,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBL,OAAO,CAAC,KAAD,CAAP,CACD,CAFD,CAIA,GAAMM,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAW,CAClCJ,YAAY,CAACI,KAAD,CAAZ,CACAF,WAAW,GACZ,CAHD,CAKA,mBACE,wCACE,KAAC,WAAD,EACE,GAAG,CAAEP,SADP,CAEE,OAAO,CAAEM,UAFX,CAGE,EAAE,gBACAI,OAAO,CAAE,CADT,CAEAC,KAAK,CAAE,EAFP,CAGAC,MAAM,CAAE,EAHR,EAIIX,IAAI,EAAI,CACVY,OAAO,CAAE,iBAACC,KAAD,QAAWvB,CAAAA,KAAK,CAACuB,KAAK,CAACC,OAAN,CAAcC,OAAd,CAAsBC,IAAvB,CAA6BH,KAAK,CAACC,OAAN,CAAcG,MAAd,CAAqBC,YAAlD,CAAhB,EADC,CAJZ,CAHJ,uBAYE,YAAK,GAAG,CAAEf,WAAW,CAACgB,IAAtB,CAA4B,GAAG,CAAEhB,WAAW,CAACiB,KAA7C,EAZF,EADF,cAgBE,KAAC,WAAD,EAAa,IAAI,CAAEpB,IAAnB,CAAyB,OAAO,CAAEM,WAAlC,CAA+C,QAAQ,CAAEP,SAAS,CAACsB,OAAnE,CAA4E,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAN,CAAhF,UACGpB,OAAO,CAACqB,GAAR,CAAY,SAACC,MAAD,qBACX,MAAC,QAAD,EAEE,QAAQ,CAAEA,MAAM,CAAChB,KAAP,GAAiBL,WAAW,CAACK,KAFzC,CAGE,OAAO,CAAE,yBAAMD,CAAAA,gBAAgB,CAACiB,MAAM,CAAChB,KAAR,CAAtB,EAHX,CAIE,EAAE,CAAE,CAAEc,EAAE,CAAE,CAAN,CAASG,EAAE,CAAE,GAAb,CAJN,wBAME,KAAC,YAAD,wBACE,KAAC,GAAD,EAAK,SAAS,CAAC,KAAf,CAAqB,GAAG,CAAED,MAAM,CAACJ,KAAjC,CAAwC,GAAG,CAAEI,MAAM,CAACL,IAApD,EADF,EANF,cASE,KAAC,YAAD,EAAc,sBAAsB,CAAE,CAAEO,OAAO,CAAE,OAAX,CAAtC,UAA6DF,MAAM,CAACJ,KAApE,EATF,GACOI,MAAM,CAAChB,KADd,CADW,EAAZ,CADH,EAhBF,GADF,CAkCD","sourcesContent":["import { useRef, useState } from 'react';\r\n// material\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport { Box, MenuItem, ListItemIcon, ListItemText } from '@material-ui/core';\r\n// hooks\r\nimport useLocales from '../../hooks/useLocales';\r\n// components\r\nimport MenuPopover from '../../components/MenuPopover';\r\nimport { MIconButton } from '../../components/@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function LanguagePopover() {\r\n  const anchorRef = useRef(null);\r\n  const [open, setOpen] = useState(false);\r\n  const { allLang, currentLang, onChangeLang } = useLocales();\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChangeLang = (value) => {\r\n    onChangeLang(value);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MIconButton\r\n        ref={anchorRef}\r\n        onClick={handleOpen}\r\n        sx={{\r\n          padding: 0,\r\n          width: 44,\r\n          height: 44,\r\n          ...(open && {\r\n            bgcolor: (theme) => alpha(theme.palette.primary.main, theme.palette.action.focusOpacity)\r\n          })\r\n        }}\r\n      >\r\n        <img src={currentLang.icon} alt={currentLang.label} />\r\n      </MIconButton>\r\n\r\n      <MenuPopover open={open} onClose={handleClose} anchorEl={anchorRef.current} sx={{ py: 1 }}>\r\n        {allLang.map((option) => (\r\n          <MenuItem\r\n            key={option.value}\r\n            selected={option.value === currentLang.value}\r\n            onClick={() => handleChangeLang(option.value)}\r\n            sx={{ py: 1, px: 2.5 }}\r\n          >\r\n            <ListItemIcon>\r\n              <Box component=\"img\" alt={option.label} src={option.icon} />\r\n            </ListItemIcon>\r\n            <ListItemText primaryTypographyProps={{ variant: 'body2' }}>{option.label}</ListItemText>\r\n          </MenuItem>\r\n        ))}\r\n      </MenuPopover>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}