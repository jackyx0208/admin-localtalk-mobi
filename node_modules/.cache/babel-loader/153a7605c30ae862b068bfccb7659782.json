{"ast":null,"code":"import _objectSpread from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import*as Yup from'yup';import{useSnackbar}from'notistack5';import{useFormik,Form,FormikProvider}from'formik';// material\nimport{Stack,Card,TextField}from'@material-ui/core';import{LoadingButton}from'@material-ui/lab';// utils\nimport fakeRequest from'../../../../utils/fakeRequest';import axios from'../../../../utils/axios';import useAuth from'../../../../hooks/useAuth';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function AccountChangePassword(){var _useSnackbar=useSnackbar(),enqueueSnackbar=_useSnackbar.enqueueSnackbar;var _useAuth=useAuth(),user=_useAuth.user;var ChangePassWordSchema=Yup.object().shape({oldPassword:Yup.string().required('Old Password is required'),newPassword:Yup.string().min(6,'Password must be at least 6 characters').required('New Password is required'),confirmNewPassword:Yup.string().oneOf([Yup.ref('newPassword'),null],'Passwords must match')});var formik=useFormik({initialValues:{oldPassword:'',newPassword:'',confirmNewPassword:''},validationSchema:ChangePassWordSchema,onSubmit:function(){var _onSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values,_ref){var setSubmitting,resetForm,setErrors,params;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setSubmitting=_ref.setSubmitting,resetForm=_ref.resetForm,setErrors=_ref.setErrors;if(!(values.newPassword!==values.confirmNewPassword)){_context.next=4;break;}enqueueSnackbar('Please confirm new password correctly',{variant:'warning'});return _context.abrupt(\"return\");case 4:_context.next=6;return fakeRequest(500);case 6:params={old_password:values.oldPassword,new_password:values.newPassword};_context.next=9;return axios.post(\"user/change_password/\".concat(user._id),params).then(function(){setSubmitting(false);enqueueSnackbar('Save success',{variant:'success'});}).catch(function(err){setSubmitting(false);enqueueSnackbar(err.data,{variant:'error'});});case 9:case\"end\":return _context.stop();}}},_callee);}));function onSubmit(_x,_x2){return _onSubmit.apply(this,arguments);}return onSubmit;}()});var errors=formik.errors,touched=formik.touched,isSubmitting=formik.isSubmitting,handleSubmit=formik.handleSubmit,getFieldProps=formik.getFieldProps;return/*#__PURE__*/_jsx(Card,{sx:{p:3},children:/*#__PURE__*/_jsx(FormikProvider,{value:formik,children:/*#__PURE__*/_jsx(Form,{autoComplete:\"off\",noValidate:true,onSubmit:handleSubmit,children:/*#__PURE__*/_jsxs(Stack,{spacing:3,alignItems:\"flex-end\",children:[/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},getFieldProps('oldPassword')),{},{fullWidth:true,autoComplete:\"on\"// type=\"password\"\n,label:\"Old Password\",error:Boolean(touched.oldPassword&&errors.oldPassword),helperText:touched.oldPassword&&errors.oldPassword})),/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},getFieldProps('newPassword')),{},{fullWidth:true,autoComplete:\"on\"// type=\"password\"\n,label:\"New Password\",error:Boolean(touched.newPassword&&errors.newPassword),helperText:touched.newPassword&&errors.newPassword||'Password must be minimum 6+'})),/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},getFieldProps('confirmNewPassword')),{},{fullWidth:true,autoComplete:\"on\"// type=\"password\"\n,label:\"Confirm New Password\",error:Boolean(touched.confirmNewPassword&&errors.confirmNewPassword),helperText:touched.confirmNewPassword&&errors.confirmNewPassword})),/*#__PURE__*/_jsx(LoadingButton,{type:\"submit\",variant:\"contained\",loading:isSubmitting,children:\"Save Changes\"})]})})})});}","map":{"version":3,"sources":["E:/projects/localtalk.mobi/mobilechat-adminpanel/src/components/_dashboard/user/account/AccountChangePassword.js"],"names":["Yup","useSnackbar","useFormik","Form","FormikProvider","Stack","Card","TextField","LoadingButton","fakeRequest","axios","useAuth","AccountChangePassword","enqueueSnackbar","user","ChangePassWordSchema","object","shape","oldPassword","string","required","newPassword","min","confirmNewPassword","oneOf","ref","formik","initialValues","validationSchema","onSubmit","values","setSubmitting","resetForm","setErrors","variant","params","old_password","new_password","post","_id","then","catch","err","data","errors","touched","isSubmitting","handleSubmit","getFieldProps","p","Boolean"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\r\nimport { useSnackbar } from 'notistack5';\r\nimport { useFormik, Form, FormikProvider } from 'formik';\r\n// material\r\nimport { Stack, Card, TextField } from '@material-ui/core';\r\nimport { LoadingButton } from '@material-ui/lab';\r\n// utils\r\nimport fakeRequest from '../../../../utils/fakeRequest';\r\nimport axios from '../../../../utils/axios';\r\nimport useAuth from '../../../../hooks/useAuth';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AccountChangePassword() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const { user } = useAuth();\r\n\r\n  const ChangePassWordSchema = Yup.object().shape({\r\n    oldPassword: Yup.string().required('Old Password is required'),\r\n    newPassword: Yup.string().min(6, 'Password must be at least 6 characters').required('New Password is required'),\r\n    confirmNewPassword: Yup.string().oneOf([Yup.ref('newPassword'), null], 'Passwords must match')\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      oldPassword: '',\r\n      newPassword: '',\r\n      confirmNewPassword: ''\r\n    },\r\n    validationSchema: ChangePassWordSchema,\r\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\r\n      if (values.newPassword !== values.confirmNewPassword) {\r\n        enqueueSnackbar('Please confirm new password correctly', { variant: 'warning' });\r\n        return;\r\n      }\r\n      await fakeRequest(500);\r\n      const params = {\r\n        old_password: values.oldPassword,\r\n        new_password: values.newPassword\r\n      };\r\n      await axios\r\n        .post(`user/change_password/${user._id}`, params)\r\n        .then(() => {\r\n          setSubmitting(false);\r\n          enqueueSnackbar('Save success', { variant: 'success' });\r\n        })\r\n        .catch((err) => {\r\n          setSubmitting(false);\r\n          enqueueSnackbar(err.data, { variant: 'error' });\r\n        });\r\n      // alert(JSON.stringify(values, null, 2));\r\n    }\r\n  });\r\n\r\n  const { errors, touched, isSubmitting, handleSubmit, getFieldProps } = formik;\r\n\r\n  return (\r\n    <Card sx={{ p: 3 }}>\r\n      <FormikProvider value={formik}>\r\n        <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n          <Stack spacing={3} alignItems=\"flex-end\">\r\n            <TextField\r\n              {...getFieldProps('oldPassword')}\r\n              fullWidth\r\n              autoComplete=\"on\"\r\n              // type=\"password\"\r\n              label=\"Old Password\"\r\n              error={Boolean(touched.oldPassword && errors.oldPassword)}\r\n              helperText={touched.oldPassword && errors.oldPassword}\r\n            />\r\n\r\n            <TextField\r\n              {...getFieldProps('newPassword')}\r\n              fullWidth\r\n              autoComplete=\"on\"\r\n              // type=\"password\"\r\n              label=\"New Password\"\r\n              error={Boolean(touched.newPassword && errors.newPassword)}\r\n              helperText={(touched.newPassword && errors.newPassword) || 'Password must be minimum 6+'}\r\n            />\r\n\r\n            <TextField\r\n              {...getFieldProps('confirmNewPassword')}\r\n              fullWidth\r\n              autoComplete=\"on\"\r\n              // type=\"password\"\r\n              label=\"Confirm New Password\"\r\n              error={Boolean(touched.confirmNewPassword && errors.confirmNewPassword)}\r\n              helperText={touched.confirmNewPassword && errors.confirmNewPassword}\r\n            />\r\n\r\n            <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n              Save Changes\r\n            </LoadingButton>\r\n          </Stack>\r\n        </Form>\r\n      </FormikProvider>\r\n    </Card>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}