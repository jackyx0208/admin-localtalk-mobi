{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\localtalk.mobi\\\\mobilechat-adminpanel\\\\src\\\\pages\\\\dashboard\\\\UserCreate.js\";\nimport { useEffect } from 'react';\nimport { paramCase } from 'change-case';\nimport { useParams, useLocation } from 'react-router-dom'; // material\n\nimport { Container } from '@material-ui/core'; // redux\n\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getUserList, getSpecialPermssionList } from '../../redux/slices/user'; // routes\n\nimport { PATH_DASHBOARD } from '../../routes/paths'; // hooks\n\nimport useSettings from '../../hooks/useSettings'; // components\n\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport UserNewForm from '../../components/_dashboard/user/UserNewForm';\nimport UserSpecialPermissionsForm from '../../components/_dashboard/user/UserSpecialPermissionsForm'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserCreate() {\n  const {\n    themeStretch\n  } = useSettings();\n  const dispatch = useDispatch();\n  const {\n    pathname\n  } = useLocation();\n  const {\n    userId\n  } = useParams();\n  const {\n    userList,\n    specialPermissionList\n  } = useSelector(state => state.user);\n  const isEdit = pathname.includes('edit');\n  const currentUser = userList.find(user => paramCase(user._id) === userId); // console.log(specialPermissionList);\n\n  const userSpecialPermissions = specialPermissionList.find(specialPermssion => paramCase(specialPermssion.userId) === userId);\n  useEffect(() => {\n    dispatch(getUserList());\n    dispatch(getSpecialPermssionList());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: \"User: Create a new user | Locals\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: themeStretch ? false : 'lg',\n      children: [/*#__PURE__*/_jsxDEV(HeaderBreadcrumbs, {\n        heading: !isEdit ? 'Create a new user' : 'Edit user',\n        links: [{\n          name: 'Dashboard',\n          href: PATH_DASHBOARD.root\n        }, {\n          name: 'User',\n          href: PATH_DASHBOARD.user.list\n        }, {\n          name: !isEdit ? 'New user' : currentUser && currentUser.name || ''\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserNewForm, {\n        isEdit: isEdit,\n        currentUser: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), isEdit && /*#__PURE__*/_jsxDEV(UserSpecialPermissionsForm, {\n        currentUser: currentUser,\n        userSpecialPermissions: userSpecialPermissions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["E:/projects/localtalk.mobi/mobilechat-adminpanel/src/pages/dashboard/UserCreate.js"],"names":["useEffect","paramCase","useParams","useLocation","Container","useDispatch","useSelector","getUserList","getSpecialPermssionList","PATH_DASHBOARD","useSettings","Page","HeaderBreadcrumbs","UserNewForm","UserSpecialPermissionsForm","UserCreate","themeStretch","dispatch","pathname","userId","userList","specialPermissionList","state","user","isEdit","includes","currentUser","find","_id","userSpecialPermissions","specialPermssion","name","href","root","list"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,kBAAvC,C,CACA;;AACA,SAASC,SAAT,QAA0B,mBAA1B,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,mBAAzC;AACA,SAASC,WAAT,EAAsBC,uBAAtB,QAAqD,yBAArD,C,CACA;;AACA,SAASC,cAAT,QAA+B,oBAA/B,C,CACA;;AACA,OAAOC,WAAP,MAAwB,yBAAxB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;AACA,OAAOC,WAAP,MAAwB,8CAAxB;AACA,OAAOC,0BAAP,MAAuC,6DAAvC,C,CAEA;;;AAEA,eAAe,SAASC,UAAT,GAAsB;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAAmBN,WAAW,EAApC;AACA,QAAMO,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAef,WAAW,EAAhC;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAajB,SAAS,EAA5B;AACA,QAAM;AAAEkB,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAsCf,WAAW,CAAEgB,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAvD;AACA,QAAMC,MAAM,GAAGN,QAAQ,CAACO,QAAT,CAAkB,MAAlB,CAAf;AACA,QAAMC,WAAW,GAAGN,QAAQ,CAACO,IAAT,CAAeJ,IAAD,IAAUtB,SAAS,CAACsB,IAAI,CAACK,GAAN,CAAT,KAAwBT,MAAhD,CAApB,CAPmC,CAQnC;;AACA,QAAMU,sBAAsB,GAAGR,qBAAqB,CAACM,IAAtB,CAC5BG,gBAAD,IAAsB7B,SAAS,CAAC6B,gBAAgB,CAACX,MAAlB,CAAT,KAAuCA,MADhC,CAA/B;AAIAnB,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,QAAQ,CAACV,WAAW,EAAZ,CAAR;AACAU,IAAAA,QAAQ,CAACT,uBAAuB,EAAxB,CAAR;AACD,GAHQ,EAGN,CAACS,QAAD,CAHM,CAAT;AAKA,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAC,kCAAZ;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAED,YAAY,GAAG,KAAH,GAAW,IAA5C;AAAA,8BACE,QAAC,iBAAD;AACE,QAAA,OAAO,EAAE,CAACQ,MAAD,GAAU,mBAAV,GAAgC,WAD3C;AAEE,QAAA,KAAK,EAAE,CACL;AAAEO,UAAAA,IAAI,EAAE,WAAR;AAAqBC,UAAAA,IAAI,EAAEvB,cAAc,CAACwB;AAA1C,SADK,EAEL;AAAEF,UAAAA,IAAI,EAAE,MAAR;AAAgBC,UAAAA,IAAI,EAAEvB,cAAc,CAACc,IAAf,CAAoBW;AAA1C,SAFK,EAGL;AAAEH,UAAAA,IAAI,EAAE,CAACP,MAAD,GAAU,UAAV,GAAwBE,WAAW,IAAIA,WAAW,CAACK,IAA5B,IAAqC;AAApE,SAHK;AAFT;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,WAAD;AAAa,QAAA,MAAM,EAAEP,MAArB;AAA6B,QAAA,WAAW,EAAEE;AAA1C;AAAA;AAAA;AAAA;AAAA,cAVF,EAWGF,MAAM,iBACL,QAAC,0BAAD;AAA4B,QAAA,WAAW,EAAEE,WAAzC;AAAsD,QAAA,sBAAsB,EAAEG;AAA9E;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD","sourcesContent":["import { useEffect } from 'react';\r\nimport { paramCase } from 'change-case';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\n// material\r\nimport { Container } from '@material-ui/core';\r\n// redux\r\nimport { useDispatch, useSelector } from '../../redux/store';\r\nimport { getUserList, getSpecialPermssionList } from '../../redux/slices/user';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// hooks\r\nimport useSettings from '../../hooks/useSettings';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\nimport UserNewForm from '../../components/_dashboard/user/UserNewForm';\r\nimport UserSpecialPermissionsForm from '../../components/_dashboard/user/UserSpecialPermissionsForm';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UserCreate() {\r\n  const { themeStretch } = useSettings();\r\n  const dispatch = useDispatch();\r\n  const { pathname } = useLocation();\r\n  const { userId } = useParams();\r\n  const { userList, specialPermissionList } = useSelector((state) => state.user);\r\n  const isEdit = pathname.includes('edit');\r\n  const currentUser = userList.find((user) => paramCase(user._id) === userId);\r\n  // console.log(specialPermissionList);\r\n  const userSpecialPermissions = specialPermissionList.find(\r\n    (specialPermssion) => paramCase(specialPermssion.userId) === userId\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserList());\r\n    dispatch(getSpecialPermssionList());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Page title=\"User: Create a new user | Locals\">\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <HeaderBreadcrumbs\r\n          heading={!isEdit ? 'Create a new user' : 'Edit user'}\r\n          links={[\r\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\r\n            { name: 'User', href: PATH_DASHBOARD.user.list },\r\n            { name: !isEdit ? 'New user' : (currentUser && currentUser.name) || '' }\r\n          ]}\r\n        />\r\n\r\n        <UserNewForm isEdit={isEdit} currentUser={currentUser} />\r\n        {isEdit && (\r\n          <UserSpecialPermissionsForm currentUser={currentUser} userSpecialPermissions={userSpecialPermissions} />\r\n        )}\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}