{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\localtalk.mobi\\\\mobilechat-adminpanel\\\\src\\\\contexts\\\\SettingsContext.js\";\nimport PropTypes from 'prop-types';\nimport { createContext } from 'react'; // hooks\n\nimport useLocalStorage from '../hooks/useLocalStorage'; // theme\n\nimport palette from '../theme/palette'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PRIMARY_COLOR = [// DEFAULT\n{\n  name: 'default',\n  ...palette.light.primary\n}, // PURPLE\n{\n  name: 'purple',\n  lighter: '#EBD6FD',\n  light: '#B985F4',\n  main: '#7635dc',\n  dark: '#431A9E',\n  darker: '#200A69',\n  contrastText: '#fff'\n}, // CYAN\n{\n  name: 'cyan',\n  lighter: '#D1FFFC',\n  light: '#76F2FF',\n  main: '#1CCAFF',\n  dark: '#0E77B7',\n  darker: '#053D7A',\n  contrastText: palette.light.grey[800]\n}, // BLUE\n{\n  name: 'blue',\n  lighter: '#CCDFFF',\n  light: '#6697FF',\n  main: '#0045FF',\n  dark: '#0027B7',\n  darker: '#00137A',\n  contrastText: '#fff'\n}, // ORANGE\n{\n  name: 'orange',\n  lighter: '#FEF4D4',\n  light: '#FED680',\n  main: '#fda92d',\n  dark: '#B66816',\n  darker: '#793908',\n  contrastText: palette.light.grey[800]\n}, // RED\n{\n  name: 'red',\n  lighter: '#FFE3D5',\n  light: '#FFC1AC',\n  main: '#FF3030',\n  dark: '#B71833',\n  darker: '#7A0930',\n  contrastText: '#fff'\n}];\nSetColor.propTypes = {\n  themeColor: PropTypes.oneOf(['default', 'purple', 'cyan', 'blue', 'orange', 'red'])\n};\n\nfunction SetColor(themeColor) {\n  let color;\n  const DEFAULT = PRIMARY_COLOR[0];\n  const PURPLE = PRIMARY_COLOR[1];\n  const CYAN = PRIMARY_COLOR[2];\n  const BLUE = PRIMARY_COLOR[3];\n  const ORANGE = PRIMARY_COLOR[4];\n  const RED = PRIMARY_COLOR[5];\n\n  switch (themeColor) {\n    case 'purple':\n      color = PURPLE;\n      break;\n\n    case 'cyan':\n      color = CYAN;\n      break;\n\n    case 'blue':\n      color = BLUE;\n      break;\n\n    case 'orange':\n      color = ORANGE;\n      break;\n\n    case 'red':\n      color = RED;\n      break;\n\n    default:\n      color = DEFAULT;\n  }\n\n  return color;\n}\n\nconst initialState = {\n  themeMode: 'light',\n  themeDirection: 'ltr',\n  themeColor: 'default',\n  themeStretch: false,\n  onChangeMode: () => {},\n  onChangeDirection: () => {},\n  onChangeColor: () => {},\n  onToggleStretch: () => {},\n  setColor: PRIMARY_COLOR[0],\n  colorOption: []\n};\nconst SettingsContext = /*#__PURE__*/createContext(initialState);\nSettingsProvider.propTypes = {\n  children: PropTypes.node\n};\n\nfunction SettingsProvider({\n  children\n}) {\n  const [settings, setSettings] = useLocalStorage('settings', {\n    themeMode: initialState.themeMode,\n    themeDirection: initialState.themeDirection,\n    themeColor: initialState.themeColor,\n    themeStretch: initialState.themeStretch\n  });\n\n  const onChangeMode = event => {\n    setSettings({ ...settings,\n      themeMode: event.target.value\n    });\n  };\n\n  const onChangeDirection = event => {\n    setSettings({ ...settings,\n      themeDirection: event.target.value\n    });\n  };\n\n  const onChangeColor = event => {\n    setSettings({ ...settings,\n      themeColor: event.target.value\n    });\n  };\n\n  const onToggleStretch = () => {\n    setSettings({ ...settings,\n      themeStretch: !settings.themeStretch\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(SettingsContext.Provider, {\n    value: { ...settings,\n      // Mode\n      onChangeMode,\n      // Direction\n      onChangeDirection,\n      // Color\n      onChangeColor,\n      setColor: SetColor(settings.themeColor),\n      colorOption: PRIMARY_COLOR.map(color => ({\n        name: color.name,\n        value: color.main\n      })),\n      // Stretch\n      onToggleStretch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n\nexport { SettingsProvider, SettingsContext };","map":{"version":3,"sources":["E:/projects/localtalk.mobi/mobilechat-adminpanel/src/contexts/SettingsContext.js"],"names":["PropTypes","createContext","useLocalStorage","palette","PRIMARY_COLOR","name","light","primary","lighter","main","dark","darker","contrastText","grey","SetColor","propTypes","themeColor","oneOf","color","DEFAULT","PURPLE","CYAN","BLUE","ORANGE","RED","initialState","themeMode","themeDirection","themeStretch","onChangeMode","onChangeDirection","onChangeColor","onToggleStretch","setColor","colorOption","SettingsContext","SettingsProvider","children","node","settings","setSettings","event","target","value","map"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { createContext } from 'react';\r\n// hooks\r\nimport useLocalStorage from '../hooks/useLocalStorage';\r\n// theme\r\nimport palette from '../theme/palette';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst PRIMARY_COLOR = [\r\n  // DEFAULT\r\n  {\r\n    name: 'default',\r\n    ...palette.light.primary\r\n  },\r\n  // PURPLE\r\n  {\r\n    name: 'purple',\r\n    lighter: '#EBD6FD',\r\n    light: '#B985F4',\r\n    main: '#7635dc',\r\n    dark: '#431A9E',\r\n    darker: '#200A69',\r\n    contrastText: '#fff'\r\n  },\r\n  // CYAN\r\n  {\r\n    name: 'cyan',\r\n    lighter: '#D1FFFC',\r\n    light: '#76F2FF',\r\n    main: '#1CCAFF',\r\n    dark: '#0E77B7',\r\n    darker: '#053D7A',\r\n    contrastText: palette.light.grey[800]\r\n  },\r\n  // BLUE\r\n  {\r\n    name: 'blue',\r\n    lighter: '#CCDFFF',\r\n    light: '#6697FF',\r\n    main: '#0045FF',\r\n    dark: '#0027B7',\r\n    darker: '#00137A',\r\n    contrastText: '#fff'\r\n  },\r\n  // ORANGE\r\n  {\r\n    name: 'orange',\r\n    lighter: '#FEF4D4',\r\n    light: '#FED680',\r\n    main: '#fda92d',\r\n    dark: '#B66816',\r\n    darker: '#793908',\r\n    contrastText: palette.light.grey[800]\r\n  },\r\n  // RED\r\n  {\r\n    name: 'red',\r\n    lighter: '#FFE3D5',\r\n    light: '#FFC1AC',\r\n    main: '#FF3030',\r\n    dark: '#B71833',\r\n    darker: '#7A0930',\r\n    contrastText: '#fff'\r\n  }\r\n];\r\n\r\nSetColor.propTypes = {\r\n  themeColor: PropTypes.oneOf(['default', 'purple', 'cyan', 'blue', 'orange', 'red'])\r\n};\r\n\r\nfunction SetColor(themeColor) {\r\n  let color;\r\n  const DEFAULT = PRIMARY_COLOR[0];\r\n  const PURPLE = PRIMARY_COLOR[1];\r\n  const CYAN = PRIMARY_COLOR[2];\r\n  const BLUE = PRIMARY_COLOR[3];\r\n  const ORANGE = PRIMARY_COLOR[4];\r\n  const RED = PRIMARY_COLOR[5];\r\n\r\n  switch (themeColor) {\r\n    case 'purple':\r\n      color = PURPLE;\r\n      break;\r\n    case 'cyan':\r\n      color = CYAN;\r\n      break;\r\n    case 'blue':\r\n      color = BLUE;\r\n      break;\r\n    case 'orange':\r\n      color = ORANGE;\r\n      break;\r\n    case 'red':\r\n      color = RED;\r\n      break;\r\n    default:\r\n      color = DEFAULT;\r\n  }\r\n  return color;\r\n}\r\n\r\nconst initialState = {\r\n  themeMode: 'light',\r\n  themeDirection: 'ltr',\r\n  themeColor: 'default',\r\n  themeStretch: false,\r\n  onChangeMode: () => {},\r\n  onChangeDirection: () => {},\r\n  onChangeColor: () => {},\r\n  onToggleStretch: () => {},\r\n  setColor: PRIMARY_COLOR[0],\r\n  colorOption: []\r\n};\r\n\r\nconst SettingsContext = createContext(initialState);\r\n\r\nSettingsProvider.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nfunction SettingsProvider({ children }) {\r\n  const [settings, setSettings] = useLocalStorage('settings', {\r\n    themeMode: initialState.themeMode,\r\n    themeDirection: initialState.themeDirection,\r\n    themeColor: initialState.themeColor,\r\n    themeStretch: initialState.themeStretch\r\n  });\r\n\r\n  const onChangeMode = (event) => {\r\n    setSettings({\r\n      ...settings,\r\n      themeMode: event.target.value\r\n    });\r\n  };\r\n\r\n  const onChangeDirection = (event) => {\r\n    setSettings({\r\n      ...settings,\r\n      themeDirection: event.target.value\r\n    });\r\n  };\r\n\r\n  const onChangeColor = (event) => {\r\n    setSettings({\r\n      ...settings,\r\n      themeColor: event.target.value\r\n    });\r\n  };\r\n\r\n  const onToggleStretch = () => {\r\n    setSettings({\r\n      ...settings,\r\n      themeStretch: !settings.themeStretch\r\n    });\r\n  };\r\n\r\n  return (\r\n    <SettingsContext.Provider\r\n      value={{\r\n        ...settings,\r\n        // Mode\r\n        onChangeMode,\r\n        // Direction\r\n        onChangeDirection,\r\n        // Color\r\n        onChangeColor,\r\n        setColor: SetColor(settings.themeColor),\r\n        colorOption: PRIMARY_COLOR.map((color) => ({\r\n          name: color.name,\r\n          value: color.main\r\n        })),\r\n        // Stretch\r\n        onToggleStretch\r\n      }}\r\n    >\r\n      {children}\r\n    </SettingsContext.Provider>\r\n  );\r\n}\r\n\r\nexport { SettingsProvider, SettingsContext };\r\n"]},"metadata":{},"sourceType":"module"}