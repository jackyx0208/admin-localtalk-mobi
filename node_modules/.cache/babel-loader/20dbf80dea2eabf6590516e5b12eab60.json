{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\localtalk.mobi(back)\\\\pro\\\\toptalk-adminpanel\\\\src\\\\contexts\\\\CollapseDrawerContext.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { createContext, useState, useEffect } from 'react'; // material\n\nimport { useMediaQuery } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  collapseClick: false,\n  collapseHover: false,\n  onToggleCollapse: () => {},\n  onHoverEnter: () => {},\n  onHoverLeave: () => {}\n};\nconst CollapseDrawerContext = /*#__PURE__*/createContext(initialState);\nCollapseDrawerProvider.propTypes = {\n  children: PropTypes.node\n};\n\nfunction CollapseDrawerProvider({\n  children\n}) {\n  _s();\n\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('lg'));\n  const [collapse, setCollapse] = useState({\n    click: false,\n    hover: false\n  });\n  useEffect(() => {\n    if (isMobile) {\n      setCollapse({\n        click: false,\n        hover: false\n      });\n    }\n  }, [isMobile]);\n\n  const handleToggleCollapse = () => {\n    setCollapse({ ...collapse,\n      click: !collapse.click\n    });\n  };\n\n  const handleHoverEnter = () => {\n    if (collapse.click) {\n      setCollapse({ ...collapse,\n        hover: true\n      });\n    }\n  };\n\n  const handleHoverLeave = () => {\n    setCollapse({ ...collapse,\n      hover: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(CollapseDrawerContext.Provider, {\n    value: {\n      isCollapse: collapse.click && !collapse.hover,\n      collapseClick: collapse.click,\n      collapseHover: collapse.hover,\n      onToggleCollapse: handleToggleCollapse,\n      onHoverEnter: handleHoverEnter,\n      onHoverLeave: handleHoverLeave\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CollapseDrawerProvider, \"uPc6ewVE3u4rp7kPYkBzM7f81Hw=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n\n_c = CollapseDrawerProvider;\nexport { CollapseDrawerProvider, CollapseDrawerContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"CollapseDrawerProvider\");","map":{"version":3,"sources":["E:/projects/localtalk.mobi(back)/pro/toptalk-adminpanel/src/contexts/CollapseDrawerContext.js"],"names":["PropTypes","createContext","useState","useEffect","useMediaQuery","useTheme","initialState","collapseClick","collapseHover","onToggleCollapse","onHoverEnter","onHoverLeave","CollapseDrawerContext","CollapseDrawerProvider","propTypes","children","node","theme","isMobile","breakpoints","down","collapse","setCollapse","click","hover","handleToggleCollapse","handleHoverEnter","handleHoverLeave","isCollapse"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD,C,CACA;;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,QAAT,QAAyB,0BAAzB,C,CAEA;;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,KADI;AAEnBC,EAAAA,aAAa,EAAE,KAFI;AAGnBC,EAAAA,gBAAgB,EAAE,MAAM,CAAE,CAHP;AAInBC,EAAAA,YAAY,EAAE,MAAM,CAAE,CAJH;AAKnBC,EAAAA,YAAY,EAAE,MAAM,CAAE;AALH,CAArB;AAQA,MAAMC,qBAAqB,gBAAGX,aAAa,CAACK,YAAD,CAA3C;AAEAO,sBAAsB,CAACC,SAAvB,GAAmC;AACjCC,EAAAA,QAAQ,EAAEf,SAAS,CAACgB;AADa,CAAnC;;AAIA,SAASH,sBAAT,CAAgC;AAAEE,EAAAA;AAAF,CAAhC,EAA8C;AAAA;;AAC5C,QAAME,KAAK,GAAGZ,QAAQ,EAAtB;AACA,QAAMa,QAAQ,GAAGd,aAAa,CAACa,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,CAA9B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC;AACvCqB,IAAAA,KAAK,EAAE,KADgC;AAEvCC,IAAAA,KAAK,EAAE;AAFgC,GAAD,CAAxC;AAKArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,QAAJ,EAAc;AACZI,MAAAA,WAAW,CAAC;AACVC,QAAAA,KAAK,EAAE,KADG;AAEVC,QAAAA,KAAK,EAAE;AAFG,OAAD,CAAX;AAID;AACF,GAPQ,EAON,CAACN,QAAD,CAPM,CAAT;;AASA,QAAMO,oBAAoB,GAAG,MAAM;AACjCH,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeE,MAAAA,KAAK,EAAE,CAACF,QAAQ,CAACE;AAAhC,KAAD,CAAX;AACD,GAFD;;AAIA,QAAMG,gBAAgB,GAAG,MAAM;AAC7B,QAAIL,QAAQ,CAACE,KAAb,EAAoB;AAClBD,MAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeG,QAAAA,KAAK,EAAE;AAAtB,OAAD,CAAX;AACD;AACF,GAJD;;AAMA,QAAMG,gBAAgB,GAAG,MAAM;AAC7BL,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeG,MAAAA,KAAK,EAAE;AAAtB,KAAD,CAAX;AACD,GAFD;;AAIA,sBACE,QAAC,qBAAD,CAAuB,QAAvB;AACE,IAAA,KAAK,EAAE;AACLI,MAAAA,UAAU,EAAEP,QAAQ,CAACE,KAAT,IAAkB,CAACF,QAAQ,CAACG,KADnC;AAELjB,MAAAA,aAAa,EAAEc,QAAQ,CAACE,KAFnB;AAGLf,MAAAA,aAAa,EAAEa,QAAQ,CAACG,KAHnB;AAILf,MAAAA,gBAAgB,EAAEgB,oBAJb;AAKLf,MAAAA,YAAY,EAAEgB,gBALT;AAMLf,MAAAA,YAAY,EAAEgB;AANT,KADT;AAAA,cAUGZ;AAVH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA7CQF,sB;UACOR,Q,EACGD,a;;;KAFVS,sB;AA+CT,SAASA,sBAAT,EAAiCD,qBAAjC","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { createContext, useState, useEffect } from 'react';\r\n// material\r\nimport { useMediaQuery } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst initialState = {\r\n  collapseClick: false,\r\n  collapseHover: false,\r\n  onToggleCollapse: () => {},\r\n  onHoverEnter: () => {},\r\n  onHoverLeave: () => {}\r\n};\r\n\r\nconst CollapseDrawerContext = createContext(initialState);\r\n\r\nCollapseDrawerProvider.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nfunction CollapseDrawerProvider({ children }) {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('lg'));\r\n  const [collapse, setCollapse] = useState({\r\n    click: false,\r\n    hover: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isMobile) {\r\n      setCollapse({\r\n        click: false,\r\n        hover: false\r\n      });\r\n    }\r\n  }, [isMobile]);\r\n\r\n  const handleToggleCollapse = () => {\r\n    setCollapse({ ...collapse, click: !collapse.click });\r\n  };\r\n\r\n  const handleHoverEnter = () => {\r\n    if (collapse.click) {\r\n      setCollapse({ ...collapse, hover: true });\r\n    }\r\n  };\r\n\r\n  const handleHoverLeave = () => {\r\n    setCollapse({ ...collapse, hover: false });\r\n  };\r\n\r\n  return (\r\n    <CollapseDrawerContext.Provider\r\n      value={{\r\n        isCollapse: collapse.click && !collapse.hover,\r\n        collapseClick: collapse.click,\r\n        collapseHover: collapse.hover,\r\n        onToggleCollapse: handleToggleCollapse,\r\n        onHoverEnter: handleHoverEnter,\r\n        onHoverLeave: handleHoverLeave\r\n      }}\r\n    >\r\n      {children}\r\n    </CollapseDrawerContext.Provider>\r\n  );\r\n}\r\n\r\nexport { CollapseDrawerProvider, CollapseDrawerContext };\r\n"]},"metadata":{},"sourceType":"module"}