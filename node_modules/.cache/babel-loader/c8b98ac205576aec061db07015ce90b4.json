{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\localtalk.mobi(back)\\\\pro\\\\toptalk-adminpanel\\\\src\\\\components\\\\EmojiPicker.js\",\n    _s = $RefreshSig$();\n\nimport 'emoji-mart/css/emoji-mart.css';\nimport PropTypes from 'prop-types';\nimport { Picker } from 'emoji-mart';\nimport { Icon } from '@iconify/react';\nimport { useState } from 'react';\nimport smilingFaceFill from '@iconify/icons-eva/smiling-face-fill'; // material\n\nimport { alpha, useTheme, styled } from '@material-ui/core/styles';\nimport { IconButton, ClickAwayListener } from '@material-ui/core'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RootStyle = styled('div')({\n  position: 'relative'\n});\nconst PickerStyle = styled('div')(({\n  theme\n}) => ({\n  bottom: 40,\n  overflow: 'hidden',\n  position: 'absolute',\n  left: theme.spacing(-2),\n  boxShadow: theme.customShadows.z20,\n  borderRadius: theme.shape.borderRadiusMd,\n  '& .emoji-mart': {\n    border: 'none',\n    backgroundColor: theme.palette.background.paper\n  },\n  '& .emoji-mart-anchor': {\n    color: theme.palette.text.disabled,\n    '&:hover, &:focus, &.emoji-mart-anchor-selected': {\n      color: theme.palette.text.primary\n    }\n  },\n  '& .emoji-mart-bar': {\n    borderColor: theme.palette.divider\n  },\n  '& .emoji-mart-search input': {\n    backgroundColor: 'transparent',\n    color: theme.palette.text.primary,\n    borderColor: theme.palette.grey[50032],\n    '&::placeholder': { ...theme.typography.body2,\n      color: theme.palette.text.disabled\n    }\n  },\n  '& .emoji-mart-search-icon svg': {\n    opacity: 1,\n    fill: theme.palette.text.disabled\n  },\n  '& .emoji-mart-category-label span': { ...theme.typography.subtitle2,\n    backdropFilter: 'blur(8px)',\n    WebkitBackdropFilter: 'blur(8px)',\n    // Fix on Mobile\n    color: theme.palette.text.primary,\n    backgroundColor: alpha(theme.palette.background.paper, 0.8)\n  },\n  '& .emoji-mart-title-label': {\n    color: theme.palette.text.primary\n  },\n  '& .emoji-mart-category .emoji-mart-emoji:hover:before': {\n    backgroundColor: theme.palette.action.selected\n  },\n  '& .emoji-mart-emoji': {\n    outline: 'none'\n  },\n  '& .emoji-mart-preview-name': {\n    color: theme.palette.text.primary\n  },\n  '& .emoji-mart-preview-shortname, .emoji-mart-preview-emoticon': {\n    color: theme.palette.text.secondary\n  }\n})); // ----------------------------------------------------------------------\n\nEmojiPicker.propTypes = {\n  disabled: PropTypes.bool,\n  value: PropTypes.string,\n  setValue: PropTypes.func,\n  alignRight: PropTypes.bool\n};\nexport default function EmojiPicker({\n  disabled,\n  value,\n  setValue,\n  alignRight = false,\n  ...other\n}) {\n  _s();\n\n  const theme = useTheme();\n  const [emojiPickerState, SetEmojiPicker] = useState(false);\n  let emojiPicker;\n\n  if (emojiPickerState) {\n    emojiPicker = /*#__PURE__*/_jsxDEV(Picker, {\n      color: theme.palette.primary.main,\n      title: \"Pick your emoji\\u2026\",\n      emoji: \"point_up\",\n      onSelect: emoji => setValue(value + emoji.native)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n  const triggerPicker = e => {\n    e.preventDefault();\n    SetEmojiPicker(!emojiPickerState);\n  };\n\n  const handleClickAway = () => {\n    SetEmojiPicker(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n    onClickAway: handleClickAway,\n    children: /*#__PURE__*/_jsxDEV(RootStyle, { ...other,\n      children: [/*#__PURE__*/_jsxDEV(PickerStyle, {\n        sx: { ...(alignRight && {\n            right: -2,\n            left: 'auto !important'\n          })\n        },\n        children: emojiPicker\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        disabled: disabled,\n        size: \"small\",\n        onClick: triggerPicker,\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          icon: smilingFaceFill,\n          width: 20,\n          height: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EmojiPicker, \"j+ATOEM5NDLSh/nHibOpju9CgTk=\", false, function () {\n  return [useTheme];\n});\n\n_c = EmojiPicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmojiPicker\");","map":{"version":3,"sources":["E:/projects/localtalk.mobi(back)/pro/toptalk-adminpanel/src/components/EmojiPicker.js"],"names":["PropTypes","Picker","Icon","useState","smilingFaceFill","alpha","useTheme","styled","IconButton","ClickAwayListener","RootStyle","position","PickerStyle","theme","bottom","overflow","left","spacing","boxShadow","customShadows","z20","borderRadius","shape","borderRadiusMd","border","backgroundColor","palette","background","paper","color","text","disabled","primary","borderColor","divider","grey","typography","body2","opacity","fill","subtitle2","backdropFilter","WebkitBackdropFilter","action","selected","outline","secondary","EmojiPicker","propTypes","bool","value","string","setValue","func","alignRight","other","emojiPickerState","SetEmojiPicker","emojiPicker","main","emoji","native","triggerPicker","e","preventDefault","handleClickAway","right"],"mappings":";;;AAAA,OAAO,+BAAP;AACA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,eAAP,MAA4B,sCAA5B,C,CACA;;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,0BAAxC;AACA,SAASC,UAAT,EAAqBC,iBAArB,QAA8C,mBAA9C,C,CAEA;;;AAEA,MAAMC,SAAS,GAAGH,MAAM,CAAC,KAAD,CAAN,CAAc;AAC9BI,EAAAA,QAAQ,EAAE;AADoB,CAAd,CAAlB;AAIA,MAAMC,WAAW,GAAGL,MAAM,CAAC,KAAD,CAAN,CAAc,CAAC;AAAEM,EAAAA;AAAF,CAAD,MAAgB;AAChDC,EAAAA,MAAM,EAAE,EADwC;AAEhDC,EAAAA,QAAQ,EAAE,QAFsC;AAGhDJ,EAAAA,QAAQ,EAAE,UAHsC;AAIhDK,EAAAA,IAAI,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAC,CAAf,CAJ0C;AAKhDC,EAAAA,SAAS,EAAEL,KAAK,CAACM,aAAN,CAAoBC,GALiB;AAMhDC,EAAAA,YAAY,EAAER,KAAK,CAACS,KAAN,CAAYC,cANsB;AAOhD,mBAAiB;AACfC,IAAAA,MAAM,EAAE,MADO;AAEfC,IAAAA,eAAe,EAAEZ,KAAK,CAACa,OAAN,CAAcC,UAAd,CAAyBC;AAF3B,GAP+B;AAWhD,0BAAwB;AACtBC,IAAAA,KAAK,EAAEhB,KAAK,CAACa,OAAN,CAAcI,IAAd,CAAmBC,QADJ;AAEtB,sDAAkD;AAChDF,MAAAA,KAAK,EAAEhB,KAAK,CAACa,OAAN,CAAcI,IAAd,CAAmBE;AADsB;AAF5B,GAXwB;AAiBhD,uBAAqB;AAAEC,IAAAA,WAAW,EAAEpB,KAAK,CAACa,OAAN,CAAcQ;AAA7B,GAjB2B;AAkBhD,gCAA8B;AAC5BT,IAAAA,eAAe,EAAE,aADW;AAE5BI,IAAAA,KAAK,EAAEhB,KAAK,CAACa,OAAN,CAAcI,IAAd,CAAmBE,OAFE;AAG5BC,IAAAA,WAAW,EAAEpB,KAAK,CAACa,OAAN,CAAcS,IAAd,CAAmB,KAAnB,CAHe;AAI5B,sBAAkB,EAChB,GAAGtB,KAAK,CAACuB,UAAN,CAAiBC,KADJ;AAEhBR,MAAAA,KAAK,EAAEhB,KAAK,CAACa,OAAN,CAAcI,IAAd,CAAmBC;AAFV;AAJU,GAlBkB;AA2BhD,mCAAiC;AAC/BO,IAAAA,OAAO,EAAE,CADsB;AAE/BC,IAAAA,IAAI,EAAE1B,KAAK,CAACa,OAAN,CAAcI,IAAd,CAAmBC;AAFM,GA3Be;AA+BhD,uCAAqC,EACnC,GAAGlB,KAAK,CAACuB,UAAN,CAAiBI,SADe;AAEnCC,IAAAA,cAAc,EAAE,WAFmB;AAGnCC,IAAAA,oBAAoB,EAAE,WAHa;AAGA;AACnCb,IAAAA,KAAK,EAAEhB,KAAK,CAACa,OAAN,CAAcI,IAAd,CAAmBE,OAJS;AAKnCP,IAAAA,eAAe,EAAEpB,KAAK,CAACQ,KAAK,CAACa,OAAN,CAAcC,UAAd,CAAyBC,KAA1B,EAAiC,GAAjC;AALa,GA/BW;AAsChD,+BAA6B;AAAEC,IAAAA,KAAK,EAAEhB,KAAK,CAACa,OAAN,CAAcI,IAAd,CAAmBE;AAA5B,GAtCmB;AAuChD,2DAAyD;AACvDP,IAAAA,eAAe,EAAEZ,KAAK,CAACa,OAAN,CAAciB,MAAd,CAAqBC;AADiB,GAvCT;AA0ChD,yBAAuB;AAAEC,IAAAA,OAAO,EAAE;AAAX,GA1CyB;AA2ChD,gCAA8B;AAC5BhB,IAAAA,KAAK,EAAEhB,KAAK,CAACa,OAAN,CAAcI,IAAd,CAAmBE;AADE,GA3CkB;AA8ChD,mEAAiE;AAC/DH,IAAAA,KAAK,EAAEhB,KAAK,CAACa,OAAN,CAAcI,IAAd,CAAmBgB;AADqC;AA9CjB,CAAhB,CAAd,CAApB,C,CAmDA;;AAEAC,WAAW,CAACC,SAAZ,GAAwB;AACtBjB,EAAAA,QAAQ,EAAE/B,SAAS,CAACiD,IADE;AAEtBC,EAAAA,KAAK,EAAElD,SAAS,CAACmD,MAFK;AAGtBC,EAAAA,QAAQ,EAAEpD,SAAS,CAACqD,IAHE;AAItBC,EAAAA,UAAU,EAAEtD,SAAS,CAACiD;AAJA,CAAxB;AAOA,eAAe,SAASF,WAAT,CAAqB;AAAEhB,EAAAA,QAAF;AAAYmB,EAAAA,KAAZ;AAAmBE,EAAAA,QAAnB;AAA6BE,EAAAA,UAAU,GAAG,KAA1C;AAAiD,KAAGC;AAApD,CAArB,EAAkF;AAAA;;AAC/F,QAAM1C,KAAK,GAAGP,QAAQ,EAAtB;AACA,QAAM,CAACkD,gBAAD,EAAmBC,cAAnB,IAAqCtD,QAAQ,CAAC,KAAD,CAAnD;AAEA,MAAIuD,WAAJ;;AACA,MAAIF,gBAAJ,EAAsB;AACpBE,IAAAA,WAAW,gBACT,QAAC,MAAD;AACE,MAAA,KAAK,EAAE7C,KAAK,CAACa,OAAN,CAAcM,OAAd,CAAsB2B,IAD/B;AAEE,MAAA,KAAK,EAAC,uBAFR;AAGE,MAAA,KAAK,EAAC,UAHR;AAIE,MAAA,QAAQ,EAAGC,KAAD,IAAWR,QAAQ,CAACF,KAAK,GAAGU,KAAK,CAACC,MAAf;AAJ/B;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAED,QAAMC,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,cAAc,CAAC,CAACD,gBAAF,CAAd;AACD,GAHD;;AAKA,QAAMS,eAAe,GAAG,MAAM;AAC5BR,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAFD;;AAIA,sBACE,QAAC,iBAAD;AAAmB,IAAA,WAAW,EAAEQ,eAAhC;AAAA,2BACE,QAAC,SAAD,OAAeV,KAAf;AAAA,8BACE,QAAC,WAAD;AACE,QAAA,EAAE,EAAE,EACF,IAAID,UAAU,IAAI;AAChBY,YAAAA,KAAK,EAAE,CAAC,CADQ;AAEhBlD,YAAAA,IAAI,EAAE;AAFU,WAAlB;AADE,SADN;AAAA,kBAQG0C;AARH;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAE3B,QAAtB;AAAgC,QAAA,IAAI,EAAC,OAArC;AAA6C,QAAA,OAAO,EAAE+B,aAAtD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAE1D,eAAZ;AAA6B,UAAA,KAAK,EAAE,EAApC;AAAwC,UAAA,MAAM,EAAE;AAAhD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA5CuB2C,W;UACRzC,Q;;;KADQyC,W","sourcesContent":["import 'emoji-mart/css/emoji-mart.css';\r\nimport PropTypes from 'prop-types';\r\nimport { Picker } from 'emoji-mart';\r\nimport { Icon } from '@iconify/react';\r\nimport { useState } from 'react';\r\nimport smilingFaceFill from '@iconify/icons-eva/smiling-face-fill';\r\n// material\r\nimport { alpha, useTheme, styled } from '@material-ui/core/styles';\r\nimport { IconButton, ClickAwayListener } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')({\r\n  position: 'relative'\r\n});\r\n\r\nconst PickerStyle = styled('div')(({ theme }) => ({\r\n  bottom: 40,\r\n  overflow: 'hidden',\r\n  position: 'absolute',\r\n  left: theme.spacing(-2),\r\n  boxShadow: theme.customShadows.z20,\r\n  borderRadius: theme.shape.borderRadiusMd,\r\n  '& .emoji-mart': {\r\n    border: 'none',\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  '& .emoji-mart-anchor': {\r\n    color: theme.palette.text.disabled,\r\n    '&:hover, &:focus, &.emoji-mart-anchor-selected': {\r\n      color: theme.palette.text.primary\r\n    }\r\n  },\r\n  '& .emoji-mart-bar': { borderColor: theme.palette.divider },\r\n  '& .emoji-mart-search input': {\r\n    backgroundColor: 'transparent',\r\n    color: theme.palette.text.primary,\r\n    borderColor: theme.palette.grey[500_32],\r\n    '&::placeholder': {\r\n      ...theme.typography.body2,\r\n      color: theme.palette.text.disabled\r\n    }\r\n  },\r\n  '& .emoji-mart-search-icon svg': {\r\n    opacity: 1,\r\n    fill: theme.palette.text.disabled\r\n  },\r\n  '& .emoji-mart-category-label span': {\r\n    ...theme.typography.subtitle2,\r\n    backdropFilter: 'blur(8px)',\r\n    WebkitBackdropFilter: 'blur(8px)', // Fix on Mobile\r\n    color: theme.palette.text.primary,\r\n    backgroundColor: alpha(theme.palette.background.paper, 0.8)\r\n  },\r\n  '& .emoji-mart-title-label': { color: theme.palette.text.primary },\r\n  '& .emoji-mart-category .emoji-mart-emoji:hover:before': {\r\n    backgroundColor: theme.palette.action.selected\r\n  },\r\n  '& .emoji-mart-emoji': { outline: 'none' },\r\n  '& .emoji-mart-preview-name': {\r\n    color: theme.palette.text.primary\r\n  },\r\n  '& .emoji-mart-preview-shortname, .emoji-mart-preview-emoticon': {\r\n    color: theme.palette.text.secondary\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nEmojiPicker.propTypes = {\r\n  disabled: PropTypes.bool,\r\n  value: PropTypes.string,\r\n  setValue: PropTypes.func,\r\n  alignRight: PropTypes.bool\r\n};\r\n\r\nexport default function EmojiPicker({ disabled, value, setValue, alignRight = false, ...other }) {\r\n  const theme = useTheme();\r\n  const [emojiPickerState, SetEmojiPicker] = useState(false);\r\n\r\n  let emojiPicker;\r\n  if (emojiPickerState) {\r\n    emojiPicker = (\r\n      <Picker\r\n        color={theme.palette.primary.main}\r\n        title=\"Pick your emoji…\"\r\n        emoji=\"point_up\"\r\n        onSelect={(emoji) => setValue(value + emoji.native)}\r\n      />\r\n    );\r\n  }\r\n\r\n  const triggerPicker = (e) => {\r\n    e.preventDefault();\r\n    SetEmojiPicker(!emojiPickerState);\r\n  };\r\n\r\n  const handleClickAway = () => {\r\n    SetEmojiPicker(false);\r\n  };\r\n\r\n  return (\r\n    <ClickAwayListener onClickAway={handleClickAway}>\r\n      <RootStyle {...other}>\r\n        <PickerStyle\r\n          sx={{\r\n            ...(alignRight && {\r\n              right: -2,\r\n              left: 'auto !important'\r\n            })\r\n          }}\r\n        >\r\n          {emojiPicker}\r\n        </PickerStyle>\r\n        <IconButton disabled={disabled} size=\"small\" onClick={triggerPicker}>\r\n          <Icon icon={smilingFaceFill} width={20} height={20} />\r\n        </IconButton>\r\n      </RootStyle>\r\n    </ClickAwayListener>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}