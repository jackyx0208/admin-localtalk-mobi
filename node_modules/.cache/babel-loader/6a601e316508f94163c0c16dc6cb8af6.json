{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\localtalk.mobi\\\\mobilechat-adminpanel\\\\src\\\\pages\\\\dashboard\\\\UserList.js\";\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase, paramCase } from 'change-case';\nimport { useState, useEffect } from 'react';\nimport { useSnackbar } from 'notistack5';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom'; // material\n\nimport { useTheme } from '@material-ui/core/styles';\nimport { Card, Table, Stack, Avatar, Button, Checkbox, TableRow, TableBody, TableCell, Container, Typography, TableContainer, TablePagination, Dialog, DialogTitle, DialogContent, DialogActions, Box, IconButton } from '@material-ui/core';\nimport { Close } from '@material-ui/icons';\nimport axios from '../../utils/axios'; // redux\n\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getUserList, deleteUser, getSpecialPermssionList } from '../../redux/slices/user';\nimport { getSettingsList } from '../../redux/slices/settings'; // routes\n\nimport { PATH_DASHBOARD } from '../../routes/paths'; // hooks\n\nimport useSettings from '../../hooks/useSettings';\nimport useAuth from '../../hooks/useAuth'; // components\n\nimport Page from '../../components/Page';\nimport Label from '../../components/Label';\nimport Scrollbar from '../../components/Scrollbar';\nimport SearchNotFound from '../../components/SearchNotFound';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport { UserListHead, UserListToolbar, UserMoreMenu } from '../../components/_dashboard/user/list';\nimport ConfirmDialog from '../../components/ConfirmDialog';\nimport { serverConfig } from '../../config'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TABLE_HEAD = [{\n  id: 'email',\n  label: 'Account(Email)',\n  alignRight: false\n}, {\n  id: 'name',\n  label: 'Nickname',\n  alignRight: false\n}, {\n  id: 'role',\n  label: 'Role',\n  alignRight: false\n}, {\n  id: 'credit',\n  label: 'Credit',\n  alignRight: false\n}, {\n  id: 'balance',\n  label: 'Balance',\n  alignRight: false\n}, {\n  id: 'status',\n  label: 'Status',\n  alignRight: false\n}, {\n  id: 'max_coverage',\n  label: 'Max Coverage',\n  alignRight: false\n}, {\n  id: 'country',\n  label: 'Location',\n  alignRight: false\n}, {\n  id: 'operation',\n  label: 'Operation',\n  alignRight: false\n}]; // ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n\n  if (query) {\n    array = stabilizedThis.map(el => el[0]);\n    return filter(array, _user => {\n      if (query.filterName && _user.name.toLowerCase().indexOf(query.filterName.toLowerCase()) === -1) {\n        return false;\n      }\n\n      if (query.filterEmail && _user.email.toLowerCase().indexOf(query.filterEmail.toLowerCase()) === -1) {\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  return stabilizedThis.map(el => el[0]);\n}\n\nexport default function UserList() {\n  const {\n    themeStretch\n  } = useSettings();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const {\n    user,\n    logout\n  } = useAuth();\n  const {\n    userList,\n    specialPermissionList\n  } = useSelector(state => state.user);\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('role');\n  const [filterName, setFilterName] = useState('');\n  const [filterEmail, setFilterEmail] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(localStorage.getItem('userlist_rows_per_page') ? Number(localStorage.getItem('userlist_rows_per_page')) : 25);\n  const [openDeleteConfirm, setOpenDeleteConfirm] = useState(false);\n  const [handleUserId, setHandleUserId] = useState(null);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    settingsList\n  } = useSelector(state => state.setting);\n  const parameterSettings = settingsList.find(settingRow => settingRow.type === 'parameter');\n  useEffect(() => {\n    dispatch(getUserList());\n    dispatch(getSpecialPermssionList());\n    dispatch(getSettingsList());\n  }, [dispatch]);\n\n  const handleCloseDeleteConfirm = () => {\n    setOpenDeleteConfirm(false);\n  };\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = userList.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    localStorage.setItem('userlist_rows_per_page', parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = event => {\n    setFilterName(event.target.value);\n  };\n\n  const handleFilterByEmail = event => {\n    setFilterEmail(event.target.value);\n  };\n\n  const onDeleteUser = async userId => {\n    if (userId !== user._id) {\n      setHandleUserId(userId);\n      setOpenDeleteConfirm(true);\n    } else {\n      enqueueSnackbar(\"You can't delete this user you logged in\", {\n        variant: 'warning'\n      });\n    }\n  };\n\n  const handleDeleteUser = async userId => {\n    if (userId !== user._id) {\n      dispatch(deleteUser(userId));\n      await axios.delete(`user/delete/${userId}`);\n      setHandleUserId(null);\n    }\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - userList.length) : 0;\n  const filteredUsers = applySortFilter(userList, getComparator(order, orderBy), {\n    filterName,\n    filterEmail\n  });\n  const isUserNotFound = filteredUsers.length === 0;\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: \"User: List | Locals\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: themeStretch ? false : 'lg',\n      children: [/*#__PURE__*/_jsxDEV(HeaderBreadcrumbs, {\n        heading: \"User List\",\n        links: [{\n          name: 'Dashboard',\n          href: PATH_DASHBOARD.root\n        }, {\n          name: 'User',\n          href: PATH_DASHBOARD.user.root\n        }, {\n          name: 'List'\n        }],\n        action: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          component: RouterLink,\n          to: PATH_DASHBOARD.user.newUser,\n          startIcon: /*#__PURE__*/_jsxDEV(Icon, {\n            icon: plusFill\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 26\n          }, this),\n          children: \"New User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(UserListToolbar, {\n          numSelected: selected.length,\n          filterName: filterName,\n          onFilterName: handleFilterByName,\n          filterEmail: filterEmail,\n          onFilterEmail: handleFilterByEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Scrollbar, {\n          children: /*#__PURE__*/_jsxDEV(TableContainer, {\n            sx: {\n              minWidth: 800\n            },\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(UserListHead, {\n                order: order,\n                orderBy: orderBy,\n                headLabel: TABLE_HEAD,\n                rowCount: userList.length,\n                numSelected: selected.length,\n                onRequestSort: handleRequestSort,\n                onSelectAllClick: handleSelectAllClick\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: [filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n                  const {\n                    _id,\n                    email,\n                    name,\n                    avatarUrl,\n                    role,\n                    credit,\n                    balanceCurrency,\n                    balance,\n                    status,\n                    isVerified,\n                    address,\n                    coverage,\n                    country,\n                    online\n                  } = row;\n                  const userSpecialPermissions = specialPermissionList.find(specialPermssion => specialPermssion.userId && paramCase(specialPermssion.userId) === _id);\n                  const displayRole = (role === 'user' || role === 's-user') && userSpecialPermissions ? 's-user' : role;\n                  const isItemSelected = selected.indexOf(name) !== -1;\n                  const avatarImgSrc = `${serverConfig.baseUrl}/user/img-src/${avatarUrl}`;\n                  const displayMaxCoverage = userSpecialPermissions && userSpecialPermissions.max_coverage || parameterSettings && parameterSettings.settings.default_coverage || 150;\n                  return /*#__PURE__*/_jsxDEV(TableRow, {\n                    hover: true,\n                    tabIndex: -1,\n                    role: \"checkbox\",\n                    selected: isItemSelected,\n                    \"aria-checked\": isItemSelected,\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      padding: \"checkbox\",\n                      children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                        checked: isItemSelected,\n                        onChange: event => handleClick(event, name)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 294,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 293,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      component: \"th\",\n                      align: \"left\",\n                      style: {\n                        padding: '0'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        noWrap: true,\n                        component: RouterLink,\n                        to: `${PATH_DASHBOARD.user.root}/${paramCase(_id)}/details`,\n                        style: {\n                          color: 'unset',\n                          textDecorationLine: 'none',\n                          maxWidth: '150px',\n                          display: 'block'\n                        },\n                        children: email\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 297,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 296,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      component: \"th\",\n                      scope: \"row\",\n                      padding: \"none\",\n                      align: \"left\",\n                      children: /*#__PURE__*/_jsxDEV(Stack, {\n                        direction: \"row\",\n                        alignItems: \"center\",\n                        spacing: 2,\n                        component: RouterLink,\n                        to: `${PATH_DASHBOARD.user.root}/${paramCase(_id)}/details`,\n                        style: {\n                          color: 'unset',\n                          textDecorationLine: 'none'\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                          alt: name,\n                          src: avatarImgSrc\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 316,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          noWrap: true,\n                          children: name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 317,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 308,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 307,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"left\",\n                      style: {\n                        padding: '0'\n                      },\n                      children: displayRole\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: [credit || 0, \" %\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 325,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: [balanceCurrency || '$', \" \", balance || 0]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 326,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"left\",\n                      children: /*#__PURE__*/_jsxDEV(Label, {\n                        variant: theme.palette.mode === 'light' ? 'ghost' : 'filled',\n                        color: !online && 'warning' || 'success',\n                        children: online ? 'online' : 'offline'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 338,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 337,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"left\",\n                      children: role !== 'admin' && displayMaxCoverage || 'all'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 345,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"left\",\n                      children: country\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 346,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: /*#__PURE__*/_jsxDEV(UserMoreMenu, {\n                        onDelete: () => onDeleteUser(_id),\n                        userName: name,\n                        userId: _id\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 349,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 348,\n                      columnNumber: 25\n                    }, this)]\n                  }, _id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 23\n                  }, this);\n                }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n                  style: {\n                    height: 53 * emptyRows\n                  },\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: 6\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this), isUserNotFound && /*#__PURE__*/_jsxDEV(TableBody, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    colSpan: 6,\n                    sx: {\n                      py: 3\n                    },\n                    children: /*#__PURE__*/_jsxDEV(SearchNotFound, {\n                      searchQuery: `${filterName}, ${filterEmail}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 364,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [25, 50, 100],\n          component: \"div\",\n          count: userList.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: handleChangePage,\n          onRowsPerPageChange: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), openDeleteConfirm && /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n        message: \"Are you sure you are going to delete this user?\",\n        onConfirm: () => handleDeleteUser(handleUserId),\n        onClose: handleCloseDeleteConfirm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["E:/projects/localtalk.mobi/mobilechat-adminpanel/src/pages/dashboard/UserList.js"],"names":["filter","Icon","sentenceCase","paramCase","useState","useEffect","useSnackbar","plusFill","Link","RouterLink","useTheme","Card","Table","Stack","Avatar","Button","Checkbox","TableRow","TableBody","TableCell","Container","Typography","TableContainer","TablePagination","Dialog","DialogTitle","DialogContent","DialogActions","Box","IconButton","Close","axios","useDispatch","useSelector","getUserList","deleteUser","getSpecialPermssionList","getSettingsList","PATH_DASHBOARD","useSettings","useAuth","Page","Label","Scrollbar","SearchNotFound","HeaderBreadcrumbs","UserListHead","UserListToolbar","UserMoreMenu","ConfirmDialog","serverConfig","TABLE_HEAD","id","label","alignRight","descendingComparator","a","b","orderBy","getComparator","order","applySortFilter","array","comparator","query","stabilizedThis","map","el","index","sort","_user","filterName","name","toLowerCase","indexOf","filterEmail","email","UserList","themeStretch","theme","dispatch","user","logout","userList","specialPermissionList","state","page","setPage","setOrder","selected","setSelected","setOrderBy","setFilterName","setFilterEmail","rowsPerPage","setRowsPerPage","localStorage","getItem","Number","openDeleteConfirm","setOpenDeleteConfirm","handleUserId","setHandleUserId","enqueueSnackbar","settingsList","setting","parameterSettings","find","settingRow","type","handleCloseDeleteConfirm","handleRequestSort","event","property","isAsc","handleSelectAllClick","target","checked","newSelecteds","n","handleClick","selectedIndex","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","setItem","handleFilterByName","handleFilterByEmail","onDeleteUser","userId","_id","variant","handleDeleteUser","delete","emptyRows","Math","max","filteredUsers","isUserNotFound","href","root","newUser","minWidth","row","avatarUrl","role","credit","balanceCurrency","balance","status","isVerified","address","coverage","country","online","userSpecialPermissions","specialPermssion","displayRole","isItemSelected","avatarImgSrc","baseUrl","displayMaxCoverage","max_coverage","settings","default_coverage","padding","color","textDecorationLine","maxWidth","display","palette","mode","height","py"],"mappings":"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","sourcesContent":["import { filter } from 'lodash';\r\nimport { Icon } from '@iconify/react';\r\nimport { sentenceCase, paramCase } from 'change-case';\r\nimport { useState, useEffect } from 'react';\r\nimport { useSnackbar } from 'notistack5';\r\nimport plusFill from '@iconify/icons-eva/plus-fill';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// material\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport {\r\n  Card,\r\n  Table,\r\n  Stack,\r\n  Avatar,\r\n  Button,\r\n  Checkbox,\r\n  TableRow,\r\n  TableBody,\r\n  TableCell,\r\n  Container,\r\n  Typography,\r\n  TableContainer,\r\n  TablePagination,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Box,\r\n  IconButton\r\n} from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\nimport axios from '../../utils/axios';\r\n// redux\r\nimport { useDispatch, useSelector } from '../../redux/store';\r\nimport { getUserList, deleteUser, getSpecialPermssionList } from '../../redux/slices/user';\r\nimport { getSettingsList } from '../../redux/slices/settings';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// hooks\r\nimport useSettings from '../../hooks/useSettings';\r\nimport useAuth from '../../hooks/useAuth';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport Label from '../../components/Label';\r\nimport Scrollbar from '../../components/Scrollbar';\r\nimport SearchNotFound from '../../components/SearchNotFound';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\nimport { UserListHead, UserListToolbar, UserMoreMenu } from '../../components/_dashboard/user/list';\r\nimport ConfirmDialog from '../../components/ConfirmDialog';\r\nimport { serverConfig } from '../../config';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'email', label: 'Account(Email)', alignRight: false },\r\n  { id: 'name', label: 'Nickname', alignRight: false },\r\n  { id: 'role', label: 'Role', alignRight: false },\r\n  { id: 'credit', label: 'Credit', alignRight: false },\r\n  { id: 'balance', label: 'Balance', alignRight: false },\r\n  { id: 'status', label: 'Status', alignRight: false },\r\n  { id: 'max_coverage', label: 'Max Coverage', alignRight: false },\r\n  { id: 'country', label: 'Location', alignRight: false },\r\n  { id: 'operation', label: 'Operation', alignRight: false }\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction applySortFilter(array, comparator, query) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  if (query) {\r\n    array = stabilizedThis.map((el) => el[0]);\r\n    return filter(array, (_user) => {\r\n      if (query.filterName && _user.name.toLowerCase().indexOf(query.filterName.toLowerCase()) === -1) {\r\n        return false;\r\n      }\r\n      if (query.filterEmail && _user.email.toLowerCase().indexOf(query.filterEmail.toLowerCase()) === -1) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n  }\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nexport default function UserList() {\r\n  const { themeStretch } = useSettings();\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  const { user, logout } = useAuth();\r\n  const { userList, specialPermissionList } = useSelector((state) => state.user);\r\n  const [page, setPage] = useState(0);\r\n  const [order, setOrder] = useState('asc');\r\n  const [selected, setSelected] = useState([]);\r\n  const [orderBy, setOrderBy] = useState('role');\r\n  const [filterName, setFilterName] = useState('');\r\n  const [filterEmail, setFilterEmail] = useState('');\r\n  const [rowsPerPage, setRowsPerPage] = useState(\r\n    localStorage.getItem('userlist_rows_per_page') ? Number(localStorage.getItem('userlist_rows_per_page')) : 25\r\n  );\r\n  const [openDeleteConfirm, setOpenDeleteConfirm] = useState(false);\r\n  const [handleUserId, setHandleUserId] = useState(null);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const { settingsList } = useSelector((state) => state.setting);\r\n  const parameterSettings = settingsList.find((settingRow) => settingRow.type === 'parameter');\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserList());\r\n    dispatch(getSpecialPermssionList());\r\n    dispatch(getSettingsList());\r\n  }, [dispatch]);\r\n\r\n  const handleCloseDeleteConfirm = () => {\r\n    setOpenDeleteConfirm(false);\r\n  };\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = userList.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    localStorage.setItem('userlist_rows_per_page', parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleFilterByName = (event) => {\r\n    setFilterName(event.target.value);\r\n  };\r\n\r\n  const handleFilterByEmail = (event) => {\r\n    setFilterEmail(event.target.value);\r\n  };\r\n\r\n  const onDeleteUser = async (userId) => {\r\n    if (userId !== user._id) {\r\n      setHandleUserId(userId);\r\n      setOpenDeleteConfirm(true);\r\n    } else {\r\n      enqueueSnackbar(\"You can't delete this user you logged in\", { variant: 'warning' });\r\n    }\r\n  };\r\n\r\n  const handleDeleteUser = async (userId) => {\r\n    if (userId !== user._id) {\r\n      dispatch(deleteUser(userId));\r\n      await axios.delete(`user/delete/${userId}`);\r\n      setHandleUserId(null);\r\n    }\r\n  };\r\n\r\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - userList.length) : 0;\r\n  const filteredUsers = applySortFilter(userList, getComparator(order, orderBy), {\r\n    filterName,\r\n    filterEmail\r\n  });\r\n\r\n  const isUserNotFound = filteredUsers.length === 0;\r\n\r\n  return (\r\n    <Page title=\"User: List | Locals\">\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <HeaderBreadcrumbs\r\n          heading=\"User List\"\r\n          links={[\r\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\r\n            { name: 'User', href: PATH_DASHBOARD.user.root },\r\n            { name: 'List' }\r\n          ]}\r\n          action={\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              to={PATH_DASHBOARD.user.newUser}\r\n              startIcon={<Icon icon={plusFill} />}\r\n            >\r\n              New User\r\n            </Button>\r\n          }\r\n        />\r\n\r\n        <Card>\r\n          <UserListToolbar\r\n            numSelected={selected.length}\r\n            filterName={filterName}\r\n            onFilterName={handleFilterByName}\r\n            filterEmail={filterEmail}\r\n            onFilterEmail={handleFilterByEmail}\r\n          />\r\n\r\n          <Scrollbar>\r\n            <TableContainer sx={{ minWidth: 800 }}>\r\n              <Table>\r\n                <UserListHead\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={userList.length}\r\n                  numSelected={selected.length}\r\n                  onRequestSort={handleRequestSort}\r\n                  onSelectAllClick={handleSelectAllClick}\r\n                />\r\n                <TableBody>\r\n                  {filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                    const {\r\n                      _id,\r\n                      email,\r\n                      name,\r\n                      avatarUrl,\r\n                      role,\r\n                      credit,\r\n                      balanceCurrency,\r\n                      balance,\r\n                      status,\r\n                      isVerified,\r\n                      address,\r\n                      coverage,\r\n                      country,\r\n                      online\r\n                    } = row;\r\n                    const userSpecialPermissions = specialPermissionList.find(\r\n                      (specialPermssion) => specialPermssion.userId && paramCase(specialPermssion.userId) === _id\r\n                    );\r\n                    const displayRole =\r\n                      (role === 'user' || role === 's-user') && userSpecialPermissions ? 's-user' : role;\r\n                    const isItemSelected = selected.indexOf(name) !== -1;\r\n                    const avatarImgSrc = `${serverConfig.baseUrl}/user/img-src/${avatarUrl}`;\r\n                    const displayMaxCoverage =\r\n                      (userSpecialPermissions && userSpecialPermissions.max_coverage) ||\r\n                      (parameterSettings && parameterSettings.settings.default_coverage) ||\r\n                      150;\r\n\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        key={_id}\r\n                        tabIndex={-1}\r\n                        role=\"checkbox\"\r\n                        selected={isItemSelected}\r\n                        aria-checked={isItemSelected}\r\n                      >\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox checked={isItemSelected} onChange={(event) => handleClick(event, name)} />\r\n                        </TableCell>\r\n                        <TableCell component=\"th\" align=\"left\" style={{ padding: '0' }}>\r\n                          <Typography\r\n                            variant=\"body2\"\r\n                            noWrap\r\n                            component={RouterLink}\r\n                            to={`${PATH_DASHBOARD.user.root}/${paramCase(_id)}/details`}\r\n                            style={{ color: 'unset', textDecorationLine: 'none', maxWidth: '150px', display: 'block' }}\r\n                          >\r\n                            {email}\r\n                          </Typography>\r\n                        </TableCell>\r\n                        <TableCell component=\"th\" scope=\"row\" padding=\"none\" align=\"left\">\r\n                          <Stack\r\n                            direction=\"row\"\r\n                            alignItems=\"center\"\r\n                            spacing={2}\r\n                            component={RouterLink}\r\n                            to={`${PATH_DASHBOARD.user.root}/${paramCase(_id)}/details`}\r\n                            style={{ color: 'unset', textDecorationLine: 'none' }}\r\n                          >\r\n                            <Avatar alt={name} src={avatarImgSrc} />\r\n                            <Typography variant=\"body2\" noWrap>\r\n                              {name}\r\n                            </Typography>\r\n                          </Stack>\r\n                        </TableCell>\r\n                        <TableCell align=\"left\" style={{ padding: '0' }}>\r\n                          {displayRole}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{credit || 0} %</TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {balanceCurrency || '$'} {balance || 0}\r\n                        </TableCell>\r\n                        {/* <TableCell align=\"left\">\r\n                          <Label\r\n                            variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}\r\n                            color={(status === 'banned' && 'error') || 'success'}\r\n                          >\r\n                            {sentenceCase(status)}\r\n                          </Label>\r\n                        </TableCell> */}\r\n                        <TableCell align=\"left\">\r\n                          <Label\r\n                            variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}\r\n                            color={(!online && 'warning') || 'success'}\r\n                          >\r\n                            {online ? 'online' : 'offline'}\r\n                          </Label>\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">{(role !== 'admin' && displayMaxCoverage) || 'all'}</TableCell>\r\n                        <TableCell align=\"left\">{country}</TableCell>\r\n\r\n                        <TableCell align=\"right\">\r\n                          <UserMoreMenu onDelete={() => onDeleteUser(_id)} userName={name} userId={_id} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                  {emptyRows > 0 && (\r\n                    <TableRow style={{ height: 53 * emptyRows }}>\r\n                      <TableCell colSpan={6} />\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n                {isUserNotFound && (\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\r\n                        <SearchNotFound searchQuery={`${filterName}, ${filterEmail}`} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                )}\r\n              </Table>\r\n            </TableContainer>\r\n          </Scrollbar>\r\n\r\n          <TablePagination\r\n            rowsPerPageOptions={[25, 50, 100]}\r\n            component=\"div\"\r\n            count={userList.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Card>\r\n        {openDeleteConfirm && (\r\n          <ConfirmDialog\r\n            message=\"Are you sure you are going to delete this user?\"\r\n            onConfirm={() => handleDeleteUser(handleUserId)}\r\n            onClose={handleCloseDeleteConfirm}\r\n          />\r\n        )}\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}