{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\localtalk.mobi\\\\mobilechat-adminpanel\\\\src\\\\components\\\\_dashboard\\\\chat\\\\ChatSidebar.js\";\nimport { Icon } from '@iconify/react';\nimport { useState, useEffect } from 'react';\nimport editFill from '@iconify/icons-eva/edit-fill';\nimport { useNavigate, Link as RouterLink } from 'react-router-dom';\nimport arrowIosBackFill from '@iconify/icons-eva/arrow-ios-back-fill';\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill'; // material\n\nimport { useTheme, styled } from '@material-ui/core/styles';\nimport { Box, useMediaQuery } from '@material-ui/core'; // redux\n\nimport { useSelector } from '../../../redux/store'; // utils\n\nimport axios from '../../../utils/axios'; // routes\n\nimport { PATH_DASHBOARD } from '../../../routes/paths'; //\n\nimport { MIconButton } from '../../@material-extend';\nimport Scrollbar from '../../Scrollbar';\nimport ChatAccount from './ChatAccount';\nimport ChatSearchResults from './ChatSearchResults';\nimport ChatContactSearch from './ChatContactSearch';\nimport ChatConversationList from './ChatConversationList'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RootStyle = styled('div')(({\n  theme\n}) => ({\n  width: 320,\n  flexShrink: 0,\n  display: 'flex',\n  flexDirection: 'column',\n  transition: theme.transitions.create('width'),\n  borderRight: `1px solid ${theme.palette.divider}`\n})); // ----------------------------------------------------------------------\n\nexport default function ChatSidebar() {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n  const [openSidebar, setOpenSidebar] = useState(true);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearchFocused, setSearchFocused] = useState(false);\n  const displayResults = searchQuery && isSearchFocused;\n  const {\n    conversations,\n    activeConversationId\n  } = useSelector(state => state.chat);\n  console.log(activeConversationId);\n  useEffect(() => {\n    if (isMobile) {\n      return setOpenSidebar(false);\n    }\n\n    return setOpenSidebar(true);\n  }, [isMobile]); // eslint-disable-next-line consistent-return\n\n  useEffect(() => {\n    if (!openSidebar) {\n      return setSearchFocused(false);\n    }\n  }, [openSidebar]);\n\n  const handleClickAwaySearch = () => {\n    setSearchFocused(false);\n    setSearchQuery('');\n  };\n\n  const handleChangeSearch = async event => {\n    try {\n      const {\n        value\n      } = event.target;\n      setSearchQuery(value);\n\n      if (value) {\n        const response = await axios.get('/chat/search', {\n          params: {\n            query: value\n          }\n        });\n        setSearchResults(response.data.results);\n      } else {\n        setSearchResults([]);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleSearchFocus = () => {\n    setSearchFocused(true);\n  };\n\n  const handleSearchSelect = username => {\n    setSearchFocused(false);\n    setSearchQuery('');\n    navigate(`${PATH_DASHBOARD.chat.root}/${username}`);\n  };\n\n  const handleSelectContact = result => {\n    if (handleSearchSelect) {\n      handleSearchSelect(result.username);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(RootStyle, {\n    sx: { ...(!openSidebar && {\n        width: 96\n      })\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        py: 2,\n        px: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [openSidebar && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(MIconButton, {\n          onClick: () => setOpenSidebar(!openSidebar),\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            width: 20,\n            height: 20,\n            icon: openSidebar ? arrowIosBackFill : arrowIosForwardFill\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), openSidebar && /*#__PURE__*/_jsxDEV(ChatContactSearch, {\n        query: searchQuery,\n        onFocus: handleSearchFocus,\n        onChange: handleChangeSearch,\n        onClickAway: handleClickAwaySearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Scrollbar, {\n      children: !displayResults ? /*#__PURE__*/_jsxDEV(ChatConversationList, {\n        conversations: conversations,\n        isOpenSidebar: openSidebar,\n        activeConversationId: activeConversationId,\n        sx: { ...(isSearchFocused && {\n            display: 'none'\n          })\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ChatSearchResults, {\n        query: searchQuery,\n        results: searchResults,\n        onSelectContact: handleSelectContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["E:/projects/localtalk.mobi/mobilechat-adminpanel/src/components/_dashboard/chat/ChatSidebar.js"],"names":["Icon","useState","useEffect","editFill","useNavigate","Link","RouterLink","arrowIosBackFill","arrowIosForwardFill","useTheme","styled","Box","useMediaQuery","useSelector","axios","PATH_DASHBOARD","MIconButton","Scrollbar","ChatAccount","ChatSearchResults","ChatContactSearch","ChatConversationList","RootStyle","theme","width","flexShrink","display","flexDirection","transition","transitions","create","borderRight","palette","divider","ChatSidebar","navigate","isMobile","breakpoints","down","openSidebar","setOpenSidebar","searchQuery","setSearchQuery","searchResults","setSearchResults","isSearchFocused","setSearchFocused","displayResults","conversations","activeConversationId","state","chat","console","log","handleClickAwaySearch","handleChangeSearch","event","value","target","response","get","params","query","data","results","error","handleSearchFocus","handleSearchSelect","username","root","handleSelectContact","result","py","px","alignItems","flexGrow"],"mappings":"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","sourcesContent":["import { Icon } from '@iconify/react';\r\nimport { useState, useEffect } from 'react';\r\nimport editFill from '@iconify/icons-eva/edit-fill';\r\n\r\nimport { useNavigate, Link as RouterLink } from 'react-router-dom';\r\nimport arrowIosBackFill from '@iconify/icons-eva/arrow-ios-back-fill';\r\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\r\n// material\r\nimport { useTheme, styled } from '@material-ui/core/styles';\r\nimport { Box, useMediaQuery } from '@material-ui/core';\r\n// redux\r\nimport { useSelector } from '../../../redux/store';\r\n// utils\r\nimport axios from '../../../utils/axios';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n//\r\nimport { MIconButton } from '../../@material-extend';\r\nimport Scrollbar from '../../Scrollbar';\r\nimport ChatAccount from './ChatAccount';\r\nimport ChatSearchResults from './ChatSearchResults';\r\nimport ChatContactSearch from './ChatContactSearch';\r\nimport ChatConversationList from './ChatConversationList';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  width: 320,\r\n  flexShrink: 0,\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  transition: theme.transitions.create('width'),\r\n  borderRight: `1px solid ${theme.palette.divider}`\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ChatSidebar() {\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\r\n  const [openSidebar, setOpenSidebar] = useState(true);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [isSearchFocused, setSearchFocused] = useState(false);\r\n  const displayResults = searchQuery && isSearchFocused;\r\n  const { conversations, activeConversationId } = useSelector((state) => state.chat);\r\n  console.log(activeConversationId);\r\n\r\n  useEffect(() => {\r\n    if (isMobile) {\r\n      return setOpenSidebar(false);\r\n    }\r\n    return setOpenSidebar(true);\r\n  }, [isMobile]);\r\n\r\n  // eslint-disable-next-line consistent-return\r\n  useEffect(() => {\r\n    if (!openSidebar) {\r\n      return setSearchFocused(false);\r\n    }\r\n  }, [openSidebar]);\r\n\r\n  const handleClickAwaySearch = () => {\r\n    setSearchFocused(false);\r\n    setSearchQuery('');\r\n  };\r\n\r\n  const handleChangeSearch = async (event) => {\r\n    try {\r\n      const { value } = event.target;\r\n      setSearchQuery(value);\r\n      if (value) {\r\n        const response = await axios.get('/chat/search', {\r\n          params: { query: value }\r\n        });\r\n        setSearchResults(response.data.results);\r\n      } else {\r\n        setSearchResults([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleSearchFocus = () => {\r\n    setSearchFocused(true);\r\n  };\r\n\r\n  const handleSearchSelect = (username) => {\r\n    setSearchFocused(false);\r\n    setSearchQuery('');\r\n    navigate(`${PATH_DASHBOARD.chat.root}/${username}`);\r\n  };\r\n\r\n  const handleSelectContact = (result) => {\r\n    if (handleSearchSelect) {\r\n      handleSearchSelect(result.username);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <RootStyle sx={{ ...(!openSidebar && { width: 96 }) }}>\r\n      <Box sx={{ py: 2, px: 3 }}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n          {openSidebar && (\r\n            <>\r\n              <Box sx={{ flexGrow: 1 }} />\r\n            </>\r\n          )}\r\n\r\n          <MIconButton onClick={() => setOpenSidebar(!openSidebar)}>\r\n            <Icon width={20} height={20} icon={openSidebar ? arrowIosBackFill : arrowIosForwardFill} />\r\n          </MIconButton>\r\n        </Box>\r\n\r\n        {openSidebar && (\r\n          <ChatContactSearch\r\n            query={searchQuery}\r\n            onFocus={handleSearchFocus}\r\n            onChange={handleChangeSearch}\r\n            onClickAway={handleClickAwaySearch}\r\n          />\r\n        )}\r\n      </Box>\r\n\r\n      <Scrollbar>\r\n        {!displayResults ? (\r\n          <ChatConversationList\r\n            conversations={conversations}\r\n            isOpenSidebar={openSidebar}\r\n            activeConversationId={activeConversationId}\r\n            sx={{ ...(isSearchFocused && { display: 'none' }) }}\r\n          />\r\n        ) : (\r\n          <ChatSearchResults query={searchQuery} results={searchResults} onSelectContact={handleSelectContact} />\r\n        )}\r\n      </Scrollbar>\r\n    </RootStyle>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}