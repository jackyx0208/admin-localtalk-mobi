{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\localtalk.mobi(react+node)\\\\pro\\\\toptalk-adminpanel\\\\src\\\\pages\\\\dashboard\\\\UserDetails.js\";\nimport { useEffect } from 'react';\nimport { paramCase } from 'change-case';\nimport { useParams } from 'react-router-dom'; // material\n\nimport { Container } from '@material-ui/core'; // redux\n\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getUserList, getSpecialPermssionList } from '../../redux/slices/user';\nimport { getSettingsList } from '../../redux/slices/settings'; // routes\n\nimport { PATH_DASHBOARD } from '../../routes/paths'; // hooks\n\nimport useSettings from '../../hooks/useSettings'; // components\n\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport UserDetailsForm from '../../components/_dashboard/user/UserDetailsForm';\nimport UserSpecialPermissionsForm from '../../components/_dashboard/user/UserSpecialPermissionsForm'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserDetails() {\n  const {\n    themeStretch\n  } = useSettings();\n  const dispatch = useDispatch();\n  const {\n    userId\n  } = useParams();\n  const {\n    userList,\n    specialPermissionList\n  } = useSelector(state => state.user);\n  const currentUser = userList.find(user => paramCase(user._id) === userId);\n  const userSpecialPermissions = specialPermissionList.find(specialPermssion => paramCase(specialPermssion.userId) === userId);\n  const readOnly = true;\n  const {\n    settingsList\n  } = useSelector(state => state.setting);\n  const parameterSettings = settingsList.find(settingRow => settingRow.type === 'parameter');\n  useEffect(() => {\n    dispatch(getUserList());\n    dispatch(getSpecialPermssionList());\n    dispatch(getSettingsList());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: \"User: Create a new user | Locals\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: themeStretch ? false : 'lg',\n      children: [/*#__PURE__*/_jsxDEV(HeaderBreadcrumbs, {\n        heading: \"User Details\",\n        links: [{\n          name: 'Dashboard',\n          href: PATH_DASHBOARD.root\n        }, {\n          name: 'User',\n          href: PATH_DASHBOARD.user.list\n        }, {\n          name: `${currentUser && currentUser.name}`\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserDetailsForm, {\n        currentUser: currentUser,\n        userSpecialPermissions: userSpecialPermissions,\n        parameterSettings: parameterSettings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), userSpecialPermissions && /*#__PURE__*/_jsxDEV(UserSpecialPermissionsForm, {\n        readOnly: readOnly,\n        currentUser: currentUser,\n        userSpecialPermissions: userSpecialPermissions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["E:/projects/localtalk.mobi(react+node)/pro/toptalk-adminpanel/src/pages/dashboard/UserDetails.js"],"names":["useEffect","paramCase","useParams","Container","useDispatch","useSelector","getUserList","getSpecialPermssionList","getSettingsList","PATH_DASHBOARD","useSettings","Page","HeaderBreadcrumbs","UserDetailsForm","UserSpecialPermissionsForm","UserDetails","themeStretch","dispatch","userId","userList","specialPermissionList","state","user","currentUser","find","_id","userSpecialPermissions","specialPermssion","readOnly","settingsList","setting","parameterSettings","settingRow","type","name","href","root","list"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,QAA0B,kBAA1B,C,CACA;;AACA,SAASC,SAAT,QAA0B,mBAA1B,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,mBAAzC;AACA,SAASC,WAAT,EAAsBC,uBAAtB,QAAqD,yBAArD;AACA,SAASC,eAAT,QAAgC,6BAAhC,C,CACA;;AACA,SAASC,cAAT,QAA+B,oBAA/B,C,CACA;;AACA,OAAOC,WAAP,MAAwB,yBAAxB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;AACA,OAAOC,eAAP,MAA4B,kDAA5B;AACA,OAAOC,0BAAP,MAAuC,6DAAvC,C,CAEA;;;AAEA,eAAe,SAASC,WAAT,GAAuB;AACpC,QAAM;AAAEC,IAAAA;AAAF,MAAmBN,WAAW,EAApC;AACA,QAAMO,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAahB,SAAS,EAA5B;AACA,QAAM;AAAEiB,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAsCf,WAAW,CAAEgB,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAvD;AACA,QAAMC,WAAW,GAAGJ,QAAQ,CAACK,IAAT,CAAeF,IAAD,IAAUrB,SAAS,CAACqB,IAAI,CAACG,GAAN,CAAT,KAAwBP,MAAhD,CAApB;AACA,QAAMQ,sBAAsB,GAAGN,qBAAqB,CAACI,IAAtB,CAC5BG,gBAAD,IAAsB1B,SAAS,CAAC0B,gBAAgB,CAACT,MAAlB,CAAT,KAAuCA,MADhC,CAA/B;AAGA,QAAMU,QAAQ,GAAG,IAAjB;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAmBxB,WAAW,CAAEgB,KAAD,IAAWA,KAAK,CAACS,OAAlB,CAApC;AACA,QAAMC,iBAAiB,GAAGF,YAAY,CAACL,IAAb,CAAmBQ,UAAD,IAAgBA,UAAU,CAACC,IAAX,KAAoB,WAAtD,CAA1B;AAEAjC,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,QAAQ,CAACX,WAAW,EAAZ,CAAR;AACAW,IAAAA,QAAQ,CAACV,uBAAuB,EAAxB,CAAR;AACAU,IAAAA,QAAQ,CAACT,eAAe,EAAhB,CAAR;AACD,GAJQ,EAIN,CAACS,QAAD,CAJM,CAAT;AAMA,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAC,kCAAZ;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAED,YAAY,GAAG,KAAH,GAAW,IAA5C;AAAA,8BACE,QAAC,iBAAD;AACE,QAAA,OAAO,EAAC,cADV;AAEE,QAAA,KAAK,EAAE,CACL;AAAEkB,UAAAA,IAAI,EAAE,WAAR;AAAqBC,UAAAA,IAAI,EAAE1B,cAAc,CAAC2B;AAA1C,SADK,EAEL;AAAEF,UAAAA,IAAI,EAAE,MAAR;AAAgBC,UAAAA,IAAI,EAAE1B,cAAc,CAACa,IAAf,CAAoBe;AAA1C,SAFK,EAGL;AAAEH,UAAAA,IAAI,EAAG,GAAEX,WAAW,IAAIA,WAAW,CAACW,IAAK;AAA3C,SAHK;AAFT;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,eAAD;AACE,QAAA,WAAW,EAAEX,WADf;AAEE,QAAA,sBAAsB,EAAEG,sBAF1B;AAGE,QAAA,iBAAiB,EAAEK;AAHrB;AAAA;AAAA;AAAA;AAAA,cAVF,EAeGL,sBAAsB,iBACrB,QAAC,0BAAD;AACE,QAAA,QAAQ,EAAEE,QADZ;AAEE,QAAA,WAAW,EAAEL,WAFf;AAGE,QAAA,sBAAsB,EAAEG;AAH1B;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD","sourcesContent":["import { useEffect } from 'react';\r\nimport { paramCase } from 'change-case';\r\nimport { useParams } from 'react-router-dom';\r\n// material\r\nimport { Container } from '@material-ui/core';\r\n// redux\r\nimport { useDispatch, useSelector } from '../../redux/store';\r\nimport { getUserList, getSpecialPermssionList } from '../../redux/slices/user';\r\nimport { getSettingsList } from '../../redux/slices/settings';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// hooks\r\nimport useSettings from '../../hooks/useSettings';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\nimport UserDetailsForm from '../../components/_dashboard/user/UserDetailsForm';\r\nimport UserSpecialPermissionsForm from '../../components/_dashboard/user/UserSpecialPermissionsForm';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UserDetails() {\r\n  const { themeStretch } = useSettings();\r\n  const dispatch = useDispatch();\r\n  const { userId } = useParams();\r\n  const { userList, specialPermissionList } = useSelector((state) => state.user);\r\n  const currentUser = userList.find((user) => paramCase(user._id) === userId);\r\n  const userSpecialPermissions = specialPermissionList.find(\r\n    (specialPermssion) => paramCase(specialPermssion.userId) === userId\r\n  );\r\n  const readOnly = true;\r\n\r\n  const { settingsList } = useSelector((state) => state.setting);\r\n  const parameterSettings = settingsList.find((settingRow) => settingRow.type === 'parameter');\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserList());\r\n    dispatch(getSpecialPermssionList());\r\n    dispatch(getSettingsList());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Page title=\"User: Create a new user | Locals\">\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <HeaderBreadcrumbs\r\n          heading=\"User Details\"\r\n          links={[\r\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\r\n            { name: 'User', href: PATH_DASHBOARD.user.list },\r\n            { name: `${currentUser && currentUser.name}` }\r\n          ]}\r\n        />\r\n\r\n        <UserDetailsForm\r\n          currentUser={currentUser}\r\n          userSpecialPermissions={userSpecialPermissions}\r\n          parameterSettings={parameterSettings}\r\n        />\r\n        {userSpecialPermissions && (\r\n          <UserSpecialPermissionsForm\r\n            readOnly={readOnly}\r\n            currentUser={currentUser}\r\n            userSpecialPermissions={userSpecialPermissions}\r\n          />\r\n        )}\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}