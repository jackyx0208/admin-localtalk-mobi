{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\localtalk.mobi\\\\mobilechat-adminpanel\\\\src\\\\components\\\\_dashboard\\\\mail\\\\MailSidebar.js\";\nimport { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useLocation } from 'react-router-dom';\nimport plusFill from '@iconify/icons-eva/plus-fill'; // material\n\nimport { Box, List, Drawer, Button, Divider } from '@material-ui/core'; // redux\n\nimport { useSelector } from '../../../redux/store'; //\n\nimport Scrollbar from '../../Scrollbar';\nimport { MHidden } from '../../@material-extend';\nimport MailSidebarItem from './MailSidebarItem'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nMailSidebar.propTypes = {\n  isOpenSidebar: PropTypes.bool,\n  onOpenCompose: PropTypes.func,\n  onCloseSidebar: PropTypes.func\n};\nexport default function MailSidebar({\n  isOpenSidebar,\n  onOpenCompose,\n  onCloseSidebar\n}) {\n  const {\n    pathname\n  } = useLocation();\n  const {\n    labels\n  } = useSelector(state => state.mail);\n  useEffect(() => {\n    if (isOpenSidebar) {\n      onCloseSidebar();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [pathname]);\n\n  const handleOpenCompose = () => {\n    onCloseSidebar();\n    onOpenCompose();\n  };\n\n  const renderContent = /*#__PURE__*/_jsxDEV(Scrollbar, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(Icon, {\n          icon: plusFill\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 58\n        }, this),\n        onClick: handleOpenCompose,\n        children: \"Compose\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      disablePadding: true,\n      children: labels.map(label => /*#__PURE__*/_jsxDEV(MailSidebarItem, {\n        label: label\n      }, label.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MHidden, {\n      width: \"mdUp\",\n      children: /*#__PURE__*/_jsxDEV(Drawer, {\n        open: isOpenSidebar,\n        onClose: onCloseSidebar,\n        ModalProps: {\n          keepMounted: true\n        },\n        PaperProps: {\n          sx: {\n            width: 280\n          }\n        },\n        children: renderContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MHidden, {\n      width: \"mdDown\",\n      children: /*#__PURE__*/_jsxDEV(Drawer, {\n        variant: \"permanent\",\n        PaperProps: {\n          sx: {\n            width: 280,\n            position: 'relative'\n          }\n        },\n        children: renderContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["E:/projects/localtalk.mobi/mobilechat-adminpanel/src/components/_dashboard/mail/MailSidebar.js"],"names":["useEffect","PropTypes","Icon","useLocation","plusFill","Box","List","Drawer","Button","Divider","useSelector","Scrollbar","MHidden","MailSidebarItem","MailSidebar","propTypes","isOpenSidebar","bool","onOpenCompose","func","onCloseSidebar","pathname","labels","state","mail","handleOpenCompose","renderContent","p","map","label","id","keepMounted","sx","width","position"],"mappings":"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","sourcesContent":["import { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport plusFill from '@iconify/icons-eva/plus-fill';\r\n// material\r\nimport { Box, List, Drawer, Button, Divider } from '@material-ui/core';\r\n// redux\r\nimport { useSelector } from '../../../redux/store';\r\n//\r\nimport Scrollbar from '../../Scrollbar';\r\nimport { MHidden } from '../../@material-extend';\r\nimport MailSidebarItem from './MailSidebarItem';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nMailSidebar.propTypes = {\r\n  isOpenSidebar: PropTypes.bool,\r\n  onOpenCompose: PropTypes.func,\r\n  onCloseSidebar: PropTypes.func\r\n};\r\n\r\nexport default function MailSidebar({ isOpenSidebar, onOpenCompose, onCloseSidebar }) {\r\n  const { pathname } = useLocation();\r\n  const { labels } = useSelector((state) => state.mail);\r\n\r\n  useEffect(() => {\r\n    if (isOpenSidebar) {\r\n      onCloseSidebar();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pathname]);\r\n\r\n  const handleOpenCompose = () => {\r\n    onCloseSidebar();\r\n    onOpenCompose();\r\n  };\r\n\r\n  const renderContent = (\r\n    <Scrollbar>\r\n      <Box sx={{ p: 3 }}>\r\n        <Button fullWidth variant=\"contained\" startIcon={<Icon icon={plusFill} />} onClick={handleOpenCompose}>\r\n          Compose\r\n        </Button>\r\n      </Box>\r\n\r\n      <Divider />\r\n\r\n      <List disablePadding>\r\n        {labels.map((label) => (\r\n          <MailSidebarItem key={label.id} label={label} />\r\n        ))}\r\n      </List>\r\n    </Scrollbar>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <MHidden width=\"mdUp\">\r\n        <Drawer\r\n          open={isOpenSidebar}\r\n          onClose={onCloseSidebar}\r\n          ModalProps={{ keepMounted: true }}\r\n          PaperProps={{ sx: { width: 280 } }}\r\n        >\r\n          {renderContent}\r\n        </Drawer>\r\n      </MHidden>\r\n\r\n      <MHidden width=\"mdDown\">\r\n        <Drawer variant=\"permanent\" PaperProps={{ sx: { width: 280, position: 'relative' } }}>\r\n          {renderContent}\r\n        </Drawer>\r\n      </MHidden>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}