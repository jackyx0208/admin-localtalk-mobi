{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\localtalk.mobi(back)\\\\pro\\\\toptalk-adminpanel\\\\src\\\\components\\\\carousel\\\\CarouselBasic2.js\",\n    _s = $RefreshSig$();\n\nimport Slider from 'react-slick';\nimport PropTypes from 'prop-types';\nimport { useState, useRef } from 'react'; // material\n\nimport { useTheme } from '@material-ui/core/styles';\nimport { Box, Card, Typography, CardContent } from '@material-ui/core'; // utils\n\nimport mockData from '../../utils/mock-data'; //\n\nimport { CarouselControlsArrowsIndex } from './controls'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MOCK_CAROUSELS = [...Array(5)].map(_c = (_, index) => ({\n  id: mockData.id(index),\n  title: mockData.text.title(index),\n  image: mockData.image.feed(index),\n  description: mockData.text.description(index)\n}));\n_c2 = MOCK_CAROUSELS;\nCarouselItem.propTypes = {\n  item: PropTypes.object\n};\n\nfunction CarouselItem({\n  item\n}) {\n  const {\n    image,\n    title,\n    description\n  } = item;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      component: \"img\",\n      alt: title,\n      src: image,\n      sx: {\n        width: '100%',\n        height: 370,\n        objectFit: 'cover'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        textAlign: 'left'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        noWrap: true,\n        gutterBottom: true,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          color: 'text.secondary'\n        },\n        noWrap: true,\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c3 = CarouselItem;\nexport default function CarouselBasic2() {\n  _s();\n\n  const theme = useTheme();\n  const carouselRef = useRef();\n  const [currentIndex, setCurrentIndex] = useState(2);\n  const settings = {\n    dots: false,\n    arrows: false,\n    autoplay: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    initialSlide: currentIndex,\n    fade: Boolean(theme.direction !== 'rtl'),\n    rtl: Boolean(theme.direction === 'rtl'),\n    beforeChange: (current, next) => setCurrentIndex(next)\n  };\n\n  const handlePrevious = () => {\n    carouselRef.current.slickPrev();\n  };\n\n  const handleNext = () => {\n    carouselRef.current.slickNext();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Slider, {\n      ref: carouselRef,\n      ...settings,\n      children: MOCK_CAROUSELS.map(item => /*#__PURE__*/_jsxDEV(CarouselItem, {\n        item: item\n      }, item.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CarouselControlsArrowsIndex, {\n      index: currentIndex,\n      total: MOCK_CAROUSELS.length,\n      onNext: handleNext,\n      onPrevious: handlePrevious,\n      sx: {\n        bottom: 120\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CarouselBasic2, \"yUua/nvpmZjNpnPpAhi5677+nfE=\", false, function () {\n  return [useTheme];\n});\n\n_c4 = CarouselBasic2;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"MOCK_CAROUSELS$[...Array(5)].map\");\n$RefreshReg$(_c2, \"MOCK_CAROUSELS\");\n$RefreshReg$(_c3, \"CarouselItem\");\n$RefreshReg$(_c4, \"CarouselBasic2\");","map":{"version":3,"sources":["E:/projects/localtalk.mobi(back)/pro/toptalk-adminpanel/src/components/carousel/CarouselBasic2.js"],"names":["Slider","PropTypes","useState","useRef","useTheme","Box","Card","Typography","CardContent","mockData","CarouselControlsArrowsIndex","MOCK_CAROUSELS","Array","map","_","index","id","title","text","image","feed","description","CarouselItem","propTypes","item","object","width","height","objectFit","textAlign","color","CarouselBasic2","theme","carouselRef","currentIndex","setCurrentIndex","settings","dots","arrows","autoplay","slidesToShow","slidesToScroll","initialSlide","fade","Boolean","direction","rtl","beforeChange","current","next","handlePrevious","slickPrev","handleNext","slickNext","length","bottom"],"mappings":"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","sourcesContent":["import Slider from 'react-slick';\r\nimport PropTypes from 'prop-types';\r\nimport { useState, useRef } from 'react';\r\n// material\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { Box, Card, Typography, CardContent } from '@material-ui/core';\r\n// utils\r\nimport mockData from '../../utils/mock-data';\r\n//\r\nimport { CarouselControlsArrowsIndex } from './controls';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst MOCK_CAROUSELS = [...Array(5)].map((_, index) => ({\r\n  id: mockData.id(index),\r\n  title: mockData.text.title(index),\r\n  image: mockData.image.feed(index),\r\n  description: mockData.text.description(index)\r\n}));\r\n\r\nCarouselItem.propTypes = {\r\n  item: PropTypes.object\r\n};\r\n\r\nfunction CarouselItem({ item }) {\r\n  const { image, title, description } = item;\r\n\r\n  return (\r\n    <>\r\n      <Box component=\"img\" alt={title} src={image} sx={{ width: '100%', height: 370, objectFit: 'cover' }} />\r\n\r\n      <CardContent sx={{ textAlign: 'left' }}>\r\n        <Typography variant=\"h6\" noWrap gutterBottom>\r\n          {title}\r\n        </Typography>\r\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\r\n          {description}\r\n        </Typography>\r\n      </CardContent>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default function CarouselBasic2() {\r\n  const theme = useTheme();\r\n  const carouselRef = useRef();\r\n  const [currentIndex, setCurrentIndex] = useState(2);\r\n\r\n  const settings = {\r\n    dots: false,\r\n    arrows: false,\r\n    autoplay: true,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    initialSlide: currentIndex,\r\n    fade: Boolean(theme.direction !== 'rtl'),\r\n    rtl: Boolean(theme.direction === 'rtl'),\r\n    beforeChange: (current, next) => setCurrentIndex(next)\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    carouselRef.current.slickPrev();\r\n  };\r\n\r\n  const handleNext = () => {\r\n    carouselRef.current.slickNext();\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Slider ref={carouselRef} {...settings}>\r\n        {MOCK_CAROUSELS.map((item) => (\r\n          <CarouselItem key={item.title} item={item} />\r\n        ))}\r\n      </Slider>\r\n\r\n      <CarouselControlsArrowsIndex\r\n        index={currentIndex}\r\n        total={MOCK_CAROUSELS.length}\r\n        onNext={handleNext}\r\n        onPrevious={handlePrevious}\r\n        sx={{ bottom: 120 }}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}