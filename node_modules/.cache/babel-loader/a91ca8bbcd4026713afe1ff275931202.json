{"ast":null,"code":"import{useDispatch as useReduxDispatch,useSelector as useReduxSelector}from'react-redux';import{configureStore,getDefaultMiddleware}from'@reduxjs/toolkit';import{persistStore,persistReducer}from'redux-persist';//\nimport{rootPersistConfig,rootReducer}from'./rootReducer';// ----------------------------------------------------------------------\nvar store=configureStore({reducer:persistReducer(rootPersistConfig,rootReducer),middleware:getDefaultMiddleware({serializableCheck:false,immutableCheck:false})});var persistor=persistStore(store);var useSelector=useReduxSelector;var useDispatch=function useDispatch(){return useReduxDispatch();};export{store,persistor,useSelector,useDispatch};","map":{"version":3,"sources":["E:/projects/localtalk.mobi/mobilechat-adminpanel/src/redux/store.js"],"names":["useDispatch","useReduxDispatch","useSelector","useReduxSelector","configureStore","getDefaultMiddleware","persistStore","persistReducer","rootPersistConfig","rootReducer","store","reducer","middleware","serializableCheck","immutableCheck","persistor"],"mappings":"AAAA,OAASA,WAAW,GAAIC,CAAAA,gBAAxB,CAA0CC,WAAW,GAAIC,CAAAA,gBAAzD,KAAiF,aAAjF,CACA,OAASC,cAAT,CAAyBC,oBAAzB,KAAqD,kBAArD,CACA,OAASC,YAAT,CAAuBC,cAAvB,KAA6C,eAA7C,CACA;AACA,OAASC,iBAAT,CAA4BC,WAA5B,KAA+C,eAA/C,CAEA;AAEA,GAAMC,CAAAA,KAAK,CAAGN,cAAc,CAAC,CAC3BO,OAAO,CAAEJ,cAAc,CAACC,iBAAD,CAAoBC,WAApB,CADI,CAE3BG,UAAU,CAAEP,oBAAoB,CAAC,CAC/BQ,iBAAiB,CAAE,KADY,CAE/BC,cAAc,CAAE,KAFe,CAAD,CAFL,CAAD,CAA5B,CAQA,GAAMC,CAAAA,SAAS,CAAGT,YAAY,CAACI,KAAD,CAA9B,CAEA,GAAMR,CAAAA,WAAW,CAAGC,gBAApB,CAEA,GAAMH,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAMC,CAAAA,gBAAgB,EAAtB,EAApB,CAEA,OAASS,KAAT,CAAgBK,SAAhB,CAA2Bb,WAA3B,CAAwCF,WAAxC","sourcesContent":["import { useDispatch as useReduxDispatch, useSelector as useReduxSelector } from 'react-redux';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\n//\r\nimport { rootPersistConfig, rootReducer } from './rootReducer';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst store = configureStore({\r\n  reducer: persistReducer(rootPersistConfig, rootReducer),\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: false,\r\n    immutableCheck: false\r\n  })\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst useSelector = useReduxSelector;\r\n\r\nconst useDispatch = () => useReduxDispatch();\r\n\r\nexport { store, persistor, useSelector, useDispatch };\r\n"]},"metadata":{},"sourceType":"module"}