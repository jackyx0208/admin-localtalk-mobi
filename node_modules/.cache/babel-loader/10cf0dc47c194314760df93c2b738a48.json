{"ast":null,"code":"import _objectSpread from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"E:/projects/localtalk.mobi/mobilechat-adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"conversation\",\"participants\"];import{Icon}from'@iconify/react';import{useState,useEffect}from'react';import arrowIosBackFill from'@iconify/icons-eva/arrow-ios-back-fill';import arrowIosForwardFill from'@iconify/icons-eva/arrow-ios-forward-fill';// material\nimport{useTheme,styled}from'@material-ui/core/styles';import{useMediaQuery,Divider,IconButton}from'@material-ui/core';//\nimport ChatRoomAttachment from'./ChatRoomAttachment';import ChatRoomOneParticipant from'./ChatRoomOneParticipant';import ChatRoomGroupParticipant from'./ChatRoomGroupParticipant';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RootStyle=styled('div')(function(_ref){var theme=_ref.theme;return{width:240,flexShrink:0,display:'flex',position:'relative',flexDirection:'column',borderLeft:\"solid 1px \".concat(theme.palette.divider),transition:theme.transitions.create('width')};});var ToggleButtonStyle=styled('div')(function(_ref2){var theme=_ref2.theme;return{borderRight:0,display:'flex',overflow:'hidden',position:'absolute',alignItems:'center',top:theme.spacing(1),left:theme.spacing(-4),width:theme.spacing(4),height:theme.spacing(4),justifyContent:'center',boxShadow:theme.customShadows.z8,border:\"solid 1px \".concat(theme.palette.divider),borderTopLeftRadius:theme.shape.borderRadius,backgroundColor:theme.palette.background.paper,borderBottomLeftRadius:theme.shape.borderRadius};});// ----------------------------------------------------------------------\nexport default function ChatRoom(_ref3){var conversation=_ref3.conversation,participants=_ref3.participants,other=_objectWithoutProperties(_ref3,_excluded);var theme=useTheme();var isMobile=useMediaQuery(theme.breakpoints.down('lg'));var _useState=useState(true),_useState2=_slicedToArray(_useState,2),openSidebar=_useState2[0],setOpenSidebar=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),showInfo=_useState4[0],setShowInfo=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),selectUser=_useState6[0],setSelectUser=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),showAttachment=_useState8[0],setShowAttachment=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),showParticipants=_useState10[0],setShowParticipants=_useState10[1];var isGroup=participants.length>1;useEffect(function(){if(isMobile){return setOpenSidebar(false);}return setOpenSidebar(true);},[isMobile]);return/*#__PURE__*/_jsxs(RootStyle,_objectSpread(_objectSpread({sx:_objectSpread({},!openSidebar&&{width:0,'& > *':{overflow:'hidden'}})},other),{},{children:[/*#__PURE__*/_jsx(ToggleButtonStyle,{children:/*#__PURE__*/_jsx(IconButton,{onClick:function onClick(){return setOpenSidebar(!openSidebar);},children:/*#__PURE__*/_jsx(Icon,{width:16,height:16,icon:openSidebar?arrowIosForwardFill:arrowIosBackFill})})}),isGroup?/*#__PURE__*/_jsx(ChatRoomGroupParticipant,{selectUserId:selectUser,participants:participants,isCollapse:showParticipants,onShowPopupUserInfo:function onShowPopupUserInfo(participantId){return setSelectUser(participantId);},onCollapse:function onCollapse(){return setShowParticipants(function(prev){return!prev;});}}):/*#__PURE__*/_jsx(ChatRoomOneParticipant,{participants:participants,isCollapse:showInfo,onCollapse:function onCollapse(){return setShowInfo(function(prev){return!prev;});}}),/*#__PURE__*/_jsx(Divider,{})]}));}","map":{"version":3,"sources":["E:/projects/localtalk.mobi/mobilechat-adminpanel/src/components/_dashboard/chat/ChatRoom.js"],"names":["Icon","useState","useEffect","arrowIosBackFill","arrowIosForwardFill","useTheme","styled","useMediaQuery","Divider","IconButton","ChatRoomAttachment","ChatRoomOneParticipant","ChatRoomGroupParticipant","RootStyle","theme","width","flexShrink","display","position","flexDirection","borderLeft","palette","divider","transition","transitions","create","ToggleButtonStyle","borderRight","overflow","alignItems","top","spacing","left","height","justifyContent","boxShadow","customShadows","z8","border","borderTopLeftRadius","shape","borderRadius","backgroundColor","background","paper","borderBottomLeftRadius","ChatRoom","conversation","participants","other","isMobile","breakpoints","down","openSidebar","setOpenSidebar","showInfo","setShowInfo","selectUser","setSelectUser","showAttachment","setShowAttachment","showParticipants","setShowParticipants","isGroup","length","participantId","prev"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport { useState, useEffect } from 'react';\r\nimport arrowIosBackFill from '@iconify/icons-eva/arrow-ios-back-fill';\r\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\r\n// material\r\nimport { useTheme, styled } from '@material-ui/core/styles';\r\nimport { useMediaQuery, Divider, IconButton } from '@material-ui/core';\r\n//\r\nimport ChatRoomAttachment from './ChatRoomAttachment';\r\nimport ChatRoomOneParticipant from './ChatRoomOneParticipant';\r\nimport ChatRoomGroupParticipant from './ChatRoomGroupParticipant';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  width: 240,\r\n  flexShrink: 0,\r\n  display: 'flex',\r\n  position: 'relative',\r\n  flexDirection: 'column',\r\n  borderLeft: `solid 1px ${theme.palette.divider}`,\r\n  transition: theme.transitions.create('width')\r\n}));\r\n\r\nconst ToggleButtonStyle = styled('div')(({ theme }) => ({\r\n  borderRight: 0,\r\n  display: 'flex',\r\n  overflow: 'hidden',\r\n  position: 'absolute',\r\n  alignItems: 'center',\r\n  top: theme.spacing(1),\r\n  left: theme.spacing(-4),\r\n  width: theme.spacing(4),\r\n  height: theme.spacing(4),\r\n  justifyContent: 'center',\r\n  boxShadow: theme.customShadows.z8,\r\n  border: `solid 1px ${theme.palette.divider}`,\r\n  borderTopLeftRadius: theme.shape.borderRadius,\r\n  backgroundColor: theme.palette.background.paper,\r\n  borderBottomLeftRadius: theme.shape.borderRadius\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatRoom.propTypes = {\r\n  conversation: PropTypes.object.isRequired,\r\n  participants: PropTypes.array.isRequired\r\n};\r\n\r\nexport default function ChatRoom({ conversation, participants, ...other }) {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('lg'));\r\n  const [openSidebar, setOpenSidebar] = useState(true);\r\n  const [showInfo, setShowInfo] = useState(true);\r\n  const [selectUser, setSelectUser] = useState(null);\r\n  const [showAttachment, setShowAttachment] = useState(true);\r\n  const [showParticipants, setShowParticipants] = useState(true);\r\n  const isGroup = participants.length > 1;\r\n\r\n  useEffect(() => {\r\n    if (isMobile) {\r\n      return setOpenSidebar(false);\r\n    }\r\n    return setOpenSidebar(true);\r\n  }, [isMobile]);\r\n\r\n  return (\r\n    <RootStyle\r\n      sx={{\r\n        ...(!openSidebar && {\r\n          width: 0,\r\n          '& > *': { overflow: 'hidden' }\r\n        })\r\n      }}\r\n      {...other}\r\n    >\r\n      <ToggleButtonStyle>\r\n        <IconButton onClick={() => setOpenSidebar(!openSidebar)}>\r\n          <Icon width={16} height={16} icon={openSidebar ? arrowIosForwardFill : arrowIosBackFill} />\r\n        </IconButton>\r\n      </ToggleButtonStyle>\r\n\r\n      {isGroup ? (\r\n        <ChatRoomGroupParticipant\r\n          selectUserId={selectUser}\r\n          participants={participants}\r\n          isCollapse={showParticipants}\r\n          onShowPopupUserInfo={(participantId) => setSelectUser(participantId)}\r\n          onCollapse={() => setShowParticipants((prev) => !prev)}\r\n        />\r\n      ) : (\r\n        <ChatRoomOneParticipant\r\n          participants={participants}\r\n          isCollapse={showInfo}\r\n          onCollapse={() => setShowInfo((prev) => !prev)}\r\n        />\r\n      )}\r\n      <Divider />\r\n\r\n      {/* <ChatRoomAttachment\r\n        conversation={conversation}\r\n        isCollapse={showAttachment}\r\n        onCollapse={() => setShowAttachment((prev) => !prev)}\r\n      /> */}\r\n    </RootStyle>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}